{
  "openapi": "3.0.0",
  "paths": {
    "/health": {
      "get": {
        "operationId": "check",
        "summary": "Health check endpoint",
        "parameters": [],
        "responses": {
          "200": {
            "description": "The Health Check is successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "ok"
                    },
                    "info": {
                      "type": "object",
                      "example": {
                        "database": {
                          "status": "up"
                        }
                      },
                      "additionalProperties": {
                        "type": "object",
                        "required": [
                          "status"
                        ],
                        "properties": {
                          "status": {
                            "type": "string"
                          }
                        },
                        "additionalProperties": true
                      },
                      "nullable": true
                    },
                    "error": {
                      "type": "object",
                      "example": {},
                      "additionalProperties": {
                        "type": "object",
                        "required": [
                          "status"
                        ],
                        "properties": {
                          "status": {
                            "type": "string"
                          }
                        },
                        "additionalProperties": true
                      },
                      "nullable": true
                    },
                    "details": {
                      "type": "object",
                      "example": {
                        "database": {
                          "status": "up"
                        }
                      },
                      "additionalProperties": {
                        "type": "object",
                        "required": [
                          "status"
                        ],
                        "properties": {
                          "status": {
                            "type": "string"
                          }
                        },
                        "additionalProperties": true
                      }
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "The Health Check is not successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "error"
                    },
                    "info": {
                      "type": "object",
                      "example": {
                        "database": {
                          "status": "up"
                        }
                      },
                      "additionalProperties": {
                        "type": "object",
                        "required": [
                          "status"
                        ],
                        "properties": {
                          "status": {
                            "type": "string"
                          }
                        },
                        "additionalProperties": true
                      },
                      "nullable": true
                    },
                    "error": {
                      "type": "object",
                      "example": {
                        "redis": {
                          "status": "down",
                          "message": "Could not connect"
                        }
                      },
                      "additionalProperties": {
                        "type": "object",
                        "required": [
                          "status"
                        ],
                        "properties": {
                          "status": {
                            "type": "string"
                          }
                        },
                        "additionalProperties": true
                      },
                      "nullable": true
                    },
                    "details": {
                      "type": "object",
                      "example": {
                        "database": {
                          "status": "up"
                        },
                        "redis": {
                          "status": "down",
                          "message": "Could not connect"
                        }
                      },
                      "additionalProperties": {
                        "type": "object",
                        "required": [
                          "status"
                        ],
                        "properties": {
                          "status": {
                            "type": "string"
                          }
                        },
                        "additionalProperties": true
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Health"
        ]
      }
    },
    "/auth/sign-in": {
      "post": {
        "operationId": "signIn",
        "summary": "Autenticar usu rio",
        "description": "Autentica um usu rio com email e senha.\n\n**Funcionalidades:**\n- Valida credenciais no Supabase Auth\n- Gera tokens JWT (access e refresh)\n- Envia email de alerta de login com IP, dispositivo e localiza  o\n- Suporta autentica  o em dois fatores (2FA)\n\n**Emails enviados:**\n- Email de alerta de login bem-sucedido com detalhes do acesso\n\n**Roles:** P blico",
        "parameters": [
          {
            "name": "user-agent",
            "required": true,
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "description": "Credenciais de autentica  o",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SignInDto"
              },
              "examples": {
                "example1": {
                  "summary": "Login simples",
                  "value": {
                    "email": "usuario@example.com",
                    "password": "SenhaForte123!",
                    "rememberMe": false
                  }
                },
                "example2": {
                  "summary": "Login com remember me",
                  "value": {
                    "email": "usuario@example.com",
                    "password": "SenhaForte123!",
                    "rememberMe": true,
                    "deviceInfo": {
                      "device": "Chrome on Windows"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login realizado com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SignInResponseDto"
                }
              }
            }
          },
          "401": {
            "description": "Credenciais inv lidas"
          },
          "423": {
            "description": "Conta bloqueada"
          }
        },
        "tags": [
          "Auth"
        ]
      }
    },
    "/auth/refresh": {
      "post": {
        "operationId": "refresh",
        "summary": "Renovar token de acesso",
        "description": "Usa o refresh token para obter um novo access token.\n\n**Roles:** P blico",
        "parameters": [
          {
            "name": "user-agent",
            "required": true,
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "description": "Refresh token para renova  o",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RefreshTokenDto"
              },
              "examples": {
                "example1": {
                  "summary": "Renova  o de token",
                  "value": {
                    "refreshToken": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Token renovado com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RefreshTokenResponseDto"
                }
              }
            }
          },
          "401": {
            "description": "Refresh token invalido"
          }
        },
        "tags": [
          "Auth"
        ]
      }
    },
    "/auth/verification/resend": {
      "post": {
        "operationId": "resendVerificationEmail",
        "summary": "Reenviar email de verificacao",
        "description": "Reenvia o link de verificacao para usuarios que ainda nao confirmaram o email.",
        "parameters": [
          {
            "name": "user-agent",
            "required": true,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-forwarded-for",
            "required": true,
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResendVerificationEmailDto"
              },
              "examples": {
                "default": {
                  "summary": "Reenvio padrao",
                  "value": {
                    "email": "usuario@example.com"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Resultado do reenvio",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResendVerificationEmailResponseDto"
                }
              }
            }
          }
        },
        "tags": [
          "Auth"
        ]
      }
    },
    "/auth/password/reset/request": {
      "post": {
        "operationId": "requestPasswordReset",
        "summary": "Solicitar reset de senha",
        "description": "Envia as instrucoes de redefinicao de senha para o email informado.",
        "parameters": [
          {
            "name": "user-agent",
            "required": true,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-forwarded-for",
            "required": true,
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestPasswordResetDto"
              },
              "examples": {
                "default": {
                  "summary": "Solicitacao padrao",
                  "value": {
                    "email": "usuario@example.com"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Resultado da solicitacao de reset",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RequestPasswordResetResponseDto"
                }
              }
            }
          }
        },
        "tags": [
          "Auth"
        ]
      }
    },
    "/auth/password/reset/confirm": {
      "post": {
        "operationId": "confirmPasswordReset",
        "summary": "Confirmar reset de senha",
        "description": "Confirma a redefinicao de senha a partir do token enviado pelo Supabase.",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConfirmPasswordResetDto"
              },
              "examples": {
                "default": {
                  "summary": "Confirmacao padrao",
                  "value": {
                    "accessToken": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...",
                    "newPassword": "SenhaForte123!"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Senha redefinida com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConfirmPasswordResetResponseDto"
                }
              }
            }
          }
        },
        "tags": [
          "Auth"
        ]
      }
    },
    "/auth/sign-out": {
      "post": {
        "operationId": "signOut",
        "summary": "Fazer logout",
        "description": "Encerra a sessao do usuario, invalidando tokens.\n\n**Roles:** Qualquer usuario autenticado",
        "parameters": [
          {
            "name": "authorization",
            "required": true,
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": false,
          "description": "Op  es de logout",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SignOutDto"
              },
              "examples": {
                "example1": {
                  "summary": "Logout simples",
                  "value": {}
                },
                "example2": {
                  "summary": "Logout com refresh token",
                  "value": {
                    "refreshToken": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                  }
                },
                "example3": {
                  "summary": "Logout em todos dispositivos",
                  "value": {
                    "allDevices": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Logout realizado com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SignOutResponseDto"
                }
              }
            }
          },
          "401": {
            "description": "Token invalido ou expirado"
          }
        },
        "tags": [
          "Auth"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/auth/me": {
      "get": {
        "operationId": "me",
        "summary": "Obter dados do usu rio autenticado",
        "description": "Retorna as informa  es do usu rio atualmente autenticado.\n\n**Roles:** Qualquer usu rio autenticado",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Dados do usu rio",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MeResponseDto"
                }
              }
            }
          },
          "401": {
            "description": "N o autenticado"
          }
        },
        "tags": [
          "Auth"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/auth/verify-email": {
      "get": {
        "operationId": "verifyEmail",
        "summary": "Verificar email do usu rio",
        "description": "Confirma o email do usu rio usando o token enviado por email.\n\n**Roles:** P blico",
        "parameters": [
          {
            "name": "token",
            "required": true,
            "in": "query",
            "description": "Token de verifica  o enviado por email",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "email",
            "required": true,
            "in": "query",
            "description": "Email do usu rio a ser verificado",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Email verificado com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Token invalido ou expirado"
          }
        },
        "tags": [
          "Auth"
        ]
      }
    },
    "/auth/two-factor/validate": {
      "post": {
        "operationId": "validateTwoFA",
        "summary": "Validar c digo 2FA",
        "description": "Valida o c digo de autentica  o de dois fatores e retorna os tokens de acesso.\n\n**Roles:** P blico",
        "parameters": [],
        "requestBody": {
          "required": true,
          "description": "Payload necess rio para validar o c digo 2FA gerado ap s o login.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ValidateTwoFADto"
              },
              "examples": {
                "padrao": {
                  "summary": "Valida  o padr o",
                  "value": {
                    "tempToken": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...",
                    "code": "123456",
                    "trustDevice": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Codigo 2FA validado com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidateTwoFAResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Codigo 2FA invalido"
          }
        },
        "tags": [
          "Auth - Two Factor"
        ]
      }
    },
    "/users": {
      "post": {
        "operationId": "create",
        "summary": "Criar novo usuario",
        "description": "Cadastro de novo usuario no sistema.\n\n**Funcionalidades:**\n- Cria usuario no Supabase Auth\n- Valida CPF brasileiro\n- Valida unicidade de email\n- Define role e permissoes\n- Auto-confirma email para desenvolvimento\n\n**Emails enviados:**\n- Email de verificacao com link para confirmar conta\n- Email de boas-vindas com informacoes da plataforma\n\n**Roles disponiveis:**\n- PATIENT: Paciente\n- PROFESSIONAL: Profissional de saude\n- SECRETARY: Secretaria\n- CLINIC_OWNER: Proprietario de clinica\n- SUPER_ADMIN: Administrador do sistema\n\n**Roles:** Publico",
        "parameters": [],
        "requestBody": {
          "required": true,
          "description": "Dados do novo usuario",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserInputDTO"
              },
              "examples": {
                "patient": {
                  "summary": "Paciente",
                  "value": {
                    "email": "joao.silva@email.com",
                    "password": "SenhaForte123!",
                    "name": "Joao Silva",
                    "cpf": "12345678901",
                    "phone": "11999999999",
                    "role": "PATIENT"
                  }
                },
                "professional": {
                  "summary": "Profissional",
                  "value": {
                    "email": "dra.maria@clinica.com",
                    "password": "SenhaSegura456@",
                    "name": "Dra. Maria Santos",
                    "cpf": "98765432109",
                    "phone": "11888888888",
                    "role": "PROFESSIONAL",
                    "tenantId": "550e8400-e29b-41d4-a716-446655440000"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Usuario criado com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateUserResponseDto"
                }
              }
            }
          },
          "409": {
            "description": "Email ou CPF ja cadastrado"
          }
        },
        "tags": [
          "Users"
        ]
      },
      "get": {
        "operationId": "findAll",
        "summary": "Listar todos usuarios",
        "description": "Apenas administradores podem listar todos os usuarios.\n\n**Roles:** SUPER_ADMIN, ADMIN_SUPORTE",
        "parameters": [
          {
            "name": "isActive",
            "required": false,
            "in": "query",
            "description": "Filtrar por status ativo/inativo",
            "schema": {
              "example": true,
              "type": "boolean"
            }
          },
          {
            "name": "tenantId",
            "required": false,
            "in": "query",
            "description": "Filtrar por tenant (clinica)",
            "schema": {
              "example": "550e8400-e29b-41d4-a716-446655440000",
              "type": "string"
            }
          },
          {
            "name": "role",
            "required": false,
            "in": "query",
            "description": "Filtrar por role/perfil",
            "schema": {
              "enum": [
                "SUPER_ADMIN",
                "ADMIN_FINANCEIRO",
                "ADMIN_SUPORTE",
                "ADMIN_EDITOR",
                "MARKETPLACE_MANAGER",
                "CLINIC_OWNER",
                "PROFESSIONAL",
                "SECRETARY",
                "MANAGER",
                "PATIENT",
                "VISITOR"
              ],
              "type": "string"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Limite de resultados por pagina",
            "schema": {
              "example": 20,
              "type": "number"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Pagina da listagem",
            "schema": {
              "example": 1,
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Lista de usuarios retornada com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListUsersResponseDto"
                }
              }
            }
          }
        },
        "tags": [
          "Users"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/users/{slug}": {
      "get": {
        "operationId": "findOne",
        "summary": "Buscar usuario por slug",
        "description": "Administrador (SUPER_ADMIN, ADMIN_SUPORTE, ADMIN_FINANCEIRO) ou o proprio usuario podem visualizar.\n\n**Roles:** SUPER_ADMIN, ADMIN_SUPORTE, ADMIN_FINANCEIRO ou o proprio usuario autenticado",
        "parameters": [
          {
            "name": "slug",
            "required": true,
            "in": "path",
            "description": "Slug do usuario",
            "schema": {
              "example": "joao-silva",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Usuario encontrado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponseDto"
                }
              }
            }
          },
          "404": {
            "description": "Usuario nao encontrado"
          }
        },
        "tags": [
          "Users"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "patch": {
        "operationId": "update",
        "summary": "Atualizar usuario",
        "description": "Administrador (SUPER_ADMIN, ADMIN_SUPORTE, ADMIN_FINANCEIRO) ou o proprio usuario podem atualizar.\n\n**Roles:** SUPER_ADMIN, ADMIN_SUPORTE, ADMIN_FINANCEIRO ou o proprio usuario autenticado",
        "parameters": [
          {
            "name": "slug",
            "required": true,
            "in": "path",
            "description": "Slug do usuario",
            "schema": {
              "example": "joao-silva",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "description": "Dados para atualizacao",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserDto"
              },
              "examples": {
                "updateName": {
                  "summary": "Atualizar nome",
                  "value": {
                    "name": "Joao Silva Santos"
                  }
                },
                "updatePhone": {
                  "summary": "Atualizar telefone",
                  "value": {
                    "phone": "11777777777"
                  }
                },
                "deactivate": {
                  "summary": "Desativar usuario",
                  "value": {
                    "isActive": false
                  }
                },
                "updateMetadata": {
                  "summary": "Atualizar metadados",
                  "value": {
                    "metadata": {
                      "preferredLanguage": "en-US",
                      "theme": "light"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Usuario atualizado com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponseDto"
                }
              }
            }
          }
        },
        "tags": [
          "Users"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "delete": {
        "operationId": "remove",
        "summary": "Deletar usuario",
        "description": "Soft delete realizado por administradores (SUPER_ADMIN, ADMIN_SUPORTE, ADMIN_FINANCEIRO) ou pelo proprio usuario.\n\n**Roles:** SUPER_ADMIN, ADMIN_SUPORTE, ADMIN_FINANCEIRO ou o proprio usuario autenticado",
        "parameters": [
          {
            "name": "slug",
            "required": true,
            "in": "path",
            "description": "Slug do usuario",
            "schema": {
              "example": "joao-silva",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Usuario deletado com sucesso"
          }
        },
        "tags": [
          "Users"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/patients": {
      "get": {
        "operationId": "list",
        "summary": "Listar pacientes",
        "description": "Retorna a listagem paginada de pacientes do tenant atual.\n\n**Roles:** CLINIC_OWNER, PROFESSIONAL, SECRETARY, MANAGER, SUPER_ADMIN",
        "parameters": [
          {
            "name": "x-tenant-id",
            "required": true,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "query",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sortOrder",
            "required": false,
            "in": "query",
            "schema": {
              "enum": [
                "asc",
                "desc"
              ],
              "type": "string"
            }
          },
          {
            "name": "sortBy",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PatientsListResponseDto"
                }
              }
            }
          }
        },
        "tags": [
          "Patients"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "post": {
        "operationId": "create",
        "summary": "Criar paciente",
        "description": "Cria um novo paciente para o tenant atual.\n\n**Roles:** CLINIC_OWNER, PROFESSIONAL, SECRETARY, SUPER_ADMIN",
        "parameters": [
          {
            "name": "x-tenant-id",
            "required": true,
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePatientDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PatientResponseDto"
                }
              }
            }
          }
        },
        "tags": [
          "Patients"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/patients/{slug}": {
      "get": {
        "operationId": "findOne",
        "summary": "Detalhes do paciente",
        "description": "Retorna informacoes completas do paciente informado.\n\n**Roles:** CLINIC_OWNER, PROFESSIONAL, SECRETARY, MANAGER, SUPER_ADMIN",
        "parameters": [
          {
            "name": "slug",
            "required": true,
            "in": "path",
            "description": "Identificador do paciente",
            "schema": {
              "example": "joao-silva",
              "type": "string"
            }
          },
          {
            "name": "x-tenant-id",
            "required": true,
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PatientDetailDto"
                }
              }
            }
          }
        },
        "tags": [
          "Patients"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "patch": {
        "operationId": "update",
        "summary": "Atualizar paciente",
        "description": "Atualiza dados cadastrais do paciente.\n\n**Roles:** CLINIC_OWNER, PROFESSIONAL, SECRETARY, MANAGER, SUPER_ADMIN",
        "parameters": [
          {
            "name": "slug",
            "required": true,
            "in": "path",
            "description": "Identificador do paciente",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-tenant-id",
            "required": true,
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePatientDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PatientResponseDto"
                }
              }
            }
          }
        },
        "tags": [
          "Patients"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/patients/{slug}/transfer": {
      "post": {
        "operationId": "transfer",
        "summary": "Transferir paciente para outro profissional",
        "description": "Transfere o paciente para outro profissional dentro do tenant.\n\n**Roles:** CLINIC_OWNER, MANAGER, SUPER_ADMIN",
        "parameters": [
          {
            "name": "slug",
            "required": true,
            "in": "path",
            "description": "Identificador do paciente",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-tenant-id",
            "required": true,
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TransferPatientDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PatientResponseDto"
                }
              }
            }
          }
        },
        "tags": [
          "Patients"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/patients/{slug}/archive": {
      "post": {
        "operationId": "archive",
        "summary": "Arquivar paciente",
        "description": "Arquiva um paciente e opcionalmente dados relacionados.\n\n**Roles:** CLINIC_OWNER, MANAGER, SUPER_ADMIN",
        "parameters": [
          {
            "name": "slug",
            "required": true,
            "in": "path",
            "description": "Identificador do paciente",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ArchivePatientDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Paciente arquivado"
          }
        },
        "tags": [
          "Patients"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/patients/export": {
      "post": {
        "operationId": "export",
        "summary": "Exportar pacientes",
        "description": "Gera uma solicitacao de exportacao com filtros opcionais.\n\n**Roles:** CLINIC_OWNER, MANAGER, SUPER_ADMIN, ADMIN_FINANCEIRO",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExportPatientsDto"
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Exportacao enfileirada",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "fileUrl": ""
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Patients"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/legal/terms": {
      "get": {
        "operationId": "listTerms",
        "summary": "Listar termos legais",
        "parameters": [
          {
            "name": "tenantId",
            "required": false,
            "in": "query",
            "schema": {}
          },
          {
            "name": "status",
            "required": false,
            "in": "query",
            "schema": {
              "enum": [
                "published",
                "draft",
                "retired",
                "all"
              ],
              "type": "string"
            }
          },
          {
            "name": "context",
            "required": false,
            "in": "query",
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LegalTermResponseDto"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Legal Terms"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "post": {
        "operationId": "createTerm",
        "summary": "Criar novo termo legal",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateLegalTermRequestDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LegalTermResponseDto"
                }
              }
            }
          }
        },
        "tags": [
          "Legal Terms"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/legal/terms/{termId}": {
      "get": {
        "operationId": "getTerm",
        "summary": "Recuperar termo legal pelo identificador",
        "parameters": [
          {
            "name": "termId",
            "required": true,
            "in": "path",
            "description": "Identificador do termo legal",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LegalTermResponseDto"
                }
              }
            }
          }
        },
        "tags": [
          "Legal Terms"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/legal/terms/{termId}/publish": {
      "post": {
        "operationId": "publishTerm",
        "summary": "Publicar termo legal",
        "parameters": [
          {
            "name": "termId",
            "required": true,
            "in": "path",
            "description": "Identificador do termo legal",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LegalTermResponseDto"
                }
              }
            }
          }
        },
        "tags": [
          "Legal Terms"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/legal/terms/{termId}/retire": {
      "post": {
        "operationId": "retireTerm",
        "summary": "Desativar termo legal publicado",
        "parameters": [
          {
            "name": "termId",
            "required": true,
            "in": "path",
            "description": "Identificador do termo legal",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LegalTermResponseDto"
                }
              }
            }
          }
        },
        "tags": [
          "Legal Terms"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/anamneses/metrics": {
      "get": {
        "operationId": "getSnapshot",
        "summary": "Obter snapshot de metricas das anamneses",
        "parameters": [
          {
            "name": "to",
            "required": false,
            "in": "query",
            "description": "Data final (ISO) para filtrar metricas",
            "schema": {
              "example": "2025-10-07T23:59:59Z"
            }
          },
          {
            "name": "from",
            "required": false,
            "in": "query",
            "description": "Data inicial (ISO) para filtrar metricas",
            "schema": {
              "example": "2025-10-01T00:00:00Z"
            }
          },
          {
            "name": "tenantId",
            "required": false,
            "in": "query",
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AnamnesisMetricsSnapshotDto"
                }
              }
            }
          }
        },
        "tags": [
          "Anamnesis Metrics"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/anamneses/templates": {
      "get": {
        "operationId": "listTemplates",
        "summary": "Listar templates de steps",
        "description": "Retorna os templates de steps disponiveis para o tenant atual.",
        "parameters": [
          {
            "name": "includeInactive",
            "required": false,
            "in": "query",
            "description": "Quando true, retorna templates inativos para auditoria.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "specialty",
            "required": false,
            "in": "query",
            "description": "Prioriza templates cadastrados para a especialidade.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AnamnesisStepTemplateDto"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Anamnesis"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/anamneses/start": {
      "post": {
        "operationId": "start",
        "summary": "Iniciar anamnese",
        "description": "Cria uma nova anamnese ou retorna a existente para a consulta informada.",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StartAnamnesisRequestDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AnamnesisDetailResponseDto"
                }
              }
            }
          }
        },
        "tags": [
          "Anamnesis"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/anamneses/{anamnesisId}": {
      "get": {
        "operationId": "detail",
        "summary": "Detalhar anamnese",
        "description": "Retorna informacoes detalhadas da anamnese informada.",
        "parameters": [
          {
            "name": "anamnesisId",
            "required": true,
            "in": "path",
            "description": "Identificador da anamnese",
            "schema": {
              "example": "d1c2b3a4-5678-90ab-cdef-1234567890ab",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AnamnesisDetailResponseDto"
                }
              }
            }
          }
        },
        "tags": [
          "Anamnesis"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/anamneses/patient/{patientId}/history": {
      "get": {
        "operationId": "getHistory",
        "summary": "Historico de anamnese",
        "description": "Retorna dados completos de anamneses anteriores para pre-preenchimento.",
        "parameters": [
          {
            "name": "patientId",
            "required": true,
            "in": "path",
            "description": "Identificador do paciente",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "includeDrafts",
            "required": false,
            "in": "query",
            "description": "Quando true, inclui rascunhos no historico.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "status",
            "required": false,
            "in": "query",
            "description": "Filtra pelos status desejados.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "draft",
                  "submitted",
                  "completed",
                  "cancelled"
                ]
              }
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Quantidade maxima de registros (1-50).",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AnamnesisHistoryResponseDto"
                }
              }
            }
          }
        },
        "tags": [
          "Anamnesis"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/anamneses/patient/{patientId}": {
      "get": {
        "operationId": "listByPatient",
        "summary": "Listar anamneses do paciente",
        "description": "Retorna as anamneses associadas ao paciente informado.",
        "parameters": [
          {
            "name": "patientId",
            "required": true,
            "in": "path",
            "description": "Identificador do paciente",
            "schema": {
              "example": "p1d2e3f4-5678-90ab-cdef-1234567890ab",
              "type": "string"
            }
          },
          {
            "name": "to",
            "required": false,
            "in": "query",
            "description": "Data/hora final (ISO 8601).",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "from",
            "required": false,
            "in": "query",
            "description": "Data/hora inicial (ISO 8601).",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "professionalId",
            "required": false,
            "in": "query",
            "description": "Filtra pelo profissional responsavel.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status",
            "required": false,
            "in": "query",
            "description": "Filtra por status (draft, submitted, completed, cancelled).",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "draft",
                  "submitted",
                  "completed",
                  "cancelled"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AnamnesisListItemDto"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Anamnesis"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/anamneses/{anamnesisId}/steps/{stepNumber}": {
      "put": {
        "operationId": "saveStep",
        "summary": "Salvar step da anamnese",
        "description": "Atualiza os dados de um step especifico da anamnese.",
        "parameters": [
          {
            "name": "anamnesisId",
            "required": true,
            "in": "path",
            "description": "Identificador da anamnese",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "stepNumber",
            "required": true,
            "in": "path",
            "description": "Numero do step",
            "schema": {
              "example": 3,
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveAnamnesisStepRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AnamnesisDetailResponseDto"
                }
              }
            }
          }
        },
        "tags": [
          "Anamnesis"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/anamneses/{anamnesisId}/auto-save": {
      "post": {
        "operationId": "autoSaveStep",
        "summary": "Auto salvar step da anamnese",
        "description": "Persiste um rascunho parcial do step informado.",
        "parameters": [
          {
            "name": "anamnesisId",
            "required": true,
            "in": "path",
            "description": "Identificador da anamnese",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AutoSaveAnamnesisStepRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AnamnesisDetailResponseDto"
                }
              }
            }
          }
        },
        "tags": [
          "Anamnesis"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/anamneses/{anamnesisId}/submit": {
      "post": {
        "operationId": "submit",
        "summary": "Submeter anamnese",
        "description": "Finaliza a anamnese e dispara a analise pela IA.",
        "parameters": [
          {
            "name": "anamnesisId",
            "required": true,
            "in": "path",
            "description": "Identificador da anamnese",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AnamnesisDetailResponseDto"
                }
              }
            }
          }
        },
        "tags": [
          "Anamnesis"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/anamneses/{anamnesisId}/cancel": {
      "post": {
        "operationId": "cancel",
        "summary": "Cancelar anamnese",
        "description": "Cancela a anamnese preservando o registro para auditoria.",
        "parameters": [
          {
            "name": "anamnesisId",
            "required": true,
            "in": "path",
            "description": "Identificador da anamnese",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CancelAnamnesisRequestDto"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Anamnese cancelada"
          }
        },
        "tags": [
          "Anamnesis"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/anamneses/{anamnesisId}/plan": {
      "post": {
        "operationId": "savePlan",
        "summary": "Salvar plano terapeutico gerado",
        "description": "Persiste o plano terapeutico gerado para a anamnese.",
        "parameters": [
          {
            "name": "anamnesisId",
            "required": true,
            "in": "path",
            "description": "Identificador da anamnese",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveTherapeuticPlanRequestDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TherapeuticPlanDto"
                }
              }
            }
          }
        },
        "tags": [
          "Anamnesis"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/anamneses/{anamnesisId}/plan/feedback": {
      "post": {
        "operationId": "saveFeedback",
        "summary": "Salvar feedback do plano",
        "description": "Armazena o feedback do profissional sobre o plano gerado.",
        "parameters": [
          {
            "name": "anamnesisId",
            "required": true,
            "in": "path",
            "description": "Identificador da anamnese",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SavePlanFeedbackRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TherapeuticPlanDto"
                }
              }
            }
          }
        },
        "tags": [
          "Anamnesis"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/anamneses/{anamnesisId}/ai-result": {
      "post": {
        "operationId": "receiveAIResult",
        "summary": "Receber resultado da IA",
        "description": "Webhook de retorno das analises automatizadas.",
        "parameters": [
          {
            "name": "anamnesisId",
            "required": true,
            "in": "path",
            "description": "Identificador da anamnese",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReceiveAIResultRequestDto"
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Resultado recebido com sucesso"
          }
        },
        "tags": [
          "Anamnesis"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/anamneses/{anamnesisId}/attachments": {
      "post": {
        "operationId": "createAttachment",
        "summary": "Cadastrar anexo",
        "description": "Vincula um novo anexo a anamnese.",
        "parameters": [
          {
            "name": "anamnesisId",
            "required": true,
            "in": "path",
            "description": "Identificador da anamnese",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/CreateAnamnesisAttachmentRequestDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AnamnesisAttachmentDto"
                }
              }
            }
          }
        },
        "tags": [
          "Anamnesis"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/anamneses/{anamnesisId}/attachments/{attachmentId}": {
      "delete": {
        "operationId": "removeAttachment",
        "summary": "Remover anexo",
        "description": "Remove um anexo associado a anamnese.",
        "parameters": [
          {
            "name": "anamnesisId",
            "required": true,
            "in": "path",
            "description": "Identificador da anamnese",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "attachmentId",
            "required": true,
            "in": "path",
            "description": "Identificador do anexo",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "Anamnesis"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/scheduling/holds": {
      "post": {
        "operationId": "createHold",
        "summary": "Criar hold de agendamento",
        "description": "Reserva um hor rio na agenda considerando conflitos e janela m nima.",
        "parameters": [
          {
            "name": "x-tenant-id",
            "required": true,
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateHoldDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BookingHoldResponseDto"
                }
              }
            }
          }
        },
        "tags": [
          "Scheduling"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/scheduling/bookings": {
      "post": {
        "operationId": "createBooking",
        "summary": "Criar agendamento a partir de um hold",
        "description": "Confirma um hold ativo e cria o agendamento correspondente, publicando evento de criacao.",
        "parameters": [
          {
            "name": "x-tenant-id",
            "required": true,
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateBookingDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BookingResponseDto"
                }
              }
            }
          }
        },
        "tags": [
          "Scheduling"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/scheduling/bookings/{bookingId}/confirm": {
      "post": {
        "operationId": "confirmBooking",
        "summary": "Confirmar agendamento",
        "description": "Confirma o agendamento, atualiza status financeiro e publica o evento correspondente.",
        "parameters": [
          {
            "name": "bookingId",
            "required": true,
            "in": "path",
            "description": "Identificador do agendamento",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-tenant-id",
            "required": true,
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConfirmBookingDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BookingResponseDto"
                }
              }
            }
          }
        },
        "tags": [
          "Scheduling"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/scheduling/bookings/{bookingId}/reschedule": {
      "post": {
        "operationId": "rescheduleBooking",
        "summary": "Reagendar atendimento",
        "description": "Atualiza hor rio do atendimento e aplica controles de recorr ncia, emitindo o evento de reagendamento.",
        "parameters": [
          {
            "name": "bookingId",
            "required": true,
            "in": "path",
            "description": "Identificador do agendamento",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-tenant-id",
            "required": true,
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RescheduleBookingDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BookingResponseDto"
                }
              }
            }
          }
        },
        "tags": [
          "Scheduling"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/scheduling/bookings/{bookingId}/cancel": {
      "post": {
        "operationId": "cancelBooking",
        "summary": "Cancelar agendamento",
        "description": "Cancela o agendamento informado e publica o evento de cancelamento.",
        "parameters": [
          {
            "name": "bookingId",
            "required": true,
            "in": "path",
            "description": "Identificador do agendamento",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-tenant-id",
            "required": true,
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CancelBookingDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BookingResponseDto"
                }
              }
            }
          }
        },
        "tags": [
          "Scheduling"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/scheduling/bookings/{bookingId}/payment-status": {
      "patch": {
        "operationId": "updatePaymentStatus",
        "summary": "Atualizar status financeiro",
        "description": "Registra a mudanca de status de pagamento do agendamento e notifica consumidores via evento.",
        "parameters": [
          {
            "name": "bookingId",
            "required": true,
            "in": "path",
            "description": "Identificador do agendamento",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-tenant-id",
            "required": true,
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePaymentStatusDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BookingResponseDto"
                }
              }
            }
          }
        },
        "tags": [
          "Scheduling"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/scheduling/bookings/{bookingId}/no-show": {
      "post": {
        "operationId": "markNoShow",
        "summary": "Marcar no-show",
        "description": "Marca o agendamento como no-show ap s validar a toler ncia configurada e publica o evento correspondente.",
        "parameters": [
          {
            "name": "bookingId",
            "required": true,
            "in": "path",
            "description": "Identificador do agendamento",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-tenant-id",
            "required": true,
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MarkBookingNoShowDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BookingResponseDto"
                }
              }
            }
          }
        },
        "tags": [
          "Scheduling"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/clinics/{clinicId}/settings/general": {
      "get": {
        "operationId": "getGeneralSettings",
        "summary": "Obter configuracoes gerais atuais da clinica",
        "parameters": [
          {
            "name": "clinicId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-tenant-id",
            "required": true,
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClinicGeneralSettingsResponseDto"
                }
              }
            }
          }
        },
        "tags": [
          "Clinics"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "patch": {
        "operationId": "updateGeneralSettings",
        "summary": "Atualizar configuracoes gerais da clinica",
        "parameters": [
          {
            "name": "clinicId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-tenant-id",
            "required": true,
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "description": "Request payload",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "tenantId": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "generalSettings": {
                    "type": "object",
                    "properties": {
                      "tradeName": {
                        "type": "string",
                        "minLength": 1
                      },
                      "legalName": {
                        "type": "string"
                      },
                      "document": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "cnpj",
                              "cpf",
                              "mei"
                            ]
                          },
                          "value": {
                            "type": "string",
                            "minLength": 3
                          }
                        },
                        "required": [
                          "type",
                          "value"
                        ],
                        "additionalProperties": false
                      },
                      "stateRegistration": {
                        "type": "string"
                      },
                      "municipalRegistration": {
                        "type": "string"
                      },
                      "foundationDate": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "address": {
                        "type": "object",
                        "properties": {
                          "zipCode": {
                            "type": "string",
                            "minLength": 3
                          },
                          "street": {
                            "type": "string",
                            "minLength": 1
                          },
                          "number": {
                            "type": "string"
                          },
                          "complement": {
                            "type": "string"
                          },
                          "district": {
                            "type": "string"
                          },
                          "city": {
                            "type": "string",
                            "minLength": 1
                          },
                          "state": {
                            "type": "string",
                            "minLength": 1
                          },
                          "country": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "zipCode",
                          "street",
                          "city",
                          "state"
                        ],
                        "additionalProperties": false
                      },
                      "contact": {
                        "type": "object",
                        "properties": {
                          "phone": {
                            "type": "string"
                          },
                          "whatsapp": {
                            "type": "string"
                          },
                          "email": {
                            "type": "string",
                            "format": "email"
                          },
                          "website": {
                            "type": "string",
                            "format": "uri"
                          },
                          "socialLinks": {
                            "type": "array",
                            "items": {
                              "type": "string",
                              "format": "uri"
                            }
                          }
                        },
                        "additionalProperties": false
                      },
                      "notes": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "tradeName",
                      "address",
                      "contact"
                    ],
                    "additionalProperties": false
                  }
                },
                "required": [
                  "generalSettings"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClinicConfigurationVersionResponseDto"
                }
              }
            }
          }
        },
        "tags": [
          "Clinics"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/clinics/{clinicId}/settings/services": {
      "patch": {
        "operationId": "updateServiceSettings",
        "summary": "Atualizar configuracoes de servicos da clinica",
        "parameters": [
          {
            "name": "clinicId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-tenant-id",
            "required": true,
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "description": "Request payload",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "tenantId": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "serviceSettings": {
                    "type": "object",
                    "properties": {
                      "services": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "serviceTypeId": {
                              "type": "string",
                              "minLength": 1
                            },
                            "name": {
                              "type": "string",
                              "minLength": 1
                            },
                            "slug": {
                              "type": "string",
                              "minLength": 1
                            },
                            "durationMinutes": {
                              "type": "integer",
                              "exclusiveMinimum": true,
                              "minimum": 0
                            },
                            "price": {
                              "type": "number",
                              "minimum": 0
                            },
                            "currency": {
                              "type": "string",
                              "enum": [
                                "BRL",
                                "USD",
                                "EUR"
                              ]
                            },
                            "isActive": {
                              "type": "boolean"
                            },
                            "requiresAnamnesis": {
                              "type": "boolean"
                            },
                            "enableOnlineScheduling": {
                              "type": "boolean"
                            },
                            "minAdvanceMinutes": {
                              "type": "integer",
                              "minimum": 0
                            },
                            "maxAdvanceMinutes": {
                              "type": "integer",
                              "exclusiveMinimum": true,
                              "minimum": 0
                            },
                            "cancellationPolicy": {
                              "type": "object",
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "enum": [
                                    "free",
                                    "percentage",
                                    "no_refund"
                                  ]
                                },
                                "windowMinutes": {
                                  "type": "integer",
                                  "minimum": 0
                                },
                                "percentage": {
                                  "type": "integer",
                                  "minimum": 0,
                                  "maximum": 100
                                },
                                "message": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "type"
                              ],
                              "additionalProperties": false
                            },
                            "eligibility": {
                              "type": "object",
                              "properties": {
                                "allowNewPatients": {
                                  "type": "boolean"
                                },
                                "allowExistingPatients": {
                                  "type": "boolean"
                                },
                                "minimumAge": {
                                  "type": "integer",
                                  "minimum": 0
                                },
                                "maximumAge": {
                                  "type": "integer",
                                  "minimum": 0
                                },
                                "allowedTags": {
                                  "type": "array",
                                  "items": {
                                    "type": "string",
                                    "minLength": 1
                                  }
                                }
                              },
                              "required": [
                                "allowNewPatients",
                                "allowExistingPatients"
                              ],
                              "additionalProperties": false
                            },
                            "color": {
                              "type": "string"
                            },
                            "instructions": {
                              "type": "string"
                            },
                            "requiredDocuments": {
                              "type": "array",
                              "items": {
                                "type": "string",
                                "minLength": 1
                              }
                            }
                          },
                          "required": [
                            "serviceTypeId",
                            "name",
                            "slug",
                            "durationMinutes",
                            "price",
                            "currency",
                            "isActive",
                            "requiresAnamnesis",
                            "enableOnlineScheduling",
                            "minAdvanceMinutes"
                          ],
                          "additionalProperties": false
                        }
                      }
                    },
                    "required": [
                      "services"
                    ],
                    "additionalProperties": false
                  }
                },
                "required": [
                  "serviceSettings"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClinicServiceSettingsResponseDto"
                }
              }
            }
          }
        },
        "tags": [
          "Clinics"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "get": {
        "operationId": "getServiceSettings",
        "summary": "Obter configuracoes de servicos da clinica",
        "parameters": [
          {
            "name": "clinicId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-tenant-id",
            "required": true,
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClinicServiceSettingsResponseDto"
                }
              }
            }
          }
        },
        "tags": [
          "Clinics"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/clinics/{clinicId}/settings/payments": {
      "patch": {
        "operationId": "updatePaymentSettings",
        "summary": "Atualizar configuracoes financeiras da clinica",
        "parameters": [
          {
            "name": "clinicId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-tenant-id",
            "required": true,
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "description": "Request payload",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "tenantId": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "paymentSettings": {
                    "type": "object",
                    "properties": {
                      "provider": {
                        "type": "string",
                        "enum": [
                          "asaas"
                        ]
                      },
                      "credentialsId": {
                        "type": "string",
                        "minLength": 1
                      },
                      "sandboxMode": {
                        "type": "boolean"
                      },
                      "splitRules": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "recipient": {
                              "type": "string",
                              "enum": [
                                "taxes",
                                "gateway",
                                "clinic",
                                "professional",
                                "platform"
                              ]
                            },
                            "percentage": {
                              "type": "number",
                              "minimum": 0
                            },
                            "order": {
                              "type": "integer",
                              "minimum": 0
                            }
                          },
                          "required": [
                            "recipient",
                            "percentage",
                            "order"
                          ],
                          "additionalProperties": false
                        }
                      },
                      "roundingStrategy": {
                        "type": "string",
                        "enum": [
                          "half_even"
                        ]
                      },
                      "antifraud": {
                        "type": "object",
                        "properties": {
                          "enabled": {
                            "type": "boolean"
                          },
                          "provider": {
                            "type": "string"
                          },
                          "thresholdAmount": {
                            "type": "number",
                            "minimum": 0
                          }
                        },
                        "required": [
                          "enabled"
                        ],
                        "additionalProperties": false
                      },
                      "inadimplencyRule": {
                        "type": "object",
                        "properties": {
                          "gracePeriodDays": {
                            "type": "integer",
                            "minimum": 0
                          },
                          "penaltyPercentage": {
                            "type": "number",
                            "minimum": 0,
                            "maximum": 100
                          },
                          "dailyInterestPercentage": {
                            "type": "number",
                            "minimum": 0,
                            "maximum": 100
                          },
                          "maxRetries": {
                            "type": "integer",
                            "minimum": 0
                          },
                          "actions": {
                            "type": "array",
                            "items": {
                              "type": "string",
                              "minLength": 1
                            },
                            "default": []
                          }
                        },
                        "required": [
                          "gracePeriodDays"
                        ],
                        "additionalProperties": false
                      },
                      "refundPolicy": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "automatic",
                              "manual",
                              "partial"
                            ]
                          },
                          "processingTimeHours": {
                            "type": "integer",
                            "minimum": 0
                          },
                          "feePercentage": {
                            "type": "number",
                            "minimum": 0,
                            "maximum": 100
                          },
                          "allowPartialRefund": {
                            "type": "boolean"
                          }
                        },
                        "required": [
                          "type",
                          "processingTimeHours",
                          "allowPartialRefund"
                        ],
                        "additionalProperties": false
                      },
                      "cancellationPolicies": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "free",
                                "percentage",
                                "no_refund"
                              ]
                            },
                            "windowMinutes": {
                              "type": "integer",
                              "minimum": 0
                            },
                            "percentage": {
                              "type": "number",
                              "minimum": 0,
                              "maximum": 100
                            },
                            "message": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "type"
                          ],
                          "additionalProperties": false
                        }
                      },
                      "bankAccountId": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "provider",
                      "credentialsId",
                      "sandboxMode",
                      "splitRules",
                      "roundingStrategy",
                      "refundPolicy",
                      "cancellationPolicies"
                    ],
                    "additionalProperties": false
                  }
                },
                "required": [
                  "paymentSettings"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClinicPaymentSettingsResponseDto"
                }
              }
            }
          }
        },
        "tags": [
          "Clinics"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "get": {
        "operationId": "getPaymentSettings",
        "summary": "Obter configuracoes financeiras da clinica",
        "parameters": [
          {
            "name": "clinicId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-tenant-id",
            "required": true,
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClinicPaymentSettingsResponseDto"
                }
              }
            }
          }
        },
        "tags": [
          "Clinics"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/clinics/{clinicId}/settings/integrations": {
      "patch": {
        "operationId": "updateIntegrationSettings",
        "summary": "Atualizar configuracoes de integracoes da clinica",
        "parameters": [
          {
            "name": "clinicId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-tenant-id",
            "required": true,
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "description": "Request payload",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "tenantId": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "integrationSettings": {
                    "type": "object",
                    "properties": {
                      "whatsapp": {
                        "type": "object",
                        "properties": {
                          "enabled": {
                            "type": "boolean"
                          },
                          "provider": {
                            "type": "string",
                            "enum": [
                              "evolution",
                              "meta"
                            ]
                          },
                          "businessNumber": {
                            "type": "string",
                            "minLength": 1
                          },
                          "instanceStatus": {
                            "type": "string"
                          },
                          "qrCodeUrl": {
                            "type": "string",
                            "format": "uri"
                          },
                          "templates": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "minLength": 1
                                },
                                "status": {
                                  "type": "string",
                                  "minLength": 1
                                },
                                "category": {
                                  "type": "string"
                                },
                                "lastUpdatedAt": {
                                  "type": "string",
                                  "format": "date-time"
                                }
                              },
                              "required": [
                                "name",
                                "status"
                              ],
                              "additionalProperties": false
                            }
                          },
                          "quietHours": {
                            "type": "object",
                            "properties": {
                              "start": {
                                "type": "string"
                              },
                              "end": {
                                "type": "string"
                              },
                              "timezone": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "start",
                              "end"
                            ],
                            "additionalProperties": false
                          },
                          "webhookUrl": {
                            "type": "string",
                            "format": "uri"
                          }
                        },
                        "required": [
                          "enabled"
                        ],
                        "additionalProperties": false
                      },
                      "googleCalendar": {
                        "type": "object",
                        "properties": {
                          "enabled": {
                            "type": "boolean"
                          },
                          "syncMode": {
                            "type": "string",
                            "enum": [
                              "one_way",
                              "two_way"
                            ]
                          },
                          "conflictPolicy": {
                            "type": "string",
                            "enum": [
                              "onterapi_wins",
                              "google_wins",
                              "ask_user"
                            ]
                          },
                          "requireValidationForExternalEvents": {
                            "type": "boolean"
                          },
                          "defaultCalendarId": {
                            "type": "string"
                          },
                          "hidePatientName": {
                            "type": "boolean"
                          },
                          "prefix": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "enabled",
                          "syncMode",
                          "conflictPolicy",
                          "requireValidationForExternalEvents"
                        ],
                        "additionalProperties": false
                      },
                      "email": {
                        "type": "object",
                        "properties": {
                          "enabled": {
                            "type": "boolean"
                          },
                          "provider": {
                            "type": "string",
                            "minLength": 1
                          },
                          "fromName": {
                            "type": "string"
                          },
                          "fromEmail": {
                            "type": "string",
                            "format": "email"
                          },
                          "replyTo": {
                            "type": "string",
                            "format": "email"
                          },
                          "tracking": {
                            "type": "object",
                            "properties": {
                              "open": {
                                "type": "boolean"
                              },
                              "click": {
                                "type": "boolean"
                              },
                              "bounce": {
                                "type": "boolean"
                              }
                            },
                            "required": [
                              "open",
                              "click",
                              "bounce"
                            ],
                            "additionalProperties": false
                          },
                          "templates": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          }
                        },
                        "required": [
                          "enabled"
                        ],
                        "additionalProperties": false
                      },
                      "webhooks": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "event": {
                              "type": "string",
                              "minLength": 1
                            },
                            "url": {
                              "type": "string",
                              "format": "uri"
                            },
                            "active": {
                              "type": "boolean"
                            }
                          },
                          "required": [
                            "event",
                            "url",
                            "active"
                          ],
                          "additionalProperties": false
                        }
                      },
                      "metadata": {
                        "type": "object",
                        "additionalProperties": {}
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "required": [
                  "integrationSettings"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClinicIntegrationSettingsResponseDto"
                }
              }
            }
          }
        },
        "tags": [
          "Clinics"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "get": {
        "operationId": "getIntegrationSettings",
        "summary": "Obter configuracoes de integracoes da clinica",
        "parameters": [
          {
            "name": "clinicId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-tenant-id",
            "required": true,
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClinicIntegrationSettingsResponseDto"
                }
              }
            }
          }
        },
        "tags": [
          "Clinics"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/clinics/{clinicId}/settings/notifications": {
      "patch": {
        "operationId": "updateNotificationSettings",
        "summary": "Atualizar configuracoes de notificacoes da clinica",
        "parameters": [
          {
            "name": "clinicId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-tenant-id",
            "required": true,
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "description": "Request payload",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "tenantId": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "notificationSettings": {
                    "type": "object",
                    "properties": {
                      "channels": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "minLength": 1
                            },
                            "enabled": {
                              "type": "boolean"
                            },
                            "defaultEnabled": {
                              "type": "boolean"
                            },
                            "quietHours": {
                              "type": "object",
                              "properties": {
                                "start": {
                                  "type": "string"
                                },
                                "end": {
                                  "type": "string"
                                },
                                "timezone": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "start",
                                "end"
                              ],
                              "additionalProperties": false
                            }
                          },
                          "required": [
                            "type",
                            "enabled",
                            "defaultEnabled"
                          ],
                          "additionalProperties": false
                        }
                      },
                      "templates": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "minLength": 1
                            },
                            "event": {
                              "type": "string",
                              "minLength": 1
                            },
                            "channel": {
                              "type": "string",
                              "minLength": 1
                            },
                            "version": {
                              "type": "string",
                              "minLength": 1
                            },
                            "active": {
                              "type": "boolean"
                            },
                            "language": {
                              "type": "string"
                            },
                            "abGroup": {
                              "type": "string"
                            },
                            "variables": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "name": {
                                    "type": "string",
                                    "minLength": 1
                                  },
                                  "required": {
                                    "type": "boolean"
                                  }
                                },
                                "required": [
                                  "name",
                                  "required"
                                ],
                                "additionalProperties": false
                              },
                              "default": []
                            }
                          },
                          "required": [
                            "id",
                            "event",
                            "channel",
                            "version",
                            "active"
                          ],
                          "additionalProperties": false
                        }
                      },
                      "rules": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "event": {
                              "type": "string",
                              "minLength": 1
                            },
                            "channels": {
                              "type": "array",
                              "items": {
                                "type": "string",
                                "minLength": 1
                              },
                              "minItems": 1
                            },
                            "enabled": {
                              "type": "boolean"
                            }
                          },
                          "required": [
                            "event",
                            "channels",
                            "enabled"
                          ],
                          "additionalProperties": false
                        }
                      },
                      "quietHours": {
                        "type": "object",
                        "properties": {
                          "start": {
                            "type": "string"
                          },
                          "end": {
                            "type": "string"
                          },
                          "timezone": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "start",
                          "end"
                        ],
                        "additionalProperties": false
                      },
                      "events": {
                        "type": "array",
                        "items": {
                          "type": "string",
                          "minLength": 1
                        }
                      },
                      "metadata": {
                        "type": "object",
                        "additionalProperties": {}
                      }
                    },
                    "required": [
                      "channels",
                      "templates",
                      "rules"
                    ],
                    "additionalProperties": false
                  }
                },
                "required": [
                  "notificationSettings"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClinicNotificationSettingsResponseDto"
                }
              }
            }
          }
        },
        "tags": [
          "Clinics"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "get": {
        "operationId": "getNotificationSettings",
        "summary": "Obter configuracoes de notificacoes da clinica",
        "parameters": [
          {
            "name": "clinicId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-tenant-id",
            "required": true,
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClinicNotificationSettingsResponseDto"
                }
              }
            }
          }
        },
        "tags": [
          "Clinics"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/clinics/{clinicId}/settings/branding": {
      "patch": {
        "operationId": "updateBrandingSettings",
        "summary": "Atualizar identidade visual da clinica",
        "parameters": [
          {
            "name": "clinicId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-tenant-id",
            "required": true,
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "description": "Request payload",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "tenantId": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "brandingSettings": {
                    "type": "object",
                    "properties": {
                      "logoUrl": {
                        "type": "string",
                        "format": "uri"
                      },
                      "darkLogoUrl": {
                        "type": "string",
                        "format": "uri"
                      },
                      "palette": {
                        "type": "object",
                        "properties": {
                          "primary": {
                            "type": "string"
                          },
                          "secondary": {
                            "type": "string"
                          },
                          "accent": {
                            "type": "string"
                          },
                          "background": {
                            "type": "string"
                          },
                          "surface": {
                            "type": "string"
                          },
                          "text": {
                            "type": "string"
                          }
                        },
                        "additionalProperties": false
                      },
                      "typography": {
                        "type": "object",
                        "properties": {
                          "primaryFont": {
                            "type": "string"
                          },
                          "secondaryFont": {
                            "type": "string"
                          },
                          "headingWeight": {
                            "type": "integer"
                          },
                          "bodyWeight": {
                            "type": "integer"
                          }
                        },
                        "additionalProperties": false
                      },
                      "customCss": {
                        "type": "string"
                      },
                      "applyMode": {
                        "type": "string",
                        "minLength": 1
                      },
                      "preview": {
                        "type": "object",
                        "properties": {
                          "mode": {
                            "type": "string",
                            "minLength": 1
                          },
                          "generatedAt": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "previewUrl": {
                            "type": "string",
                            "format": "uri"
                          }
                        },
                        "required": [
                          "mode"
                        ],
                        "additionalProperties": false
                      },
                      "versionLabel": {
                        "type": "string"
                      },
                      "metadata": {
                        "type": "object",
                        "additionalProperties": {}
                      }
                    },
                    "required": [
                      "applyMode"
                    ],
                    "additionalProperties": false
                  }
                },
                "required": [
                  "brandingSettings"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClinicBrandingSettingsResponseDto"
                }
              }
            }
          }
        },
        "tags": [
          "Clinics"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "get": {
        "operationId": "getBrandingSettings",
        "summary": "Obter configuracoes de identidade visual da clinica",
        "parameters": [
          {
            "name": "clinicId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-tenant-id",
            "required": true,
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClinicBrandingSettingsResponseDto"
                }
              }
            }
          }
        },
        "tags": [
          "Clinics"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/clinics/{clinicId}/settings/hold": {
      "get": {
        "operationId": "getHoldSettings",
        "summary": "Obter configuracoes de hold da clinica",
        "parameters": [
          {
            "name": "clinicId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-tenant-id",
            "required": true,
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClinicHoldSettingsResponseDto"
                }
              }
            }
          }
        },
        "tags": [
          "Clinics"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "patch": {
        "operationId": "updateHoldSettings",
        "summary": "Atualizar configuracoes de hold da clinica",
        "parameters": [
          {
            "name": "clinicId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-tenant-id",
            "required": true,
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "description": "Request payload",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "tenantId": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "holdSettings": {
                    "type": "object",
                    "properties": {
                      "ttlMinutes": {
                        "type": "integer",
                        "exclusiveMinimum": true,
                        "minimum": 0
                      },
                      "minAdvanceMinutes": {
                        "type": "integer",
                        "minimum": 0
                      },
                      "maxAdvanceMinutes": {
                        "type": "integer",
                        "exclusiveMinimum": true,
                        "minimum": 0
                      },
                      "allowOverbooking": {
                        "type": "boolean"
                      },
                      "overbookingThreshold": {
                        "type": "integer",
                        "minimum": 0,
                        "maximum": 100
                      },
                      "resourceMatchingStrict": {
                        "type": "boolean"
                      }
                    },
                    "required": [
                      "ttlMinutes",
                      "minAdvanceMinutes",
                      "allowOverbooking",
                      "resourceMatchingStrict"
                    ],
                    "additionalProperties": false
                  }
                },
                "required": [
                  "holdSettings"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClinicSummaryDto"
                }
              }
            }
          }
        },
        "tags": [
          "Clinics"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/clinics/{clinicId}/settings/team": {
      "get": {
        "operationId": "getTeamSettings",
        "summary": "Obter configuracoes de equipe da clinica",
        "parameters": [
          {
            "name": "clinicId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-tenant-id",
            "required": true,
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClinicTeamSettingsResponseDto"
                }
              }
            }
          }
        },
        "tags": [
          "Clinics"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "patch": {
        "operationId": "updateTeamSettings",
        "summary": "Atualizar configuracoes de equipe da clinica",
        "parameters": [
          {
            "name": "clinicId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-tenant-id",
            "required": true,
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "description": "Request payload",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "tenantId": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "teamSettings": {
                    "type": "object",
                    "properties": {
                      "quotas": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "role": {
                              "type": "string",
                              "enum": [
                                "CLINIC_OWNER",
                                "MANAGER",
                                "PROFESSIONAL",
                                "SECRETARY"
                              ]
                            },
                            "limit": {
                              "type": "integer",
                              "exclusiveMinimum": true,
                              "minimum": 0
                            }
                          },
                          "required": [
                            "role",
                            "limit"
                          ],
                          "additionalProperties": false
                        },
                        "minItems": 1
                      },
                      "allowExternalInvitations": {
                        "type": "boolean"
                      },
                      "defaultMemberStatus": {
                        "type": "string",
                        "enum": [
                          "pending_invitation",
                          "active",
                          "inactive",
                          "suspended"
                        ],
                        "default": "pending_invitation"
                      },
                      "requireFinancialClearance": {
                        "type": "boolean",
                        "default": false
                      }
                    },
                    "required": [
                      "quotas",
                      "allowExternalInvitations"
                    ],
                    "additionalProperties": false
                  }
                },
                "required": [
                  "teamSettings"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClinicTeamSettingsResponseDto"
                }
              }
            }
          }
        },
        "tags": [
          "Clinics"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/clinics/{clinicId}/settings/schedule": {
      "get": {
        "operationId": "getScheduleSettings",
        "summary": "Obter configuracoes de agenda da clinica",
        "parameters": [
          {
            "name": "clinicId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-tenant-id",
            "required": true,
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClinicScheduleSettingsResponseDto"
                }
              }
            }
          }
        },
        "tags": [
          "Clinics"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "patch": {
        "operationId": "updateScheduleSettings",
        "summary": "Atualizar configuracoes de agenda da clinica",
        "parameters": [
          {
            "name": "clinicId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-tenant-id",
            "required": true,
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "description": "Request payload",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "tenantId": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "scheduleSettings": {
                    "type": "object",
                    "properties": {
                      "timezone": {
                        "type": "string",
                        "minLength": 1
                      },
                      "workingDays": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "dayOfWeek": {
                              "type": "integer",
                              "minimum": 0,
                              "maximum": 6
                            },
                            "active": {
                              "type": "boolean"
                            },
                            "intervals": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "start": {
                                    "type": "string",
                                    "pattern": "^\\d{2}:\\d{2}$"
                                  },
                                  "end": {
                                    "type": "string",
                                    "pattern": "^\\d{2}:\\d{2}$"
                                  }
                                },
                                "required": [
                                  "start",
                                  "end"
                                ],
                                "additionalProperties": false
                              }
                            }
                          },
                          "required": [
                            "dayOfWeek",
                            "active",
                            "intervals"
                          ],
                          "additionalProperties": false
                        }
                      },
                      "exceptionPeriods": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "minLength": 1
                            },
                            "name": {
                              "type": "string",
                              "minLength": 1
                            },
                            "appliesTo": {
                              "type": "string",
                              "enum": [
                                "clinic",
                                "professional",
                                "resource"
                              ]
                            },
                            "start": {
                              "type": "string",
                              "format": "date-time"
                            },
                            "end": {
                              "type": "string",
                              "format": "date-time"
                            },
                            "resourceIds": {
                              "type": "array",
                              "items": {
                                "type": "string",
                                "minLength": 1
                              }
                            }
                          },
                          "required": [
                            "id",
                            "name",
                            "appliesTo",
                            "start",
                            "end"
                          ],
                          "additionalProperties": false
                        }
                      },
                      "holidays": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "minLength": 1
                            },
                            "name": {
                              "type": "string",
                              "minLength": 1
                            },
                            "date": {
                              "type": "string",
                              "format": "date-time"
                            },
                            "scope": {
                              "type": "string",
                              "enum": [
                                "national",
                                "state",
                                "city",
                                "local"
                              ]
                            }
                          },
                          "required": [
                            "id",
                            "name",
                            "date",
                            "scope"
                          ],
                          "additionalProperties": false
                        }
                      },
                      "autosaveIntervalSeconds": {
                        "type": "integer",
                        "exclusiveMinimum": true,
                        "minimum": 0
                      },
                      "conflictResolution": {
                        "type": "string",
                        "enum": [
                          "server_wins",
                          "client_wins",
                          "merge",
                          "ask_user"
                        ]
                      }
                    },
                    "required": [
                      "timezone",
                      "workingDays",
                      "autosaveIntervalSeconds",
                      "conflictResolution"
                    ],
                    "additionalProperties": false
                  }
                },
                "required": [
                  "scheduleSettings"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClinicConfigurationVersionResponseDto"
                }
              }
            }
          }
        },
        "tags": [
          "Clinics"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/clinics/{clinicId}/settings/propagation": {
      "get": {
        "operationId": "getTemplatePropagation",
        "summary": "Obter ultimos dados de propagacao de template da clinica",
        "parameters": [
          {
            "name": "clinicId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-tenant-id",
            "required": true,
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClinicTemplatePropagationResponseDto"
                }
              }
            }
          }
        },
        "tags": [
          "Clinics"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/clinics/{clinicId}/settings/propagate": {
      "patch": {
        "operationId": "propagateTemplate",
        "summary": "Propagar configuracoes para clinicas alvo",
        "parameters": [
          {
            "name": "clinicId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-tenant-id",
            "required": true,
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "description": "Request payload",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "tenantId": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "targetClinicIds": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "minItems": 1
                  },
                  "sections": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "enum": [
                        "general",
                        "team",
                        "schedule",
                        "services",
                        "payments",
                        "integrations",
                        "notifications",
                        "branding"
                      ]
                    },
                    "minItems": 1
                  },
                  "versionNotes": {
                    "type": "string",
                    "maxLength": 1000
                  }
                },
                "required": [
                  "targetClinicIds",
                  "sections"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ClinicConfigurationVersionResponseDto"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Clinics"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/management/overview": {
      "get": {
        "operationId": "getOverview",
        "summary": "Obter visao consolidada das clinicas do tenant",
        "parameters": [
          {
            "name": "x-tenant-id",
            "required": true,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "includeFinancials",
            "required": false,
            "in": "query",
            "description": "Incluir resumo financeiro consolidado",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "includeTeamDistribution",
            "required": false,
            "in": "query",
            "description": "Incluir distribuicao da equipe por papel",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "includeAlerts",
            "required": false,
            "in": "query",
            "description": "Incluir alertas consolidados",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "includeComparisons",
            "required": false,
            "in": "query",
            "description": "Incluir comparativos de metricas",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "includeForecast",
            "required": false,
            "in": "query",
            "description": "Incluir projecoes de forecast",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "to",
            "required": false,
            "in": "query",
            "description": "Data final (ISO 8601)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "from",
            "required": false,
            "in": "query",
            "description": "Data inicial (ISO 8601)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status",
            "required": false,
            "in": "query",
            "description": "Filtrar por status das clinicas",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "draft",
                  "pending",
                  "active",
                  "inactive",
                  "suspended"
                ]
              }
            }
          },
          {
            "name": "clinicIds",
            "required": false,
            "in": "query",
            "description": "IDs de clinicas (UUIDs) separados por virgula ou multiplos parametros",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClinicManagementOverviewResponseDto"
                }
              }
            }
          }
        },
        "tags": [
          "Clinic Management"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/management/alerts": {
      "get": {
        "operationId": "listAlerts",
        "summary": "Listar alertas consolidados das clinicas",
        "parameters": [
          {
            "name": "x-tenant-id",
            "required": true,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Limite maximo de alertas retornados",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "activeOnly",
            "required": false,
            "in": "query",
            "description": "Filtrar apenas alertas ativos",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "types",
            "required": false,
            "in": "query",
            "description": "Tipos de alertas",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "clinicIds",
            "required": false,
            "in": "query",
            "description": "IDs de clinicas (UUIDs) separados por virgula ou multiplos parametros",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "clinicId",
            "required": false,
            "in": "query",
            "description": "ID da clinica a filtrar",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ClinicDashboardAlertDto"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Clinic Management"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/management/professionals/transfer": {
      "post": {
        "operationId": "transferProfessional",
        "summary": "Transferir profissional entre clinicas",
        "parameters": [
          {
            "name": "x-tenant-id",
            "required": true,
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClinicProfessionalTransferResponseDto"
                }
              }
            }
          }
        },
        "tags": [
          "Clinic Management"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/management/alerts/{alertId}/resolve": {
      "patch": {
        "operationId": "resolveAlert",
        "summary": "Resolver alerta de clinica",
        "parameters": [
          {
            "name": "alertId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-tenant-id",
            "required": true,
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClinicDashboardAlertDto"
                }
              }
            }
          }
        },
        "tags": [
          "Clinic Management"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/clinics/{clinicId}/holds": {
      "post": {
        "operationId": "createHold",
        "summary": "Criar hold clinico",
        "parameters": [
          {
            "name": "clinicId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-tenant-id",
            "required": true,
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "description": "Request payload",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "tenantId": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "professionalId": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "patientId": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "serviceTypeId": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "start": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "end": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "locationId": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "resources": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "idempotencyKey": {
                    "type": "string",
                    "minLength": 6
                  },
                  "metadata": {
                    "type": "object",
                    "additionalProperties": {}
                  }
                },
                "required": [
                  "professionalId",
                  "patientId",
                  "serviceTypeId",
                  "start",
                  "end",
                  "idempotencyKey"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClinicHoldResponseDto"
                }
              }
            }
          }
        },
        "tags": [
          "Clinics"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/clinics/{clinicId}/holds/{holdId}/confirm": {
      "post": {
        "operationId": "confirmHold",
        "summary": "Confirmar hold clinico",
        "parameters": [
          {
            "name": "clinicId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "holdId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-tenant-id",
            "required": true,
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "description": "Request payload",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "tenantId": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "paymentTransactionId": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 120
                  },
                  "idempotencyKey": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 120
                  }
                },
                "required": [
                  "paymentTransactionId",
                  "idempotencyKey"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClinicAppointmentConfirmationResponseDto"
                }
              }
            }
          }
        },
        "tags": [
          "Clinics"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/clinics/{clinicId}/holds/{holdId}/overbooking": {
      "put": {
        "operationId": "reviewOverbooking",
        "summary": "Avaliar solicitacao de overbooking para um hold",
        "parameters": [
          {
            "name": "clinicId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "holdId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-tenant-id",
            "required": true,
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "description": "Request payload",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "tenantId": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "approve": {
                    "type": "boolean"
                  },
                  "justification": {
                    "type": "string",
                    "minLength": 3,
                    "maxLength": 500,
                    "nullable": true
                  }
                },
                "required": [
                  "approve"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClinicHoldResponseDto"
                }
              }
            }
          }
        },
        "tags": [
          "Clinics"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/clinics/dashboard": {
      "get": {
        "operationId": "getDashboard",
        "summary": "Obter metricas consolidadas das clinicas",
        "parameters": [
          {
            "name": "x-tenant-id",
            "required": true,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "comparisonMetrics",
            "required": false,
            "in": "query",
            "description": "Metricas para o comparativo (valores aceitos: revenue, appointments, patients, occupancy, satisfaction)",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "revenue",
                  "appointments",
                  "patients",
                  "occupancy",
                  "satisfaction"
                ]
              }
            }
          },
          {
            "name": "includeComparisons",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "includeForecast",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "to",
            "required": false,
            "in": "query",
            "description": "Data final (ISO)",
            "schema": {}
          },
          {
            "name": "from",
            "required": false,
            "in": "query",
            "description": "Data inicial (ISO)",
            "schema": {}
          },
          {
            "name": "clinicIds",
            "required": false,
            "in": "query",
            "description": "Lista de IDs separados por virgula",
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClinicDashboardResponseDto"
                }
              }
            }
          }
        },
        "tags": [
          "Clinics"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/clinics/{clinicId}/service-types": {
      "get": {
        "operationId": "list",
        "summary": "Listar tipos de servico da clinica",
        "parameters": [
          {
            "name": "clinicId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-tenant-id",
            "required": true,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "includeInactive",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ClinicServiceTypeResponseDto"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Clinics"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "post": {
        "operationId": "upsert",
        "summary": "Criar ou atualizar tipo de servico da clinica",
        "parameters": [
          {
            "name": "clinicId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-tenant-id",
            "required": true,
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "description": "Request payload",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "tenantId": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "service": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "uuid"
                      },
                      "name": {
                        "type": "string",
                        "minLength": 1
                      },
                      "slug": {
                        "type": "string",
                        "minLength": 1
                      },
                      "color": {
                        "type": "string"
                      },
                      "durationMinutes": {
                        "type": "integer",
                        "exclusiveMinimum": true,
                        "minimum": 0
                      },
                      "price": {
                        "type": "number",
                        "exclusiveMinimum": true,
                        "minimum": 0
                      },
                      "currency": {
                        "type": "string",
                        "minLength": 3,
                        "maxLength": 3
                      },
                      "isActive": {
                        "type": "boolean",
                        "default": true
                      },
                      "requiresAnamnesis": {
                        "type": "boolean",
                        "default": false
                      },
                      "enableOnlineScheduling": {
                        "type": "boolean",
                        "default": true
                      },
                      "minAdvanceMinutes": {
                        "type": "integer",
                        "minimum": 0
                      },
                      "maxAdvanceMinutes": {
                        "type": "integer",
                        "exclusiveMinimum": true,
                        "minimum": 0
                      },
                      "cancellationPolicy": {
                        "anyOf": [
                          {
                            "type": "object",
                            "properties": {
                              "type": {
                                "type": "string",
                                "enum": [
                                  "free"
                                ]
                              },
                              "message": {
                                "type": "string",
                                "maxLength": 500
                              }
                            },
                            "required": [
                              "type"
                            ],
                            "additionalProperties": false
                          },
                          {
                            "type": "object",
                            "properties": {
                              "type": {
                                "type": "string",
                                "enum": [
                                  "percentage"
                                ]
                              },
                              "windowMinutes": {
                                "type": "integer",
                                "minimum": 0
                              },
                              "percentage": {
                                "type": "number",
                                "minimum": 0,
                                "maximum": 100
                              },
                              "message": {
                                "type": "string",
                                "maxLength": 500
                              }
                            },
                            "required": [
                              "type",
                              "windowMinutes",
                              "percentage"
                            ],
                            "additionalProperties": false
                          },
                          {
                            "type": "object",
                            "properties": {
                              "type": {
                                "type": "string",
                                "enum": [
                                  "no_refund"
                                ]
                              },
                              "message": {
                                "type": "string",
                                "maxLength": 500
                              }
                            },
                            "required": [
                              "type"
                            ],
                            "additionalProperties": false
                          }
                        ]
                      },
                      "eligibility": {
                        "type": "object",
                        "properties": {
                          "allowNewPatients": {
                            "type": "boolean"
                          },
                          "allowExistingPatients": {
                            "type": "boolean"
                          },
                          "minimumAge": {
                            "type": "integer",
                            "minimum": 0
                          },
                          "maximumAge": {
                            "type": "integer",
                            "minimum": 0
                          },
                          "allowedTags": {
                            "type": "array",
                            "items": {
                              "type": "string",
                              "minLength": 1
                            }
                          }
                        },
                        "required": [
                          "allowNewPatients",
                          "allowExistingPatients"
                        ],
                        "additionalProperties": false
                      },
                      "instructions": {
                        "type": "string"
                      },
                      "requiredDocuments": {
                        "type": "array",
                        "items": {
                          "type": "string",
                          "minLength": 1
                        }
                      },
                      "customFields": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "format": "uuid"
                            },
                            "label": {
                              "type": "string",
                              "minLength": 1
                            },
                            "fieldType": {
                              "type": "string",
                              "enum": [
                                "text",
                                "number",
                                "boolean",
                                "select",
                                "date"
                              ]
                            },
                            "required": {
                              "type": "boolean"
                            },
                            "options": {
                              "type": "array",
                              "items": {
                                "type": "string",
                                "minLength": 1
                              },
                              "maxItems": 50
                            }
                          },
                          "required": [
                            "label",
                            "fieldType",
                            "required"
                          ],
                          "additionalProperties": false
                        }
                      }
                    },
                    "required": [
                      "name",
                      "slug",
                      "durationMinutes",
                      "price",
                      "currency",
                      "minAdvanceMinutes",
                      "cancellationPolicy",
                      "eligibility"
                    ],
                    "additionalProperties": false
                  }
                },
                "required": [
                  "service"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClinicServiceTypeResponseDto"
                }
              }
            }
          }
        },
        "tags": [
          "Clinics"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/clinics/{clinicId}/service-types/{serviceTypeId}": {
      "delete": {
        "operationId": "remove",
        "summary": "Arquivar tipo de servico da clinica",
        "parameters": [
          {
            "name": "clinicId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "serviceTypeId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-tenant-id",
            "required": true,
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Tipo de servico arquivado"
          }
        },
        "tags": [
          "Clinics"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/clinics/{clinicId}/invitations": {
      "post": {
        "operationId": "inviteProfessional",
        "summary": "Emitir convite para profissional",
        "parameters": [
          {
            "name": "clinicId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-tenant-id",
            "required": true,
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "description": "Request payload",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "tenantId": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "professionalId": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "email": {
                    "type": "string",
                    "format": "email"
                  },
                  "channel": {
                    "type": "string",
                    "enum": [
                      "email",
                      "whatsapp"
                    ]
                  },
                  "economicSummary": {
                    "type": "object",
                    "properties": {
                      "items": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "serviceTypeId": {
                              "type": "string",
                              "format": "uuid"
                            },
                            "price": {
                              "type": "number",
                              "exclusiveMinimum": true,
                              "minimum": 0
                            },
                            "currency": {
                              "type": "string",
                              "enum": [
                                "BRL",
                                "USD",
                                "EUR"
                              ]
                            },
                            "payoutModel": {
                              "type": "string",
                              "enum": [
                                "fixed",
                                "percentage"
                              ]
                            },
                            "payoutValue": {
                              "type": "number",
                              "minimum": 0
                            }
                          },
                          "required": [
                            "serviceTypeId",
                            "price",
                            "currency",
                            "payoutModel",
                            "payoutValue"
                          ],
                          "additionalProperties": false
                        },
                        "minItems": 1
                      },
                      "orderOfRemainders": {
                        "type": "array",
                        "items": {
                          "type": "string",
                          "enum": [
                            "taxes",
                            "gateway",
                            "clinic",
                            "professional",
                            "platform"
                          ]
                        },
                        "minItems": 5,
                        "maxItems": 5
                      },
                      "roundingStrategy": {
                        "type": "string",
                        "enum": [
                          "half_even"
                        ]
                      }
                    },
                    "required": [
                      "items",
                      "orderOfRemainders",
                      "roundingStrategy"
                    ],
                    "additionalProperties": false
                  },
                  "expiresAt": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "metadata": {
                    "type": "object",
                    "additionalProperties": {}
                  }
                },
                "required": [
                  "tenantId",
                  "channel",
                  "economicSummary",
                  "expiresAt"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClinicInvitationResponseDto"
                }
              }
            }
          }
        },
        "tags": [
          "Clinics"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "get": {
        "operationId": "listInvitations",
        "summary": "Listar convites da clinica",
        "parameters": [
          {
            "name": "clinicId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-tenant-id",
            "required": true,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status",
            "required": false,
            "in": "query",
            "description": "Status separados por virgula",
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClinicInvitationListResponseDto"
                }
              }
            }
          }
        },
        "tags": [
          "Clinics"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/clinics/invitations/{invitationId}/accept": {
      "post": {
        "operationId": "acceptInvitation",
        "summary": "Aceitar convite de clinica",
        "parameters": [
          {
            "name": "invitationId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "description": "Request payload",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "tenantId": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "token": {
                    "type": "string",
                    "minLength": 10
                  }
                },
                "required": [
                  "tenantId",
                  "token"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClinicInvitationResponseDto"
                }
              }
            }
          }
        },
        "tags": [
          "Clinics"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/clinics/invitations/{invitationId}/revoke": {
      "post": {
        "operationId": "revokeInvitation",
        "summary": "Revogar convite de clinica",
        "parameters": [
          {
            "name": "invitationId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "description": "Request payload",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "tenantId": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "reason": {
                    "type": "string"
                  }
                },
                "required": [
                  "tenantId"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClinicInvitationResponseDto"
                }
              }
            }
          }
        },
        "tags": [
          "Clinics"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/clinics/invitations/{invitationId}/reissue": {
      "post": {
        "operationId": "reissueInvitation",
        "summary": "Reemitir convite de clinica com novo token",
        "parameters": [
          {
            "name": "invitationId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "description": "Request payload",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "tenantId": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "expiresAt": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "channel": {
                    "type": "string",
                    "enum": [
                      "email",
                      "whatsapp"
                    ]
                  }
                },
                "required": [
                  "expiresAt"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClinicInvitationResponseDto"
                }
              }
            }
          }
        },
        "tags": [
          "Clinics"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/clinics/{clinicId}/members": {
      "get": {
        "operationId": "list",
        "summary": "Listar membros da clinica",
        "parameters": [
          {
            "name": "clinicId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-tenant-id",
            "required": true,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "roles",
            "required": false,
            "in": "query",
            "description": "Papeis separados por virgula",
            "schema": {}
          },
          {
            "name": "status",
            "required": false,
            "in": "query",
            "description": "Status separados por virgula",
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClinicMemberListResponseDto"
                }
              }
            }
          }
        },
        "tags": [
          "Clinics"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/clinics/{clinicId}/members/professional/{professionalId}/financial-clearance": {
      "get": {
        "operationId": "getFinancialClearance",
        "summary": "Consultar pendencias financeiras do profissional",
        "parameters": [
          {
            "name": "clinicId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "professionalId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tenantId",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-tenant-id",
            "required": true,
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClinicProfessionalFinancialClearanceResponseDto"
                }
              }
            }
          }
        },
        "tags": [
          "Clinics"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/clinics/{clinicId}/members/{memberId}": {
      "patch": {
        "operationId": "update",
        "summary": "Atualizar membro da clinica",
        "parameters": [
          {
            "name": "clinicId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "memberId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-tenant-id",
            "required": true,
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "description": "Request payload",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "tenantId": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "status": {
                    "type": "string",
                    "enum": [
                      "pending_invitation",
                      "active",
                      "inactive",
                      "suspended"
                    ]
                  },
                  "role": {
                    "type": "string",
                    "enum": [
                      "CLINIC_OWNER",
                      "MANAGER",
                      "PROFESSIONAL",
                      "SECRETARY"
                    ]
                  },
                  "scope": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                },
                "required": [
                  "tenantId"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClinicMemberResponseDto"
                }
              }
            }
          }
        },
        "tags": [
          "Clinics"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/clinics": {
      "post": {
        "operationId": "createClinic",
        "summary": "Cadastrar nova clinica",
        "parameters": [],
        "requestBody": {
          "required": true,
          "description": "Request payload",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "tenantId": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "name": {
                    "type": "string",
                    "minLength": 1
                  },
                  "slug": {
                    "type": "string",
                    "minLength": 1
                  },
                  "primaryOwnerId": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "document": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "cnpj",
                          "cpf",
                          "mei"
                        ]
                      },
                      "value": {
                        "type": "string",
                        "minLength": 3
                      }
                    },
                    "required": [
                      "type",
                      "value"
                    ],
                    "additionalProperties": false
                  },
                  "holdSettings": {
                    "type": "object",
                    "properties": {
                      "ttlMinutes": {
                        "type": "integer",
                        "exclusiveMinimum": true,
                        "minimum": 0
                      },
                      "minAdvanceMinutes": {
                        "type": "integer",
                        "minimum": 0
                      },
                      "maxAdvanceMinutes": {
                        "type": "integer",
                        "exclusiveMinimum": true,
                        "minimum": 0
                      },
                      "allowOverbooking": {
                        "type": "boolean",
                        "default": false
                      },
                      "overbookingThreshold": {
                        "type": "integer",
                        "minimum": 0,
                        "maximum": 100
                      },
                      "resourceMatchingStrict": {
                        "type": "boolean",
                        "default": true
                      }
                    },
                    "required": [
                      "ttlMinutes",
                      "minAdvanceMinutes"
                    ],
                    "additionalProperties": false
                  },
                  "metadata": {
                    "type": "object",
                    "additionalProperties": {}
                  }
                },
                "required": [
                  "tenantId",
                  "name",
                  "slug",
                  "primaryOwnerId"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClinicSummaryDto"
                }
              }
            }
          }
        },
        "tags": [
          "Clinics"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "get": {
        "operationId": "listClinics",
        "summary": "Listar clinicas do tenant",
        "parameters": [
          {
            "name": "x-tenant-id",
            "required": true,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "includeDeleted",
            "required": false,
            "in": "query",
            "schema": {}
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "schema": {}
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {}
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "schema": {}
          },
          {
            "name": "status",
            "required": false,
            "in": "query",
            "description": "Status separados por virgula",
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClinicListResponseDto"
                }
              }
            }
          }
        },
        "tags": [
          "Clinics"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/clinics/{clinicId}": {
      "get": {
        "operationId": "getClinic",
        "summary": "Obter detalhes de uma clinica",
        "parameters": [
          {
            "name": "clinicId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-tenant-id",
            "required": true,
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClinicDetailsDto"
                }
              }
            }
          }
        },
        "tags": [
          "Clinics"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/clinics/{clinicId}/status": {
      "patch": {
        "operationId": "updateStatus",
        "summary": "Atualizar status da clinica",
        "parameters": [
          {
            "name": "clinicId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-tenant-id",
            "required": true,
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "description": "Request payload",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "tenantId": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "status": {
                    "type": "string",
                    "enum": [
                      "draft",
                      "pending",
                      "active",
                      "inactive",
                      "suspended"
                    ]
                  }
                },
                "required": [
                  "status"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClinicSummaryDto"
                }
              }
            }
          }
        },
        "tags": [
          "Clinics"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/clinics/{clinicId}/audit-logs": {
      "get": {
        "operationId": "listAuditLogs",
        "summary": "Listar logs de auditoria da clinica",
        "parameters": [
          {
            "name": "clinicId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-tenant-id",
            "required": true,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "schema": {}
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {}
          },
          {
            "name": "events",
            "required": false,
            "in": "query",
            "description": "Eventos separados por virgula",
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClinicAuditLogListResponseDto"
                }
              }
            }
          }
        },
        "tags": [
          "Clinics"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/clinics/{clinicId}/audit-logs/export": {
      "get": {
        "operationId": "exportAuditLogs",
        "summary": "Exportar logs de auditoria da clinica (CSV)",
        "parameters": [
          {
            "name": "clinicId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Quantidade maxima a exportar",
            "schema": {}
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {}
          },
          {
            "name": "events",
            "required": false,
            "in": "query",
            "description": "Eventos separados por virgula",
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Clinics"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/integrations/asaas/webhook": {
      "post": {
        "operationId": "handleWebhook",
        "summary": "Webhook de pagamentos ASAAS",
        "description": "Processa eventos de pagamento do ASAAS e sincroniza status na agenda da clinica.",
        "parameters": [],
        "requestBody": {
          "required": true,
          "description": "Request payload",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "event": {
                    "type": "string",
                    "minLength": 1
                  },
                  "sandbox": {
                    "type": "boolean"
                  },
                  "payment": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "minLength": 1
                      },
                      "status": {
                        "type": "string"
                      },
                      "dueDate": {
                        "type": "string"
                      },
                      "paymentDate": {
                        "type": "string"
                      },
                      "customer": {
                        "type": "string"
                      },
                      "billingType": {
                        "type": "string"
                      },
                      "value": {
                        "type": "number"
                      },
                      "netValue": {
                        "type": "number"
                      }
                    },
                    "required": [
                      "id"
                    ],
                    "additionalProperties": true
                  }
                },
                "required": [
                  "event",
                  "payment"
                ],
                "additionalProperties": true
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Evento recebido para processamento."
          }
        },
        "tags": [
          "Clinic Webhooks"
        ]
      }
    },
    "/integrations/google-calendar/webhook": {
      "post": {
        "operationId": "handleGoogleEvent",
        "summary": "Webhook de eventos do Google Calendar",
        "description": "Recebe eventos externos do Google Calendar e registra bloqueios pendentes conforme regras da clinica.",
        "parameters": [],
        "requestBody": {
          "required": true,
          "description": "Request payload",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ClinicGoogleWebhookSchema"
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Evento recebido para processamento.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClinicExternalCalendarEventResponseDto"
                }
              }
            }
          }
        },
        "tags": [
          "Clinic Webhooks"
        ]
      }
    },
    "/clinics/{clinicId}/payments": {
      "get": {
        "operationId": "listPaymentLedgers",
        "summary": "Listar ledger financeiro dos agendamentos da clinica",
        "parameters": [
          {
            "name": "clinicId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-tenant-id",
            "required": true,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "offset",
            "required": false,
            "in": "query",
            "description": "Deslocamento para paginacao",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Quantidade maxima de registros (ate 100)",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "to",
            "required": false,
            "in": "query",
            "description": "Filtro de data final (ISO 8601) para confirmedAt",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "from",
            "required": false,
            "in": "query",
            "description": "Filtro de data inicial (ISO 8601) para confirmedAt",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "paymentStatus",
            "required": false,
            "in": "query",
            "description": "Estados de pagamento separados por virgula (approved, settled, refunded, chargeback, failed)",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClinicPaymentLedgerListResponseDto"
                }
              }
            }
          }
        },
        "tags": [
          "Clinics"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/clinics/{clinicId}/payments/{appointmentId}/ledger": {
      "get": {
        "operationId": "getPaymentLedger",
        "summary": "Obter ledger financeiro de um agendamento da clinica",
        "parameters": [
          {
            "name": "clinicId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "appointmentId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-tenant-id",
            "required": true,
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClinicPaymentLedgerResponseDto"
                }
              }
            }
          }
        },
        "tags": [
          "Clinics"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    }
  },
  "info": {
    "title": "OnTerapi API",
    "description": "API for OnTerapi Platform",
    "version": "0.16.1",
    "contact": {}
  },
  "tags": [],
  "servers": [
    {
      "url": "/"
    },
    {
      "url": "http://localhost:3000"
    }
  ],
  "components": {
    "securitySchemes": {
      "bearer": {
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "type": "http"
      }
    },
    "schemas": {
      "SignInDto": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "Email do usu rio",
            "example": "user@example.com"
          },
          "password": {
            "type": "string",
            "description": "Senha do usu rio",
            "example": "SenhaForte123!"
          },
          "rememberMe": {
            "type": "boolean",
            "description": "Manter conectado",
            "example": false,
            "default": false
          },
          "deviceInfo": {
            "type": "object",
            "description": "Informa  es do dispositivo"
          }
        },
        "required": [
          "email",
          "password"
        ]
      },
      "SignInResponseDto": {
        "type": "object",
        "properties": {
          "accessToken": {
            "type": "string",
            "description": "Token de acesso JWT",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
          },
          "refreshToken": {
            "type": "string",
            "description": "Refresh token",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
          },
          "expiresIn": {
            "type": "number",
            "description": "Tempo de expira  o em segundos",
            "example": 900
          },
          "requiresTwoFactor": {
            "type": "boolean",
            "description": "Se requer autentica  o de dois fatores",
            "example": false
          },
          "tempToken": {
            "type": "string",
            "description": "Token tempor rio para 2FA",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
          },
          "user": {
            "type": "object",
            "description": "Dados do usu rio autenticado"
          }
        }
      },
      "RefreshTokenDto": {
        "type": "object",
        "properties": {
          "refreshToken": {
            "type": "string",
            "description": "Refresh token v lido",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
          },
          "deviceInfo": {
            "type": "object",
            "description": "Informa  es do dispositivo"
          }
        },
        "required": [
          "refreshToken"
        ]
      },
      "RefreshTokenResponseDto": {
        "type": "object",
        "properties": {
          "accessToken": {
            "type": "string",
            "description": "Novo token de acesso JWT",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
          },
          "refreshToken": {
            "type": "string",
            "description": "Novo refresh token",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
          },
          "expiresIn": {
            "type": "number",
            "description": "Tempo de expira  o em segundos",
            "example": 900
          },
          "user": {
            "type": "object",
            "description": "Dados do usu rio"
          }
        },
        "required": [
          "accessToken",
          "refreshToken",
          "expiresIn",
          "user"
        ]
      },
      "ResendVerificationEmailDto": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "Email do usu rio que receber  o link de verifica  o",
            "example": "usuario@example.com"
          }
        },
        "required": [
          "email"
        ]
      },
      "ResendVerificationEmailResponseDto": {
        "type": "object",
        "properties": {
          "delivered": {
            "type": "boolean",
            "description": "Indica se o email foi entregue",
            "example": true
          },
          "alreadyVerified": {
            "type": "boolean",
            "description": "Indica se o email j  estava verificado",
            "example": false
          },
          "message": {
            "type": "string",
            "description": "Mensagem de retorno para o usu rio",
            "example": "Email de verifica  o enviado"
          }
        },
        "required": [
          "delivered",
          "alreadyVerified",
          "message"
        ]
      },
      "RequestPasswordResetDto": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "Email do usu rio que receber  as instru  es de redefini  o",
            "example": "usuario@example.com"
          }
        },
        "required": [
          "email"
        ]
      },
      "RequestPasswordResetResponseDto": {
        "type": "object",
        "properties": {
          "delivered": {
            "type": "boolean",
            "description": "Indica se o email foi entregue",
            "example": true
          },
          "message": {
            "type": "string",
            "description": "Mensagem de retorno",
            "example": "Email de recupera  o enviado com sucesso"
          }
        },
        "required": [
          "delivered",
          "message"
        ]
      },
      "ConfirmPasswordResetDto": {
        "type": "object",
        "properties": {
          "accessToken": {
            "type": "string",
            "description": "Token de acesso enviado pelo Supabase",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
          },
          "newPassword": {
            "type": "string",
            "description": "Nova senha que ser  definida",
            "example": "SenhaForte123!"
          },
          "refreshToken": {
            "type": "string",
            "description": "Refresh token associado, se dispon vel",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
          }
        },
        "required": [
          "accessToken",
          "newPassword"
        ]
      },
      "ConfirmPasswordResetResponseDto": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Indica se a senha foi redefinida com sucesso",
            "example": true
          },
          "message": {
            "type": "string",
            "description": "Mensagem de retorno",
            "example": "Senha redefinida com sucesso"
          }
        },
        "required": [
          "success",
          "message"
        ]
      },
      "SignOutDto": {
        "type": "object",
        "properties": {
          "refreshToken": {
            "type": "string",
            "description": "Refresh token para invalidar",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
          },
          "allDevices": {
            "type": "boolean",
            "description": "Fazer logout em todos os dispositivos",
            "example": false,
            "default": false
          }
        }
      },
      "SignOutResponseDto": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Mensagem de sucesso",
            "example": "Logout realizado com sucesso"
          },
          "revokedSessions": {
            "type": "number",
            "description": "N mero de sess es revogadas",
            "example": 1
          }
        },
        "required": [
          "message",
          "revokedSessions"
        ]
      },
      "MeResponseDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "ID do usu rio",
            "example": "123e4567-e89b-12d3-a456-426614174000"
          },
          "email": {
            "type": "string",
            "description": "Email do usu rio",
            "example": "usuario@example.com"
          },
          "name": {
            "type": "string",
            "description": "Nome completo do usu rio",
            "example": "Jo o Silva"
          },
          "role": {
            "type": "string",
            "description": "Role do usu rio",
            "example": "PROFESSIONAL"
          },
          "tenantId": {
            "type": "string",
            "description": "ID do tenant (cl nica)",
            "example": "clinic-123"
          },
          "createdAt": {
            "type": "string",
            "description": "Data de cria  o da conta",
            "example": "2024-01-01T00:00:00Z"
          },
          "emailVerified": {
            "type": "boolean",
            "description": "Email verificado",
            "example": true
          },
          "twoFactorEnabled": {
            "type": "boolean",
            "description": "2FA habilitado",
            "example": false
          }
        },
        "required": [
          "id",
          "email",
          "name",
          "role",
          "createdAt",
          "emailVerified",
          "twoFactorEnabled"
        ]
      },
      "ValidateTwoFADto": {
        "type": "object",
        "properties": {
          "tempToken": {
            "type": "string",
            "description": "Token tempor rio recebido no login",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
          },
          "code": {
            "type": "string",
            "description": "C digo de 6 d gitos",
            "example": "123456",
            "minLength": 6,
            "maxLength": 6
          },
          "trustDevice": {
            "type": "boolean",
            "description": "Confiar neste dispositivo",
            "example": false,
            "default": false
          },
          "deviceInfo": {
            "type": "object",
            "description": "Informa  es do dispositivo"
          }
        },
        "required": [
          "tempToken",
          "code"
        ]
      },
      "ValidateTwoFAResponseDto": {
        "type": "object",
        "properties": {
          "accessToken": {
            "type": "string",
            "description": "Token de acesso JWT",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
          },
          "refreshToken": {
            "type": "string",
            "description": "Refresh token",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
          },
          "expiresIn": {
            "type": "number",
            "description": "Tempo de expira  o em segundos",
            "example": 900
          },
          "user": {
            "type": "object",
            "description": "Dados do usu rio autenticado"
          }
        },
        "required": [
          "accessToken",
          "refreshToken",
          "expiresIn",
          "user"
        ]
      },
      "CreateUserInputDTO": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "Email do usuario",
            "example": "usuario@email.com"
          },
          "password": {
            "type": "string",
            "description": "Senha forte (minimo 8 caracteres, maiuscula, minuscula, numero e especial)",
            "example": "SenhaForte123!"
          },
          "name": {
            "type": "string",
            "description": "Nome completo do usuario",
            "example": "Joao Silva"
          },
          "cpf": {
            "type": "string",
            "description": "CPF sem formatacao (apenas numeros)",
            "example": "12345678901"
          },
          "phone": {
            "type": "string",
            "description": "Telefone com DDD (apenas numeros)",
            "example": "11999999999"
          },
          "role": {
            "type": "string",
            "description": "Role/Perfil do usuario no sistema",
            "enum": [
              "SUPER_ADMIN",
              "ADMIN_FINANCEIRO",
              "ADMIN_SUPORTE",
              "ADMIN_EDITOR",
              "MARKETPLACE_MANAGER",
              "CLINIC_OWNER",
              "PROFESSIONAL",
              "SECRETARY",
              "MANAGER",
              "PATIENT",
              "VISITOR"
            ],
            "example": "PATIENT"
          },
          "tenantId": {
            "type": "string",
            "description": "ID do tenant (clinica) ao qual o usuario pertence",
            "example": "550e8400-e29b-41d4-a716-446655440000"
          }
        },
        "required": [
          "email",
          "password",
          "name",
          "cpf",
          "role"
        ]
      },
      "CreateUserResponseDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "ID unico do usuario",
            "example": "550e8400-e29b-41d4-a716-446655440001"
          },
          "slug": {
            "type": "string",
            "description": "Slug unico do usuario",
            "example": "joao-silva"
          },
          "email": {
            "type": "string",
            "description": "Email do usuario",
            "example": "usuario@email.com"
          },
          "name": {
            "type": "string",
            "description": "Nome completo do usuario",
            "example": "Joao Silva"
          },
          "cpf": {
            "type": "string",
            "description": "CPF mascarado",
            "example": "123.***.***-01"
          },
          "phone": {
            "type": "string",
            "description": "Telefone com DDD",
            "example": "11999999999"
          },
          "role": {
            "type": "string",
            "description": "Role/Perfil do usuario",
            "enum": [
              "SUPER_ADMIN",
              "ADMIN_FINANCEIRO",
              "ADMIN_SUPORTE",
              "ADMIN_EDITOR",
              "MARKETPLACE_MANAGER",
              "CLINIC_OWNER",
              "PROFESSIONAL",
              "SECRETARY",
              "MANAGER",
              "PATIENT",
              "VISITOR"
            ],
            "example": "PATIENT"
          },
          "tenantId": {
            "type": "string",
            "description": "ID do tenant (clinica)",
            "example": "550e8400-e29b-41d4-a716-446655440000"
          },
          "isActive": {
            "type": "boolean",
            "description": "Indica se o usuario esta ativo",
            "example": true
          },
          "emailVerified": {
            "type": "boolean",
            "description": "Indica se o email foi verificado",
            "example": false
          },
          "twoFactorEnabled": {
            "type": "boolean",
            "description": "Indica se 2FA esta habilitado",
            "example": false
          },
          "createdAt": {
            "format": "date-time",
            "type": "string",
            "description": "Data de criacao",
            "example": "2025-01-09T10:00:00Z"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string",
            "description": "Data da ultima atualizacao",
            "example": "2025-01-09T10:00:00Z"
          }
        },
        "required": [
          "id",
          "slug",
          "email",
          "name",
          "cpf",
          "role",
          "isActive",
          "emailVerified",
          "twoFactorEnabled",
          "createdAt",
          "updatedAt"
        ]
      },
      "UserResponseDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "ID unico do usuario",
            "example": "550e8400-e29b-41d4-a716-446655440001"
          },
          "slug": {
            "type": "string",
            "description": "Slug unico do usuario",
            "example": "joao-silva"
          },
          "email": {
            "type": "string",
            "description": "Email do usuario",
            "example": "usuario@email.com"
          },
          "name": {
            "type": "string",
            "description": "Nome completo do usuario",
            "example": "Joao Silva"
          },
          "cpf": {
            "type": "string",
            "description": "CPF mascarado",
            "example": "123.***.***-01"
          },
          "phone": {
            "type": "string",
            "description": "Telefone com DDD",
            "example": "11999999999"
          },
          "role": {
            "type": "string",
            "description": "Role ou perfil do usuario",
            "enum": [
              "SUPER_ADMIN",
              "ADMIN_FINANCEIRO",
              "ADMIN_SUPORTE",
              "ADMIN_EDITOR",
              "MARKETPLACE_MANAGER",
              "CLINIC_OWNER",
              "PROFESSIONAL",
              "SECRETARY",
              "MANAGER",
              "PATIENT",
              "VISITOR"
            ],
            "example": "PATIENT"
          },
          "tenantId": {
            "type": "string",
            "description": "ID do tenant (clinica)",
            "example": "550e8400-e29b-41d4-a716-446655440000"
          },
          "isActive": {
            "type": "boolean",
            "description": "Indica se o usuario esta ativo",
            "example": true
          },
          "emailVerified": {
            "type": "boolean",
            "description": "Indica se o email foi verificado",
            "example": false
          },
          "twoFactorEnabled": {
            "type": "boolean",
            "description": "Indica se o segundo fator esta habilitado",
            "example": false
          },
          "lastLoginAt": {
            "format": "date-time",
            "type": "string",
            "description": "Data do ultimo login",
            "example": "2025-01-09T09:30:00Z"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string",
            "description": "Data de criacao",
            "example": "2025-01-09T10:00:00Z"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string",
            "description": "Data da ultima atualizacao",
            "example": "2025-01-09T10:00:00Z"
          }
        },
        "required": [
          "id",
          "slug",
          "email",
          "name",
          "cpf",
          "role",
          "isActive",
          "emailVerified",
          "twoFactorEnabled",
          "createdAt",
          "updatedAt"
        ]
      },
      "PaginationDto": {
        "type": "object",
        "properties": {
          "page": {
            "type": "number",
            "description": "Pagina atual",
            "example": 1
          },
          "limit": {
            "type": "number",
            "description": "Limite de resultados por pagina",
            "example": 20
          },
          "total": {
            "type": "number",
            "description": "Total de registros",
            "example": 100
          },
          "totalPages": {
            "type": "number",
            "description": "Total de paginas",
            "example": 5
          }
        }
      },
      "ListUsersResponseDto": {
        "type": "object",
        "properties": {
          "data": {
            "description": "Lista de usuarios",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserResponseDto"
            }
          },
          "pagination": {
            "description": "Informacoes de paginacao",
            "allOf": [
              {
                "$ref": "#/components/schemas/PaginationDto"
              }
            ]
          }
        }
      },
      "UpdateUserDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Nome completo do usuario",
            "example": "Joao Silva Santos"
          },
          "phone": {
            "type": "string",
            "description": "Telefone com DDD (apenas numeros)",
            "example": "11888888888"
          },
          "isActive": {
            "type": "boolean",
            "description": "Status ativo/inativo do usuario",
            "example": true
          },
          "metadata": {
            "type": "object",
            "description": "Metadados adicionais do usuario",
            "example": {
              "preferredLanguage": "pt-BR",
              "theme": "dark"
            }
          }
        }
      },
      "PatientContinuousMedicationResponseDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Nome da medicacao",
            "example": "Losartana"
          },
          "dosage": {
            "type": "string",
            "description": "Dosagem prescrita",
            "example": "50mg"
          },
          "frequency": {
            "type": "string",
            "description": "Frequencia de uso",
            "example": "1x ao dia"
          },
          "condition": {
            "type": "string",
            "description": "Condicao associada",
            "example": "Hipertensao"
          }
        },
        "required": [
          "name"
        ]
      },
      "PatientMedicalInfoResponseDto": {
        "type": "object",
        "properties": {
          "allergies": {
            "description": "Alergias registradas",
            "example": [
              "poeira"
            ],
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "chronicConditions": {
            "description": "Condicoes cronicas",
            "example": [
              "diabetes tipo 2"
            ],
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "preExistingConditions": {
            "description": "Condicoes pre-existentes",
            "example": [
              "hipertensao"
            ],
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "medications": {
            "description": "Medicacoes em uso",
            "example": [
              "Metformina 850mg"
            ],
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "continuousMedications": {
            "description": "Medicacoes continuas informadas no cadastro",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PatientContinuousMedicationResponseDto"
            }
          },
          "observations": {
            "type": "string",
            "description": "Observacoes clinicas adicionais"
          },
          "bloodType": {
            "type": "string",
            "description": "Tipo sanguineo",
            "example": "O+"
          },
          "lifestyle": {
            "type": "string",
            "description": "Estilo de vida resumido",
            "example": "Ativo"
          },
          "heightCm": {
            "type": "number",
            "description": "Altura em centimetros",
            "example": 170
          },
          "weightKg": {
            "type": "number",
            "description": "Peso em quilogramas",
            "example": 72.5
          }
        }
      },
      "PatientResponseDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "ID do paciente",
            "example": "dbbaf755-4bea-4212-838c-0a192e7fffa0"
          },
          "slug": {
            "type": "string",
            "description": "Slug do paciente",
            "example": "joao-silva"
          },
          "fullName": {
            "type": "string",
            "description": "Nome completo",
            "example": "Joao Silva"
          },
          "status": {
            "type": "string",
            "description": "Status atual",
            "example": "active"
          },
          "riskLevel": {
            "type": "string",
            "description": "Nivel de risco",
            "enum": [
              "low",
              "medium",
              "high"
            ],
            "example": "low"
          },
          "cpfMasked": {
            "type": "string",
            "description": "CPF mascarado",
            "example": "390.***.***.05"
          },
          "phone": {
            "type": "string",
            "description": "Telefone",
            "example": "+5511999998888"
          },
          "whatsapp": {
            "type": "string",
            "description": "WhatsApp",
            "example": "+5511988887777"
          },
          "email": {
            "type": "string",
            "description": "Email",
            "example": "patient@example.com"
          },
          "nextAppointmentAt": {
            "type": "string",
            "description": "Proxima consulta",
            "example": "2025-09-23T13:00:00Z"
          },
          "lastAppointmentAt": {
            "type": "string",
            "description": "Ultima consulta",
            "example": "2025-09-20T13:00:00Z"
          },
          "professionalId": {
            "type": "string",
            "description": "Profissional responsavel",
            "example": "38f5f077-2042-4283-9308-b6bb73e18183"
          },
          "tags": {
            "description": "Tags",
            "example": [
              "VIP"
            ],
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "createdAt": {
            "type": "string",
            "description": "Data de criacao",
            "example": "2025-09-21T03:34:49.418Z"
          },
          "updatedAt": {
            "type": "string",
            "description": "Data de atualizacao",
            "example": "2025-09-21T03:41:19.438Z"
          },
          "acceptedTerms": {
            "type": "boolean",
            "description": "Aceite dos termos de uso",
            "example": true
          },
          "acceptedTermsAt": {
            "type": "string",
            "description": "Data/hora do aceite",
            "example": "2025-09-21T03:34:49.418Z"
          },
          "medical": {
            "description": "Informacoes medicas registradas no cadastro",
            "example": {
              "allergies": [
                "poeira"
              ],
              "preExistingConditions": [
                "hipertensao"
              ],
              "chronicConditions": [
                "diabetes tipo 2"
              ],
              "medications": [
                "Metformina 850mg"
              ],
              "continuousMedications": [
                {
                  "name": "Losartana",
                  "dosage": "50mg",
                  "frequency": "1x ao dia",
                  "condition": "Hipertensao"
                }
              ],
              "heightCm": 170,
              "weightKg": 72.5
            },
            "allOf": [
              {
                "$ref": "#/components/schemas/PatientMedicalInfoResponseDto"
              }
            ]
          }
        },
        "required": [
          "id",
          "slug",
          "fullName",
          "status",
          "cpfMasked",
          "createdAt",
          "updatedAt"
        ]
      },
      "PatientsListResponseDto": {
        "type": "object",
        "properties": {
          "data": {
            "example": [
              {
                "id": "dbbaf755-4bea-4212-838c-0a192e7fffa0",
                "slug": "joao-silva",
                "fullName": "Joao Silva",
                "status": "active",
                "riskLevel": "low",
                "cpfMasked": "390.***.***.05",
                "phone": "+5511999998888",
                "whatsapp": "+5511988887777",
                "email": "patient@example.com",
                "nextAppointmentAt": "2025-09-23T13:00:00Z",
                "lastAppointmentAt": "2025-09-20T13:00:00Z",
                "professionalId": "38f5f077-2042-4283-9308-b6bb73e18183",
                "tags": [
                  "VIP"
                ],
                "createdAt": "2025-09-21T03:34:49.418Z",
                "updatedAt": "2025-09-21T03:41:19.438Z",
                "acceptedTerms": true,
                "acceptedTermsAt": "2025-09-21T03:34:49.418Z",
                "medical": {
                  "preExistingConditions": [
                    "hipertensao"
                  ],
                  "chronicConditions": [
                    "diabetes tipo 2"
                  ],
                  "continuousMedications": [
                    {
                      "name": "Losartana",
                      "dosage": "50mg",
                      "frequency": "1x ao dia",
                      "condition": "Hipertensao"
                    }
                  ],
                  "heightCm": 170,
                  "weightKg": 72.5
                }
              }
            ],
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PatientResponseDto"
            }
          },
          "total": {
            "type": "number",
            "description": "Total de registros",
            "example": 120
          }
        },
        "required": [
          "data",
          "total"
        ]
      },
      "PatientContinuousMedicationDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Nome da medicacao",
            "example": "Losartana"
          },
          "dosage": {
            "type": "string",
            "description": "Dosagem prescrita",
            "example": "50mg"
          },
          "frequency": {
            "type": "string",
            "description": "Frequencia de uso",
            "example": "2x ao dia"
          },
          "condition": {
            "type": "string",
            "description": "Condicao associada",
            "example": "Hipertensao"
          }
        },
        "required": [
          "name"
        ]
      },
      "CreatePatientDto": {
        "type": "object",
        "properties": {
          "tenantId": {
            "type": "string",
            "description": "Tenant destino (opcional)",
            "example": "d8c3ab8a-1234-4a5b-8c5e-0123456789ab"
          },
          "fullName": {
            "type": "string",
            "description": "Nome completo do paciente",
            "example": "Maria Silva"
          },
          "cpf": {
            "type": "string",
            "description": "CPF do paciente",
            "example": "52998224725"
          },
          "birthDate": {
            "type": "string",
            "description": "Data de nascimento (ISO)",
            "example": "1990-05-10"
          },
          "gender": {
            "type": "string",
            "description": "Genero",
            "example": "Feminino"
          },
          "maritalStatus": {
            "type": "string",
            "description": "Estado civil",
            "example": "Casada"
          },
          "email": {
            "type": "string",
            "description": "Email do paciente",
            "example": "maria@example.com"
          },
          "phone": {
            "type": "string",
            "description": "Telefone principal",
            "example": "+5511999998888"
          },
          "whatsapp": {
            "type": "string",
            "description": "WhatsApp",
            "example": "+5511988887777"
          },
          "zipCode": {
            "type": "string",
            "description": "CEP (somente numeros)",
            "example": "01310930"
          },
          "street": {
            "type": "string",
            "description": "Rua/Avenida",
            "example": "Avenida Paulista"
          },
          "number": {
            "type": "string",
            "description": "Numero",
            "example": "1000"
          },
          "complement": {
            "type": "string",
            "description": "Complemento",
            "example": "Conjunto 101"
          },
          "district": {
            "type": "string",
            "description": "Bairro",
            "example": "Bela Vista"
          },
          "city": {
            "type": "string",
            "description": "Cidade",
            "example": "Sao Paulo"
          },
          "state": {
            "type": "string",
            "description": "Estado",
            "example": "SP"
          },
          "country": {
            "type": "string",
            "description": "Pais",
            "example": "Brasil"
          },
          "allergies": {
            "description": "Alergias principais",
            "example": [
              "penicilina"
            ],
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "chronicConditions": {
            "description": "Condicoes cronicas",
            "example": [
              "diabetes tipo 2"
            ],
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "preExistingConditions": {
            "description": "Condicoes pre-existentes",
            "example": [
              "hipertensao"
            ],
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "medications": {
            "description": "Medicacoes em uso",
            "example": [
              "Metformina 850mg"
            ],
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "continuousMedications": {
            "description": "Medicacao continua informada no cadastro",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PatientContinuousMedicationDto"
            }
          },
          "heightCm": {
            "type": "number",
            "description": "Altura em centimetros",
            "example": 172
          },
          "weightKg": {
            "type": "number",
            "description": "Peso em quilogramas",
            "example": 68.5
          },
          "observations": {
            "type": "string",
            "description": "Observacoes clinicas relevantes"
          },
          "tags": {
            "description": "Tags do paciente",
            "example": [
              "VIP",
              "Plano Ouro"
            ],
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "professionalId": {
            "type": "string",
            "description": "Identificador do profissional responsavel",
            "example": "b3a1f6b6-6f14-4f42-8c4a-bf508f124d55"
          },
          "status": {
            "type": "string",
            "description": "Status inicial do paciente",
            "example": "active"
          },
          "acceptedTerms": {
            "type": "boolean",
            "description": "Confirmacao de aceite dos termos de uso",
            "example": true
          },
          "acceptedTermsAt": {
            "type": "string",
            "description": "Data/hora do aceite (ISO)",
            "example": "2024-09-20T18:45:00Z"
          }
        },
        "required": [
          "fullName",
          "cpf",
          "acceptedTerms"
        ]
      },
      "PatientContactResponseDto": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "Email principal",
            "example": "paciente@example.com"
          },
          "phone": {
            "type": "string",
            "description": "Telefone principal",
            "example": "+5511999998888"
          },
          "whatsapp": {
            "type": "string",
            "description": "WhatsApp",
            "example": "+5511988887777"
          }
        }
      },
      "PatientAddressResponseDto": {
        "type": "object",
        "properties": {
          "zipCode": {
            "type": "string",
            "description": "CEP",
            "example": "01310930"
          },
          "street": {
            "type": "string",
            "description": "Logradouro",
            "example": "Rua Curl"
          },
          "number": {
            "type": "string",
            "description": "Numero",
            "example": "123"
          },
          "complement": {
            "type": "string",
            "description": "Complemento",
            "example": "Conjunto 101"
          },
          "district": {
            "type": "string",
            "description": "Bairro",
            "example": "Centro"
          },
          "city": {
            "type": "string",
            "description": "Cidade",
            "example": "Sao Paulo"
          },
          "state": {
            "type": "string",
            "description": "Estado",
            "example": "SP"
          },
          "country": {
            "type": "string",
            "description": "Pais",
            "example": "Brasil"
          }
        }
      },
      "PatientTagDetailDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Identificador da tag",
            "example": "curl-test"
          },
          "label": {
            "type": "string",
            "description": "Rotulo da tag",
            "example": "curl-test"
          },
          "color": {
            "type": "string",
            "description": "Cor associada",
            "example": "#FF8800"
          }
        },
        "required": [
          "id",
          "label"
        ]
      },
      "PatientDetailPatientDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "ID do paciente",
            "example": "dbbaf755-4bea-4212-838c-0a192e7fffa0"
          },
          "slug": {
            "type": "string",
            "description": "Slug do paciente",
            "example": "joao-silva"
          },
          "fullName": {
            "type": "string",
            "description": "Nome completo",
            "example": "Joao Silva"
          },
          "status": {
            "type": "string",
            "description": "Status atual",
            "example": "active"
          },
          "riskLevel": {
            "type": "string",
            "description": "Nivel de risco",
            "enum": [
              "low",
              "medium",
              "high"
            ],
            "example": "low"
          },
          "cpfMasked": {
            "type": "string",
            "description": "CPF mascarado",
            "example": "390.***.***.05"
          },
          "phone": {
            "type": "string",
            "description": "Telefone",
            "example": "+5511999998888"
          },
          "whatsapp": {
            "type": "string",
            "description": "WhatsApp",
            "example": "+5511988887777"
          },
          "email": {
            "type": "string",
            "description": "Email",
            "example": "patient@example.com"
          },
          "nextAppointmentAt": {
            "type": "string",
            "description": "Proxima consulta",
            "example": "2025-09-23T13:00:00Z"
          },
          "lastAppointmentAt": {
            "type": "string",
            "description": "Ultima consulta",
            "example": "2025-09-20T13:00:00Z"
          },
          "professionalId": {
            "type": "string",
            "description": "Profissional responsavel",
            "example": "38f5f077-2042-4283-9308-b6bb73e18183"
          },
          "tags": {
            "description": "Tags",
            "example": [
              "VIP"
            ],
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "createdAt": {
            "type": "string",
            "description": "Data de criacao",
            "example": "2025-09-21T03:34:49.418Z"
          },
          "updatedAt": {
            "type": "string",
            "description": "Data de atualizacao",
            "example": "2025-09-21T03:41:19.438Z"
          },
          "acceptedTerms": {
            "type": "boolean",
            "description": "Aceite dos termos de uso",
            "example": true
          },
          "acceptedTermsAt": {
            "type": "string",
            "description": "Data/hora do aceite",
            "example": "2025-09-21T03:34:49.418Z"
          },
          "medical": {
            "description": "Informacoes medicas registradas no cadastro",
            "example": {
              "allergies": [
                "poeira"
              ],
              "preExistingConditions": [
                "hipertensao"
              ],
              "chronicConditions": [
                "diabetes tipo 2"
              ],
              "medications": [
                "Metformina 850mg"
              ],
              "continuousMedications": [
                {
                  "name": "Losartana",
                  "dosage": "50mg",
                  "frequency": "1x ao dia",
                  "condition": "Hipertensao"
                }
              ],
              "heightCm": 170,
              "weightKg": 72.5
            },
            "allOf": [
              {
                "$ref": "#/components/schemas/PatientMedicalInfoResponseDto"
              }
            ]
          },
          "contact": {
            "description": "Informacoes de contato",
            "allOf": [
              {
                "$ref": "#/components/schemas/PatientContactResponseDto"
              }
            ]
          },
          "address": {
            "description": "Endereco completo",
            "allOf": [
              {
                "$ref": "#/components/schemas/PatientAddressResponseDto"
              }
            ]
          },
          "tagDetails": {
            "description": "Tags com metadados",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PatientTagDetailDto"
            }
          }
        },
        "required": [
          "id",
          "slug",
          "fullName",
          "status",
          "cpfMasked",
          "createdAt",
          "updatedAt"
        ]
      },
      "PatientDetailSummaryDto": {
        "type": "object",
        "properties": {
          "appointments": {
            "type": "number",
            "description": "Total de consultas",
            "example": 25
          },
          "completedAppointments": {
            "type": "number",
            "description": "Consultas concluidas",
            "example": 22
          },
          "cancellations": {
            "type": "number",
            "description": "Cancelamentos",
            "example": 1
          },
          "revenue": {
            "type": "number",
            "description": "Receita total (centavos)",
            "example": 1250000
          },
          "pendingPayments": {
            "type": "number",
            "description": "Pagamentos pendentes (centavos)",
            "example": 35000
          }
        },
        "required": [
          "appointments",
          "completedAppointments",
          "cancellations",
          "revenue",
          "pendingPayments"
        ]
      },
      "PatientDetailDto": {
        "type": "object",
        "properties": {
          "patient": {
            "description": "Dados do paciente",
            "allOf": [
              {
                "$ref": "#/components/schemas/PatientDetailPatientDto"
              }
            ]
          },
          "summary": {
            "description": "Resumo",
            "allOf": [
              {
                "$ref": "#/components/schemas/PatientDetailSummaryDto"
              }
            ]
          },
          "timeline": {
            "description": "Linha do tempo",
            "type": "array",
            "items": {
              "type": "object"
            }
          },
          "insights": {
            "type": "object",
            "description": "Insights sugeridos"
          },
          "quickActions": {
            "description": "Acoes rapidas sugeridas",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "patient",
          "summary",
          "timeline",
          "quickActions"
        ]
      },
      "UpdatePatientDto": {
        "type": "object",
        "properties": {
          "fullName": {
            "type": "string",
            "description": "Nome completo",
            "example": "Maria Silva"
          },
          "shortName": {
            "type": "string",
            "description": "Nome curto para exibicao",
            "example": "Maria"
          },
          "email": {
            "type": "string",
            "description": "Email do paciente",
            "example": "maria@example.com"
          },
          "phone": {
            "type": "string",
            "description": "Telefone principal",
            "example": "+5511999998888"
          },
          "whatsapp": {
            "type": "string",
            "description": "WhatsApp",
            "example": "+5511988887777"
          },
          "zipCode": {
            "type": "string",
            "description": "CEP (somente numeros)",
            "example": "01310930"
          },
          "street": {
            "type": "string",
            "description": "Rua/Avenida",
            "example": "Avenida Paulista"
          },
          "number": {
            "type": "string",
            "description": "Numero",
            "example": "1000"
          },
          "complement": {
            "type": "string",
            "description": "Complemento",
            "example": "Conjunto 101"
          },
          "district": {
            "type": "string",
            "description": "Bairro",
            "example": "Bela Vista"
          },
          "city": {
            "type": "string",
            "description": "Cidade",
            "example": "Sao Paulo"
          },
          "state": {
            "type": "string",
            "description": "Estado",
            "example": "SP"
          },
          "country": {
            "type": "string",
            "description": "Pais",
            "example": "Brasil"
          },
          "allergies": {
            "description": "Alergias",
            "example": [
              "penicilina"
            ],
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "chronicConditions": {
            "description": "Condicoes cronicas",
            "example": [
              "diabetes tipo 2"
            ],
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "preExistingConditions": {
            "description": "Condicoes pre-existentes",
            "example": [
              "hipertensao"
            ],
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "medications": {
            "description": "Medicacoes em uso",
            "example": [
              "Metformina 850mg"
            ],
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "continuousMedications": {
            "description": "Medicacao continua registrada no cadastro",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PatientContinuousMedicationDto"
            }
          },
          "heightCm": {
            "type": "number",
            "description": "Altura em centimetros",
            "example": 172
          },
          "weightKg": {
            "type": "number",
            "description": "Peso em quilogramas",
            "example": 68.5
          },
          "observations": {
            "type": "string",
            "description": "Observacoes clinicas relevantes"
          },
          "status": {
            "type": "string",
            "description": "Status do paciente",
            "example": "active"
          },
          "tags": {
            "description": "Tags do paciente",
            "example": [
              "VIP"
            ],
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "professionalId": {
            "type": "object",
            "description": "Identificador do profissional responsavel"
          },
          "riskLevel": {
            "type": "string",
            "description": "Nivel de risco",
            "example": "medium"
          },
          "acceptedTerms": {
            "type": "boolean",
            "description": "Confirmacao de aceite dos termos"
          },
          "acceptedTermsAt": {
            "type": "string",
            "description": "Data/hora do aceite (ISO)"
          }
        }
      },
      "TransferPatientDto": {
        "type": "object",
        "properties": {
          "toProfessionalId": {
            "type": "string",
            "description": "Profissional destino",
            "example": "b3a1f6b6-6f14-4f42-8c4a-bf508f124d55"
          },
          "reason": {
            "type": "string",
            "description": "Motivo da transferencia",
            "example": "Especialista em ortomolecular"
          },
          "effectiveAt": {
            "type": "string",
            "description": "Data efetiva",
            "example": "2025-09-22T13:00:00Z"
          }
        },
        "required": [
          "toProfessionalId",
          "reason"
        ]
      },
      "ArchivePatientDto": {
        "type": "object",
        "properties": {
          "reason": {
            "type": "string",
            "description": "Motivo da arquivacao",
            "example": "Paciente inativo ha mais de 2 anos"
          },
          "archiveRelatedData": {
            "type": "boolean",
            "description": "Se verdadeiro, arquiva dados relacionados",
            "example": false
          }
        }
      },
      "ExportPatientsDto": {
        "type": "object",
        "properties": {
          "format": {
            "type": "string",
            "description": "Formato desejado",
            "enum": [
              "pdf",
              "csv",
              "excel",
              "vcard"
            ],
            "example": "csv"
          },
          "professionalIds": {
            "description": "IDs de profissionais",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "status": {
            "description": "Status",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "quickFilter": {
            "type": "string",
            "description": "Filtro rapido",
            "example": "inactive_30_days"
          },
          "includeMedicalData": {
            "type": "boolean",
            "description": "Incluir dados clinicos",
            "example": false
          }
        },
        "required": [
          "format"
        ]
      },
      "LegalTermResponseDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "tenantId": {
            "type": "object",
            "nullable": true
          },
          "context": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "content": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": [
              "draft",
              "published",
              "retired"
            ]
          },
          "isActive": {
            "type": "boolean"
          },
          "publishedAt": {
            "type": "object",
            "nullable": true
          },
          "createdBy": {
            "type": "object",
            "nullable": true
          },
          "publishedBy": {
            "type": "object",
            "nullable": true
          },
          "retiredAt": {
            "type": "object",
            "nullable": true
          },
          "retiredBy": {
            "type": "object",
            "nullable": true
          },
          "createdAt": {
            "type": "string"
          },
          "updatedAt": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "context",
          "version",
          "content",
          "status",
          "isActive",
          "createdAt",
          "updatedAt"
        ]
      },
      "CreateLegalTermRequestDto": {
        "type": "object",
        "properties": {
          "context": {
            "type": "string",
            "example": "therapeutic_plan"
          },
          "version": {
            "type": "string",
            "example": "v1.0"
          },
          "content": {
            "type": "string",
            "example": "Declaro estar ciente..."
          },
          "tenantId": {
            "type": "string",
            "nullable": true,
            "example": "a4d3c56e-..."
          },
          "publishNow": {
            "type": "boolean",
            "default": false
          }
        },
        "required": [
          "context",
          "version",
          "content"
        ]
      },
      "AnamnesisMetricsFeedbackDto": {
        "type": "object",
        "properties": {
          "total": {
            "type": "number",
            "description": "Total de feedbacks registrados",
            "example": 18
          },
          "approvals": {
            "type": "number",
            "description": "Feedbacks aprovando o plano",
            "example": 10
          },
          "modifications": {
            "type": "number",
            "description": "Feedbacks solicitando modificacoes",
            "example": 5
          },
          "rejections": {
            "type": "number",
            "description": "Feedbacks rejeitando o plano",
            "example": 3
          },
          "likes": {
            "type": "number",
            "description": "Quantidade de curtidas registradas",
            "example": 12
          },
          "dislikes": {
            "type": "number",
            "description": "Quantidade de descurtidas registradas",
            "example": 2
          }
        },
        "required": [
          "total",
          "approvals",
          "modifications",
          "rejections",
          "likes",
          "dislikes"
        ]
      },
      "AnamnesisMetricsSnapshotDto": {
        "type": "object",
        "properties": {
          "stepsSaved": {
            "type": "number",
            "description": "Total de steps salvos",
            "example": 120
          },
          "autoSaves": {
            "type": "number",
            "description": "Total de auto-saves executados",
            "example": 45
          },
          "completedSteps": {
            "type": "number",
            "description": "Quantidade de steps concluidos",
            "example": 95
          },
          "averageStepCompletionRate": {
            "type": "number",
            "description": "Taxa media de conclusao por step",
            "example": 82.5
          },
          "submissions": {
            "type": "number",
            "description": "Numero de anamneses submetidas",
            "example": 27
          },
          "averageSubmissionCompletionRate": {
            "type": "number",
            "description": "Taxa media de conclusao na submissao",
            "example": 91.2
          },
          "aiCompleted": {
            "type": "number",
            "description": "Quantidade de geracoes de IA concluidas",
            "example": 24
          },
          "aiFailed": {
            "type": "number",
            "description": "Quantidade de falhas da IA",
            "example": 2
          },
          "averageAIConfidence": {
            "type": "number",
            "description": "Confianca media retornada pela IA",
            "example": 0.78
          },
          "tokensInputTotal": {
            "type": "number",
            "description": "Total de tokens de entrada consumidos",
            "example": 14500
          },
          "tokensOutputTotal": {
            "type": "number",
            "description": "Total de tokens de saida gerados",
            "example": 9800
          },
          "averageAILatencyMs": {
            "type": "number",
            "description": "Latencia media das respostas da IA (ms)",
            "example": 1340
          },
          "maxAILatencyMs": {
            "type": "number",
            "description": "Maior latencia registrada da IA (ms)",
            "example": 3120
          },
          "totalAICost": {
            "type": "number",
            "description": "Custo total estimado das execucoes da IA",
            "example": 5.483271
          },
          "feedback": {
            "description": "Resumo dos feedbacks sobre planos gerados",
            "allOf": [
              {
                "$ref": "#/components/schemas/AnamnesisMetricsFeedbackDto"
              }
            ]
          },
          "lastUpdatedAt": {
            "type": "object",
            "description": "Momento da ultima atualizacao (ISO)",
            "example": "2025-09-26T06:15:00Z",
            "nullable": true
          }
        },
        "required": [
          "stepsSaved",
          "autoSaves",
          "completedSteps",
          "averageStepCompletionRate",
          "submissions",
          "averageSubmissionCompletionRate",
          "aiCompleted",
          "aiFailed",
          "averageAIConfidence",
          "tokensInputTotal",
          "tokensOutputTotal",
          "averageAILatencyMs",
          "maxAILatencyMs",
          "totalAICost",
          "feedback"
        ]
      },
      "AnamnesisStepTemplateDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Identificador do template",
            "example": "template-identification"
          },
          "key": {
            "type": "string",
            "description": "Chave unica do template",
            "example": "identification"
          },
          "title": {
            "type": "string",
            "description": "Titulo do template",
            "example": "Identificacao"
          },
          "description": {
            "type": "string",
            "description": "Descricao resumida do template"
          },
          "version": {
            "type": "number",
            "description": "Versao do template",
            "example": 1
          },
          "schema": {
            "type": "object",
            "description": "Estrutura do template em JSON"
          },
          "specialty": {
            "type": "string",
            "description": "Especialidade associada",
            "example": "default"
          },
          "isActive": {
            "type": "boolean",
            "description": "Indica se o template esta ativo",
            "example": true
          },
          "tenantId": {
            "type": "object",
            "description": "Tenant proprietario do template",
            "example": "11111111-1111-1111-1111-111111111111"
          },
          "createdAt": {
            "type": "string",
            "description": "Data de criacao (ISO)",
            "example": "2025-09-26T00:00:00Z"
          },
          "updatedAt": {
            "type": "string",
            "description": "Ultima atualizacao (ISO)",
            "example": "2025-09-26T02:00:00Z"
          }
        },
        "required": [
          "id",
          "key",
          "title",
          "version",
          "schema",
          "isActive",
          "createdAt",
          "updatedAt"
        ]
      },
      "StartAnamnesisRequestDto": {
        "type": "object",
        "properties": {
          "consultationId": {
            "type": "string",
            "description": "Identificador da consulta",
            "example": "c1d2e3f4-5678-90ab-cdef-1234567890ab"
          },
          "patientId": {
            "type": "string",
            "description": "Identificador do paciente",
            "example": "p1d2e3f4-5678-90ab-cdef-1234567890ab"
          },
          "professionalId": {
            "type": "string",
            "description": "Identificador do profissional responsavel",
            "example": "8799aa12-3456-7890-bcde-f1234567890a"
          },
          "totalSteps": {
            "type": "number",
            "description": "Quantidade total de steps",
            "example": 10
          },
          "initialStep": {
            "type": "number",
            "description": "Step inicial",
            "example": 1
          },
          "formData": {
            "type": "object",
            "description": "Dados iniciais do formulario"
          }
        },
        "required": [
          "consultationId",
          "patientId",
          "professionalId"
        ]
      },
      "AnamnesisStepDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Identificador do step",
            "example": "d1c2b3a4-5678-90ab-cdef-1234567890ab"
          },
          "stepNumber": {
            "type": "number",
            "description": "Numero sequencial do step",
            "example": 1
          },
          "key": {
            "type": "string",
            "description": "Chave do step",
            "example": "identification"
          },
          "payload": {
            "type": "object",
            "description": "Dados preenchidos para o step"
          },
          "completed": {
            "type": "boolean",
            "description": "Indica se o step esta completo",
            "example": true
          },
          "hasErrors": {
            "type": "boolean",
            "description": "Indica se ha erros de validacao",
            "example": false
          },
          "validationScore": {
            "type": "number",
            "description": "Score de validacao do step",
            "example": 92
          },
          "updatedAt": {
            "type": "string",
            "description": "Data da ultima atualizacao (ISO)",
            "example": "2025-09-26T03:15:00Z"
          },
          "deletedAt": {
            "type": "object",
            "description": "Data de cancelamento (ISO)",
            "example": "2025-09-26T06:00:00Z",
            "nullable": true
          },
          "deletedBy": {
            "type": "string",
            "description": "Responsavel pelo cancelamento",
            "example": "33333333-3333-3333-3333-333333333333"
          },
          "deletedReason": {
            "type": "string",
            "description": "Motivo registrado no cancelamento"
          },
          "createdAt": {
            "type": "string",
            "description": "Data de criacao (ISO)",
            "example": "2025-09-26T03:05:00Z"
          }
        },
        "required": [
          "id",
          "stepNumber",
          "key",
          "payload",
          "completed",
          "hasErrors",
          "updatedAt",
          "createdAt"
        ]
      },
      "TherapeuticPlanRiskFactorDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Identificador do fator de risco",
            "example": "risk-1"
          },
          "description": {
            "type": "string",
            "description": "Descricao do fator de risco",
            "example": "Historico familiar de hipertensao"
          },
          "severity": {
            "type": "string",
            "description": "Severidade do fator",
            "example": "high"
          }
        },
        "required": [
          "id",
          "description"
        ]
      },
      "TherapeuticPlanRecommendationDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Identificador da recomendacao",
            "example": "rec-1"
          },
          "description": {
            "type": "string",
            "description": "Descricao da recomendacao",
            "example": "Praticar exercicios leves 3x por semana"
          },
          "priority": {
            "type": "string",
            "description": "Prioridade da recomendacao",
            "example": "medium"
          }
        },
        "required": [
          "id",
          "description"
        ]
      },
      "TherapeuticPlanAcceptanceDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Identificador do aceite",
            "example": "acc-1"
          },
          "professionalId": {
            "type": "string",
            "description": "Profissional que realizou o aceite",
            "example": "33333333-3333-3333-3333-333333333333"
          },
          "acceptedAt": {
            "type": "string",
            "description": "Data do aceite (ISO)",
            "example": "2025-09-26T05:45:00Z"
          },
          "termsVersion": {
            "type": "string",
            "description": "Versao dos termos aceitos",
            "example": "v1.4"
          },
          "termsTextSnapshot": {
            "type": "string",
            "description": "Snapshot do texto dos termos aceito"
          },
          "acceptedIp": {
            "type": "string",
            "description": "IP utilizado no aceite"
          },
          "acceptedUserAgent": {
            "type": "string",
            "description": "User-Agent do aceite"
          }
        },
        "required": [
          "id",
          "professionalId",
          "acceptedAt",
          "termsVersion",
          "termsTextSnapshot"
        ]
      },
      "TherapeuticPlanDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Identificador do plano",
            "example": "plan-123456"
          },
          "anamnesisId": {
            "type": "string",
            "description": "Identificador da anamnese",
            "example": "d1c2b3a4-5678-90ab-cdef-1234567890ab"
          },
          "analysisId": {
            "type": "string",
            "description": "Identificador da analise IA vinculada",
            "example": "analysis-123456"
          },
          "clinicalReasoning": {
            "type": "string",
            "description": "Raciocinio clinico da IA"
          },
          "summary": {
            "type": "string",
            "description": "Resumo textual das recomendacoes"
          },
          "therapeuticPlan": {
            "type": "object",
            "description": "Plano terapeutico estruturado"
          },
          "riskFactors": {
            "description": "Fatores de risco identificados",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TherapeuticPlanRiskFactorDto"
            }
          },
          "recommendations": {
            "description": "Recomendacoes sugeridas",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TherapeuticPlanRecommendationDto"
            }
          },
          "planText": {
            "type": "string",
            "description": "Plano terapeutico em texto livre"
          },
          "reasoningText": {
            "type": "string",
            "description": "Raciocinio clinico textual"
          },
          "evidenceMap": {
            "description": "Mapa de evidencias associado ao plano",
            "type": "array",
            "items": {
              "type": "object"
            }
          },
          "confidence": {
            "type": "number",
            "description": "Nivel de confianca do modelo",
            "example": 0.85
          },
          "status": {
            "type": "string",
            "description": "Status atual do plano",
            "example": "generated"
          },
          "reviewRequired": {
            "type": "boolean",
            "description": "Indica se revisao humana e necessaria",
            "example": true
          },
          "termsAccepted": {
            "type": "boolean",
            "description": "Termo de responsabilidade aceito",
            "example": true
          },
          "acceptedAt": {
            "type": "string",
            "description": "Data de aceite (ISO)",
            "example": "2025-09-26T05:45:00Z"
          },
          "acceptedBy": {
            "type": "string",
            "description": "Identificador do profissional que aceitou",
            "example": "33333333-3333-3333-3333-333333333333"
          },
          "termsVersion": {
            "type": "string",
            "description": "Versao dos termos aceitos",
            "example": "v1.3-2025-09-20"
          },
          "acceptances": {
            "description": "Historico de aceites",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TherapeuticPlanAcceptanceDto"
            }
          },
          "approvalStatus": {
            "type": "string",
            "description": "Status de aprovacao",
            "example": "pending"
          },
          "liked": {
            "type": "boolean",
            "description": "Indica se o profissional aprovou o plano",
            "example": true
          },
          "feedbackComment": {
            "type": "string",
            "description": "Comentario do profissional sobre o plano"
          },
          "feedbackGivenBy": {
            "type": "string",
            "description": "Identificador de quem forneceu o feedback",
            "example": "8799aa12-3456-7890-bcde-f1234567890a"
          },
          "feedbackGivenAt": {
            "type": "string",
            "description": "Data do feedback (ISO)",
            "example": "2025-09-26T04:45:00Z"
          },
          "generatedAt": {
            "type": "string",
            "description": "Data de geracao do plano (ISO)",
            "example": "2025-09-26T04:40:00Z"
          },
          "createdAt": {
            "type": "string",
            "description": "Data de criacao do registro (ISO)",
            "example": "2025-09-26T04:40:00Z"
          },
          "updatedAt": {
            "type": "string",
            "description": "Data de atualizacao do registro (ISO)",
            "example": "2025-09-26T04:40:00Z"
          }
        },
        "required": [
          "id",
          "anamnesisId",
          "status",
          "reviewRequired",
          "termsAccepted",
          "approvalStatus",
          "generatedAt",
          "createdAt",
          "updatedAt"
        ]
      },
      "AnamnesisAttachmentDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Identificador do anexo",
            "example": "b2a4c6d8-1234-5678-9101-abcdefabcdef"
          },
          "stepNumber": {
            "type": "number",
            "description": "Step associado ao anexo",
            "example": 2
          },
          "fileName": {
            "type": "string",
            "description": "Nome do arquivo",
            "example": "exame-hemograma.pdf"
          },
          "mimeType": {
            "type": "string",
            "description": "Tipo MIME do arquivo",
            "example": "application/pdf"
          },
          "size": {
            "type": "number",
            "description": "Tamanho do arquivo em bytes",
            "example": 524288
          },
          "storagePath": {
            "type": "string",
            "description": "Caminho no storage",
            "example": "anamnesis/2025/09/exame-hemograma.pdf"
          },
          "uploadedBy": {
            "type": "string",
            "description": "Identificador de quem fez upload",
            "example": "8799aa12-3456-7890-bcde-f1234567890a"
          },
          "uploadedAt": {
            "type": "string",
            "description": "Data de upload (ISO)",
            "example": "2025-09-26T04:30:00Z"
          }
        },
        "required": [
          "id",
          "fileName",
          "mimeType",
          "size",
          "storagePath",
          "uploadedBy",
          "uploadedAt"
        ]
      },
      "AnamnesisDetailResponseDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Identificador da anamnese",
            "example": "d1c2b3a4-5678-90ab-cdef-1234567890ab"
          },
          "consultationId": {
            "type": "string",
            "description": "Identificador da consulta relacionada",
            "example": "c1d2e3f4-5678-90ab-cdef-1234567890ab"
          },
          "patientId": {
            "type": "string",
            "description": "Identificador do paciente",
            "example": "p1d2e3f4-5678-90ab-cdef-1234567890ab"
          },
          "professionalId": {
            "type": "string",
            "description": "Identificador do profissional responsavel",
            "example": "8799aa12-3456-7890-bcde-f1234567890a"
          },
          "tenantId": {
            "type": "string",
            "description": "Identificador do tenant",
            "example": "tenant-123"
          },
          "status": {
            "type": "string",
            "description": "Status atual da anamnese",
            "example": "draft"
          },
          "totalSteps": {
            "type": "number",
            "description": "Total de steps configurados",
            "example": 10
          },
          "currentStep": {
            "type": "number",
            "description": "Step atual em foco",
            "example": 3
          },
          "completionRate": {
            "type": "number",
            "description": "Percentual de conclusao",
            "example": 45
          },
          "isDraft": {
            "type": "boolean",
            "description": "Indica se ainda e um rascunho",
            "example": true
          },
          "lastAutoSavedAt": {
            "type": "string",
            "description": "Data do ultimo auto-save (ISO)",
            "example": "2025-09-26T04:20:00Z"
          },
          "submittedAt": {
            "type": "string",
            "description": "Data de submissao (ISO)",
            "example": "2025-09-26T05:00:00Z"
          },
          "completedAt": {
            "type": "string",
            "description": "Data de conclusao (ISO)",
            "example": "2025-09-26T05:30:00Z"
          },
          "createdAt": {
            "type": "string",
            "description": "Data de criacao (ISO)",
            "example": "2025-09-26T03:00:00Z"
          },
          "updatedAt": {
            "type": "string",
            "description": "Data de atualizacao (ISO)",
            "example": "2025-09-26T04:25:00Z"
          },
          "deletedAt": {
            "type": "object",
            "description": "Data de cancelamento (ISO)",
            "example": "2025-09-26T06:00:00Z",
            "nullable": true
          },
          "deletedBy": {
            "type": "string",
            "description": "Responsavel pelo cancelamento",
            "example": "33333333-3333-3333-3333-333333333333"
          },
          "deletedReason": {
            "type": "string",
            "description": "Motivo registrado no cancelamento"
          },
          "steps": {
            "description": "Steps da anamnese",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AnamnesisStepDto"
            }
          },
          "latestPlan": {
            "description": "Plano terapeutico mais recente",
            "allOf": [
              {
                "$ref": "#/components/schemas/TherapeuticPlanDto"
              }
            ]
          },
          "attachments": {
            "description": "Anexos associados",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AnamnesisAttachmentDto"
            }
          }
        },
        "required": [
          "id",
          "consultationId",
          "patientId",
          "professionalId",
          "tenantId",
          "status",
          "totalSteps",
          "currentStep",
          "completionRate",
          "isDraft",
          "createdAt",
          "updatedAt"
        ]
      },
      "AnamnesisHistoryStepDto": {
        "type": "object",
        "properties": {
          "stepNumber": {
            "type": "number",
            "description": "Numero do step",
            "example": 1
          },
          "key": {
            "type": "string",
            "description": "Chave do step",
            "example": "identification"
          },
          "payload": {
            "type": "object",
            "description": "Conteudo registrado no step"
          },
          "completed": {
            "type": "boolean",
            "description": "Indica se o step foi concluido",
            "example": true
          },
          "hasErrors": {
            "type": "boolean",
            "description": "Indica se foram detectados erros",
            "example": false
          },
          "validationScore": {
            "type": "number",
            "description": "Score de validacao",
            "example": 80
          },
          "updatedAt": {
            "type": "string",
            "description": "Ultima atualizacao do step (ISO)",
            "example": "2025-09-27T03:10:00Z"
          }
        },
        "required": [
          "stepNumber",
          "key",
          "payload",
          "completed",
          "hasErrors",
          "updatedAt"
        ]
      },
      "AnamnesisHistoryEntryDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Identificador da anamnese",
            "example": "anamnesis-001"
          },
          "consultationId": {
            "type": "string",
            "description": "Identificador da consulta",
            "example": "consultation-001"
          },
          "professionalId": {
            "type": "string",
            "description": "Identificador do profissional responsavel",
            "example": "professional-001"
          },
          "status": {
            "type": "string",
            "description": "Status da anamnese",
            "example": "submitted"
          },
          "completionRate": {
            "type": "number",
            "description": "Percentual de conclusao",
            "example": 100
          },
          "submittedAt": {
            "type": "string",
            "description": "Data de submissao (ISO)",
            "example": "2025-09-26T10:05:00Z"
          },
          "updatedAt": {
            "type": "string",
            "description": "Ultima atualizacao (ISO)",
            "example": "2025-09-26T10:05:00Z"
          },
          "deletedAt": {
            "type": "object",
            "description": "Data de cancelamento (ISO)",
            "example": "2025-09-26T06:00:00Z",
            "nullable": true
          },
          "deletedBy": {
            "type": "string",
            "description": "Responsavel pelo cancelamento",
            "example": "33333333-3333-3333-3333-333333333333"
          },
          "deletedReason": {
            "type": "string",
            "description": "Motivo registrado no cancelamento"
          },
          "steps": {
            "description": "Steps registrados",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AnamnesisHistoryStepDto"
            }
          },
          "attachments": {
            "description": "Anexos vinculados",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AnamnesisAttachmentDto"
            }
          },
          "latestPlan": {
            "description": "Plano terapeutico associado",
            "allOf": [
              {
                "$ref": "#/components/schemas/TherapeuticPlanDto"
              }
            ]
          }
        },
        "required": [
          "id",
          "consultationId",
          "professionalId",
          "status",
          "completionRate",
          "updatedAt",
          "steps",
          "attachments"
        ]
      },
      "AnamnesisHistoryPrefillDto": {
        "type": "object",
        "properties": {
          "steps": {
            "type": "object",
            "description": "Dados mais recentes por step"
          },
          "attachments": {
            "description": "Anexos reutilizaveis",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AnamnesisAttachmentDto"
            }
          },
          "sourceAnamnesisId": {
            "type": "string",
            "description": "Anamnese que originou o prefill",
            "example": "anamnesis-001"
          },
          "updatedAt": {
            "type": "string",
            "description": "Momento da ultima atualizacao do prefill",
            "example": "2025-09-26T10:05:00Z"
          }
        },
        "required": [
          "steps",
          "attachments"
        ]
      },
      "AnamnesisHistoryResponseDto": {
        "type": "object",
        "properties": {
          "patientId": {
            "type": "string",
            "description": "Identificador do paciente",
            "example": "patient-001"
          },
          "entries": {
            "description": "Historico de anamneses",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AnamnesisHistoryEntryDto"
            }
          },
          "prefill": {
            "description": "Dados consolidados para pre-preenchimento",
            "allOf": [
              {
                "$ref": "#/components/schemas/AnamnesisHistoryPrefillDto"
              }
            ]
          }
        },
        "required": [
          "patientId",
          "entries",
          "prefill"
        ]
      },
      "AnamnesisListItemDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Identificador da anamnese",
            "example": "d1c2b3a4-5678-90ab-cdef-1234567890ab"
          },
          "consultationId": {
            "type": "string",
            "description": "Identificador da consulta",
            "example": "c1d2e3f4-5678-90ab-cdef-1234567890ab"
          },
          "patientId": {
            "type": "string",
            "description": "Identificador do paciente",
            "example": "p1d2e3f4-5678-90ab-cdef-1234567890ab"
          },
          "professionalId": {
            "type": "string",
            "description": "Identificador do profissional",
            "example": "8799aa12-3456-7890-bcde-f1234567890a"
          },
          "status": {
            "type": "string",
            "description": "Status atual",
            "example": "submitted"
          },
          "completionRate": {
            "type": "number",
            "description": "Percentual de conclusao",
            "example": 100
          },
          "submittedAt": {
            "type": "string",
            "description": "Data de submissao (ISO)",
            "example": "2025-09-26T05:00:00Z"
          },
          "updatedAt": {
            "type": "string",
            "description": "Data da ultima atualizacao (ISO)",
            "example": "2025-09-26T05:10:00Z"
          }
        },
        "required": [
          "id",
          "consultationId",
          "patientId",
          "professionalId",
          "status",
          "completionRate",
          "updatedAt"
        ]
      },
      "SaveAnamnesisStepRequestDto": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "description": "Chave do step",
            "example": "lifestyle"
          },
          "payload": {
            "type": "object",
            "description": "Dados preenchidos para o step"
          },
          "completed": {
            "type": "boolean",
            "description": "Indica se o step foi concluido",
            "example": true
          },
          "hasErrors": {
            "type": "boolean",
            "description": "Indica se ha erros de validacao",
            "example": false
          },
          "validationScore": {
            "type": "number",
            "description": "Score de validacao",
            "example": 92
          }
        },
        "required": [
          "key",
          "payload"
        ]
      },
      "AutoSaveAnamnesisStepRequestDto": {
        "type": "object",
        "properties": {
          "stepNumber": {
            "type": "number",
            "description": "Numero do step",
            "example": 2
          },
          "key": {
            "type": "string",
            "description": "Chave do step",
            "example": "lifestyle"
          },
          "payload": {
            "type": "object",
            "description": "Dados preenchidos para o step"
          },
          "hasErrors": {
            "type": "boolean",
            "description": "Indica se ha erros de validacao",
            "example": false
          },
          "validationScore": {
            "type": "number",
            "description": "Score de validacao",
            "example": 92
          },
          "autoSavedAt": {
            "type": "string",
            "description": "Data do auto-save (ISO)",
            "example": "2025-09-27T10:00:00Z"
          }
        },
        "required": [
          "stepNumber",
          "key",
          "payload"
        ]
      },
      "CancelAnamnesisRequestDto": {
        "type": "object",
        "properties": {
          "reason": {
            "type": "string",
            "description": "Justificativa opcional do cancelamento",
            "maxLength": 1000
          }
        }
      },
      "TherapeuticPlanRiskFactorInputDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Identificador do fator de risco",
            "example": "risk-1"
          },
          "description": {
            "type": "string",
            "description": "Descricao do fator de risco",
            "example": "Historico familiar de hipertensao"
          },
          "severity": {
            "type": "string",
            "description": "Severidade do fator",
            "example": "high"
          }
        },
        "required": [
          "id",
          "description"
        ]
      },
      "TherapeuticPlanRecommendationInputDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Identificador da recomendacao",
            "example": "rec-1"
          },
          "description": {
            "type": "string",
            "description": "Descricao da recomendacao",
            "example": "Praticar exercicios leves 3x por semana"
          },
          "priority": {
            "type": "string",
            "description": "Prioridade da recomendacao",
            "example": "medium"
          }
        },
        "required": [
          "id",
          "description"
        ]
      },
      "SaveTherapeuticPlanRequestDto": {
        "type": "object",
        "properties": {
          "analysisId": {
            "type": "string",
            "description": "Identificador da analise vinculada ao plano",
            "example": "a1b2c3d4-5678-90ab-cdef-1234567890ab"
          },
          "clinicalReasoning": {
            "type": "string",
            "description": "Raciocinio clinico gerado pelo modelo"
          },
          "summary": {
            "type": "string",
            "description": "Resumo textual do plano"
          },
          "therapeuticPlan": {
            "type": "object",
            "description": "Representacao estruturada do plano"
          },
          "riskFactors": {
            "description": "Fatores de risco identificados",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TherapeuticPlanRiskFactorInputDto"
            }
          },
          "recommendations": {
            "description": "Recomendacoes sugeridas",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TherapeuticPlanRecommendationInputDto"
            }
          },
          "planText": {
            "type": "string",
            "description": "Plano terapeutico em texto livre"
          },
          "reasoningText": {
            "type": "string",
            "description": "Texto integral do raciocinio clinico"
          },
          "evidenceMap": {
            "description": "Mapa de evidencias estruturado",
            "type": "array",
            "items": {
              "type": "object"
            }
          },
          "model": {
            "type": "string",
            "description": "Modelo de IA utilizado",
            "example": "gpt-4.1"
          },
          "promptVersion": {
            "type": "string",
            "description": "Versao do prompt aplicado"
          },
          "tokensInput": {
            "type": "number",
            "description": "Tokens de entrada consumidos",
            "example": 820
          },
          "tokensOutput": {
            "type": "number",
            "description": "Tokens de saida gerados",
            "example": 1240
          },
          "latencyMs": {
            "type": "number",
            "description": "Latencia em milissegundos",
            "example": 1340
          },
          "rawResponse": {
            "type": "object",
            "description": "Carga util bruta retornada pela IA"
          },
          "confidence": {
            "type": "number",
            "description": "Grau de confianca do modelo",
            "example": 0.85
          },
          "reviewRequired": {
            "type": "boolean",
            "description": "Indica se revisao humana e necessaria",
            "example": false
          },
          "termsVersion": {
            "type": "string",
            "description": "Versao do termo de responsabilidade aceito",
            "example": "2025-09"
          },
          "termsTextSnapshot": {
            "type": "string",
            "description": "Snapshot do texto dos termos aceitos"
          },
          "termsAccepted": {
            "type": "boolean",
            "description": "Confirma que o profissional assume a responsabilidade de revisar o plano gerado por IA antes de utiliza-lo com o paciente",
            "example": true
          },
          "generatedAt": {
            "type": "string",
            "description": "Data de geracao do plano (ISO)",
            "example": "2025-09-26T04:40:00Z"
          }
        },
        "required": [
          "termsVersion",
          "termsTextSnapshot",
          "termsAccepted",
          "generatedAt"
        ]
      },
      "SavePlanFeedbackRequestDto": {
        "type": "object",
        "properties": {
          "approvalStatus": {
            "type": "string",
            "description": "Status de aprovacao atribuido pelo profissional",
            "example": "approved"
          },
          "liked": {
            "type": "boolean",
            "description": "Indica se o profissional aprovou as sugestoes",
            "example": true
          },
          "feedbackComment": {
            "type": "string",
            "description": "Comentario textual do profissional"
          }
        },
        "required": [
          "approvalStatus"
        ]
      },
      "ReceiveAIResultRequestDto": {
        "type": "object",
        "properties": {
          "analysisId": {
            "type": "string",
            "description": "Identificador da analise gerada no backend",
            "example": "8f37a8f5-6b34-4d40-9cb0-6c0d4f8f3a7e"
          },
          "status": {
            "type": "string",
            "description": "Status da analise",
            "example": "completed",
            "enum": [
              "completed",
              "failed"
            ]
          },
          "respondedAt": {
            "type": "string",
            "description": "Momento em que a IA respondeu (ISO)",
            "example": "2025-09-27T10:00:00Z"
          },
          "clinicalReasoning": {
            "type": "string",
            "description": "Raciocinio clinico gerado pela IA"
          },
          "summary": {
            "type": "string",
            "description": "Resumo textual do caso"
          },
          "therapeuticPlan": {
            "type": "object",
            "description": "Plano terapeutico estruturado"
          },
          "riskFactors": {
            "description": "Fatores de risco apontados",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TherapeuticPlanRiskFactorInputDto"
            }
          },
          "recommendations": {
            "description": "Recomendacoes sugeridas",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TherapeuticPlanRecommendationInputDto"
            }
          },
          "confidence": {
            "type": "number",
            "description": "Confianca do modelo (0-1)",
            "example": 0.82
          },
          "payload": {
            "type": "object",
            "description": "Payload bruto retornado pela IA"
          },
          "errorMessage": {
            "type": "string",
            "description": "Mensagem de erro em caso de falha"
          }
        },
        "required": [
          "analysisId",
          "status",
          "respondedAt"
        ]
      },
      "CreateAnamnesisAttachmentRequestDto": {
        "type": "object",
        "properties": {
          "stepNumber": {
            "type": "number",
            "description": "Step relacionado ao anexo",
            "example": 2
          },
          "fileName": {
            "type": "string",
            "description": "Nome opcional do arquivo",
            "example": "exame-hemograma.pdf"
          },
          "file": {
            "type": "string",
            "description": "Arquivo do anexo",
            "format": "binary"
          }
        },
        "required": [
          "file"
        ]
      },
      "CreateHoldDto": {
        "type": "object",
        "properties": {
          "clinicId": {
            "type": "string",
            "description": "Identificador da cl nica",
            "format": "uuid"
          },
          "serviceTypeId": {
            "type": "string",
            "description": "Identificador do tipo de servico configurado na clinica",
            "format": "uuid"
          },
          "professionalId": {
            "type": "string",
            "description": "Identificador do profissional",
            "format": "uuid"
          },
          "patientId": {
            "type": "string",
            "description": "Identificador do paciente",
            "format": "uuid"
          },
          "startAtUtc": {
            "type": "string",
            "description": "In cio do atendimento em UTC (ISO 8601)",
            "example": "2025-10-10T10:00:00Z"
          },
          "endAtUtc": {
            "type": "string",
            "description": "Fim do atendimento em UTC (ISO 8601)",
            "example": "2025-10-10T11:00:00Z"
          }
        },
        "required": [
          "clinicId",
          "serviceTypeId",
          "professionalId",
          "patientId",
          "startAtUtc",
          "endAtUtc"
        ]
      },
      "BookingHoldResponseDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Identificador do hold"
          },
          "clinicId": {
            "type": "string",
            "description": "Identificador da cl nica"
          },
          "professionalId": {
            "type": "string",
            "description": "Identificador do profissional"
          },
          "patientId": {
            "type": "string",
            "description": "Identificador do paciente"
          },
          "serviceTypeId": {
            "type": "string",
            "description": "Identificador do tipo de servico associado ao hold",
            "nullable": true
          },
          "status": {
            "type": "string",
            "description": "Status atual do hold"
          },
          "startAtUtc": {
            "type": "string",
            "description": "In cio reservado em UTC (ISO 8601)"
          },
          "endAtUtc": {
            "type": "string",
            "description": "Fim reservado em UTC (ISO 8601)"
          },
          "ttlExpiresAtUtc": {
            "type": "string",
            "description": "Momento de expira  o do hold em UTC (ISO 8601)"
          },
          "createdAt": {
            "type": "string",
            "description": "Data de cria  o em UTC (ISO 8601)"
          },
          "updatedAt": {
            "type": "string",
            "description": "Data de atualiza  o em UTC (ISO 8601)"
          },
          "version": {
            "type": "number",
            "description": "Vers o atual do registro"
          }
        },
        "required": [
          "id",
          "clinicId",
          "professionalId",
          "patientId",
          "serviceTypeId",
          "status",
          "startAtUtc",
          "endAtUtc",
          "ttlExpiresAtUtc",
          "createdAt",
          "updatedAt",
          "version"
        ]
      },
      "PricingSplitDto": {
        "type": "object",
        "properties": {
          "totalCents": {
            "type": "number",
            "description": "Valor total em centavos",
            "example": 20000
          },
          "platformCents": {
            "type": "number",
            "description": "Parcela da plataforma em centavos",
            "example": 4000
          },
          "clinicCents": {
            "type": "number",
            "description": "Parcela da cl nica em centavos",
            "example": 8000
          },
          "professionalCents": {
            "type": "number",
            "description": "Parcela do profissional em centavos",
            "example": 7000
          },
          "gatewayCents": {
            "type": "number",
            "description": "Taxa do gateway em centavos",
            "example": 800
          },
          "taxesCents": {
            "type": "number",
            "description": "Impostos em centavos",
            "example": 1200
          },
          "currency": {
            "type": "string",
            "description": "C digo ISO da moeda",
            "example": "BRL"
          }
        },
        "required": [
          "totalCents",
          "platformCents",
          "clinicCents",
          "professionalCents",
          "gatewayCents",
          "taxesCents",
          "currency"
        ]
      },
      "CreateBookingDto": {
        "type": "object",
        "properties": {
          "holdId": {
            "type": "string",
            "description": "Identificador do hold a ser convertido",
            "format": "uuid"
          },
          "source": {
            "type": "string",
            "description": "Origem do agendamento",
            "enum": [
              "marketplace",
              "clinic_portal",
              "professional_portal",
              "patient_portal",
              "api"
            ]
          },
          "timezone": {
            "type": "string",
            "description": "Fuso hor rio IANA do atendimento",
            "example": "America/Sao_Paulo"
          },
          "paymentStatus": {
            "type": "string",
            "description": "Status financeiro inicial",
            "enum": [
              "not_applied",
              "pending",
              "approved",
              "settled",
              "refunded",
              "disputed"
            ]
          },
          "lateToleranceMinutes": {
            "type": "number",
            "description": "Minutos de toler ncia para atraso do paciente",
            "example": 15
          },
          "recurrenceSeriesId": {
            "type": "object",
            "description": "Identificador da s rie de recorr ncia associada",
            "format": "uuid"
          },
          "pricingSplit": {
            "description": "Divis o de valores financeiros",
            "allOf": [
              {
                "$ref": "#/components/schemas/PricingSplitDto"
              }
            ]
          },
          "preconditionsPassed": {
            "type": "boolean",
            "description": "Indica se as pr -condi  es cl nicas foram cumpridas",
            "example": true
          },
          "anamneseRequired": {
            "type": "boolean",
            "description": "Indica se a anamnese   obrigat ria",
            "example": false
          },
          "anamneseOverrideReason": {
            "type": "object",
            "description": "Motivo para liberar anamnese obrigat ria",
            "example": "Paciente j  possui anamnese recente"
          }
        },
        "required": [
          "holdId",
          "source",
          "timezone"
        ]
      },
      "PricingSplitResponseDto": {
        "type": "object",
        "properties": {
          "totalCents": {
            "type": "number",
            "description": "Valor total em centavos"
          },
          "platformCents": {
            "type": "number",
            "description": "Parcela da plataforma em centavos"
          },
          "clinicCents": {
            "type": "number",
            "description": "Parcela da clinica em centavos"
          },
          "professionalCents": {
            "type": "number",
            "description": "Parcela do profissional em centavos"
          },
          "gatewayCents": {
            "type": "number",
            "description": "Taxa do gateway em centavos"
          },
          "taxesCents": {
            "type": "number",
            "description": "Impostos em centavos"
          },
          "currency": {
            "type": "string",
            "description": "Codigo ISO da moeda"
          }
        },
        "required": [
          "totalCents",
          "platformCents",
          "clinicCents",
          "professionalCents",
          "gatewayCents",
          "taxesCents",
          "currency"
        ]
      },
      "BookingResponseDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Identificador do agendamento"
          },
          "clinicId": {
            "type": "string",
            "description": "Identificador da clinica"
          },
          "professionalId": {
            "type": "string",
            "description": "Identificador do profissional"
          },
          "patientId": {
            "type": "string",
            "description": "Identificador do paciente"
          },
          "source": {
            "type": "string",
            "description": "Origem do agendamento"
          },
          "status": {
            "type": "string",
            "description": "Status do agendamento"
          },
          "paymentStatus": {
            "type": "string",
            "description": "Status financeiro do agendamento"
          },
          "holdId": {
            "type": "object",
            "description": "Identificador do hold associado",
            "nullable": true
          },
          "holdExpiresAtUtc": {
            "type": "object",
            "description": "Data limite do hold em ISO 8601",
            "nullable": true
          },
          "startAtUtc": {
            "type": "string",
            "description": "Inicio do atendimento em ISO 8601"
          },
          "endAtUtc": {
            "type": "string",
            "description": "Fim do atendimento em ISO 8601"
          },
          "timezone": {
            "type": "string",
            "description": "Fuso horario IANA"
          },
          "lateToleranceMinutes": {
            "type": "number",
            "description": "Tolerancia de atraso em minutos"
          },
          "recurrenceSeriesId": {
            "type": "object",
            "description": "Identificador da serie de recorrencia",
            "nullable": true
          },
          "cancellationReason": {
            "type": "object",
            "description": "Motivo do cancelamento",
            "nullable": true
          },
          "pricingSplit": {
            "description": "Divisao financeira aplicada ao atendimento",
            "nullable": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/PricingSplitResponseDto"
              }
            ]
          },
          "preconditionsPassed": {
            "type": "boolean",
            "description": "Indica se pre-condicoes foram cumpridas"
          },
          "anamneseRequired": {
            "type": "boolean",
            "description": "Indica se anamnese e obrigatoria"
          },
          "anamneseOverrideReason": {
            "type": "object",
            "description": "Motivo para dispensar a anamnese obrigatoria",
            "nullable": true
          },
          "noShowMarkedAtUtc": {
            "type": "object",
            "description": "Momento em que o no-show foi marcado",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "description": "Data de criacao em ISO 8601"
          },
          "updatedAt": {
            "type": "string",
            "description": "Data de atualizacao em ISO 8601"
          },
          "version": {
            "type": "number",
            "description": "Versao atual do registro"
          }
        },
        "required": [
          "id",
          "clinicId",
          "professionalId",
          "patientId",
          "source",
          "status",
          "paymentStatus",
          "startAtUtc",
          "endAtUtc",
          "timezone",
          "lateToleranceMinutes",
          "preconditionsPassed",
          "anamneseRequired",
          "createdAt",
          "updatedAt",
          "version"
        ]
      },
      "ConfirmBookingDto": {
        "type": "object",
        "properties": {
          "holdId": {
            "type": "string",
            "description": "Identificador do hold a ser confirmado",
            "format": "uuid"
          },
          "paymentStatus": {
            "type": "string",
            "description": "Status financeiro que permite a confirma  o",
            "enum": [
              "approved"
            ],
            "example": "approved"
          },
          "confirmationAtUtc": {
            "type": "string",
            "description": "Momento da confirma  o em UTC (ISO 8601)",
            "example": "2025-10-08T12:00:00Z"
          }
        },
        "required": [
          "holdId",
          "paymentStatus"
        ]
      },
      "RescheduleBookingDto": {
        "type": "object",
        "properties": {
          "expectedVersion": {
            "type": "number",
            "description": "Vers o esperada do agendamento para controle otimista",
            "example": 2
          },
          "newStartAtUtc": {
            "type": "string",
            "description": "Novo in cio do atendimento em UTC (ISO 8601)",
            "example": "2025-10-12T09:00:00Z"
          },
          "newEndAtUtc": {
            "type": "string",
            "description": "Novo t rmino do atendimento em UTC (ISO 8601)",
            "example": "2025-10-12T10:00:00Z"
          },
          "reason": {
            "type": "string",
            "description": "Motivo do reagendamento",
            "example": "Paciente solicitou ajuste de hor rio"
          }
        },
        "required": [
          "expectedVersion",
          "newStartAtUtc",
          "newEndAtUtc",
          "reason"
        ]
      },
      "CancelBookingDto": {
        "type": "object",
        "properties": {
          "expectedVersion": {
            "type": "number",
            "description": "Vers o esperada do agendamento para controle otimista",
            "example": 1
          },
          "reason": {
            "type": "string",
            "description": "Motivo do cancelamento",
            "enum": [
              "patient_request",
              "clinic_request",
              "professional_request",
              "medical_exception",
              "system",
              "payment_failure",
              "chargeback"
            ]
          },
          "cancelledAtUtc": {
            "type": "string",
            "description": "Momento do cancelamento em UTC (ISO 8601)",
            "example": "2025-10-08T12:00:00Z"
          }
        },
        "required": [
          "expectedVersion"
        ]
      },
      "UpdatePaymentStatusDto": {
        "type": "object",
        "properties": {
          "expectedVersion": {
            "type": "number",
            "description": "Versao esperada do agendamento para controle otimista",
            "example": 2
          },
          "paymentStatus": {
            "type": "string",
            "description": "Novo status financeiro do agendamento",
            "enum": [
              "not_applied",
              "pending",
              "approved",
              "settled",
              "refunded",
              "disputed"
            ],
            "example": "approved"
          }
        },
        "required": [
          "expectedVersion",
          "paymentStatus"
        ]
      },
      "MarkBookingNoShowDto": {
        "type": "object",
        "properties": {
          "expectedVersion": {
            "type": "number",
            "description": "Vers o esperada do agendamento para controle otimista",
            "example": 3
          },
          "markedAtUtc": {
            "type": "string",
            "description": "Momento em que o no-show foi confirmado (UTC, ISO 8601)",
            "example": "2025-10-10T10:20:00Z"
          }
        },
        "required": [
          "expectedVersion"
        ]
      },
      "ClinicConfigurationTelemetryResponseDto": {
        "type": "object",
        "properties": {
          "state": {
            "type": "string",
            "enum": [
              "idle",
              "saving",
              "saved",
              "error"
            ]
          },
          "completionScore": {
            "type": "number",
            "description": "Score de completude (0 a 100)"
          },
          "lastAttemptAt": {
            "type": "string",
            "description": "Ultima tentativa de salvamento"
          },
          "lastSavedAt": {
            "type": "string",
            "description": "Ultimo salvamento bem sucedido"
          },
          "lastErrorAt": {
            "type": "string",
            "description": "Ultimo erro registrado"
          },
          "lastErrorMessage": {
            "type": "string",
            "description": "Mensagem do ultimo erro"
          },
          "lastUpdatedBy": {
            "type": "string",
            "description": "Ultimo usuario que alterou"
          },
          "autosaveIntervalSeconds": {
            "type": "number",
            "description": "Intervalo de autosave em segundos"
          },
          "pendingConflicts": {
            "type": "number",
            "description": "Quantidade de conflitos pendentes"
          }
        },
        "required": [
          "state",
          "completionScore"
        ]
      },
      "ClinicGeneralSettingsDocumentDto": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "cnpj",
              "cpf",
              "mei"
            ]
          },
          "value": {
            "type": "string"
          }
        },
        "required": [
          "type",
          "value"
        ]
      },
      "ClinicGeneralSettingsAddressDto": {
        "type": "object",
        "properties": {
          "zipCode": {
            "type": "string"
          },
          "street": {
            "type": "string"
          },
          "number": {
            "type": "string"
          },
          "complement": {
            "type": "string"
          },
          "district": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "country": {
            "type": "string"
          }
        },
        "required": [
          "zipCode",
          "street",
          "city",
          "state"
        ]
      },
      "ClinicGeneralSettingsContactDto": {
        "type": "object",
        "properties": {
          "phone": {
            "type": "string"
          },
          "whatsapp": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "website": {
            "type": "string"
          },
          "socialLinks": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "ClinicGeneralSettingsPayloadDto": {
        "type": "object",
        "properties": {
          "tradeName": {
            "type": "string"
          },
          "legalName": {
            "type": "string"
          },
          "document": {
            "$ref": "#/components/schemas/ClinicGeneralSettingsDocumentDto"
          },
          "stateRegistration": {
            "type": "string"
          },
          "municipalRegistration": {
            "type": "string"
          },
          "foundationDate": {
            "type": "string",
            "description": "ISO timestamp"
          },
          "address": {
            "$ref": "#/components/schemas/ClinicGeneralSettingsAddressDto"
          },
          "contact": {
            "$ref": "#/components/schemas/ClinicGeneralSettingsContactDto"
          },
          "notes": {
            "type": "string"
          }
        },
        "required": [
          "tradeName",
          "address",
          "contact"
        ]
      },
      "ClinicGeneralSettingsResponseDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "clinicId": {
            "type": "string"
          },
          "section": {
            "type": "string"
          },
          "version": {
            "type": "number"
          },
          "createdBy": {
            "type": "string"
          },
          "createdAt": {
            "type": "string"
          },
          "appliedAt": {
            "type": "string"
          },
          "notes": {
            "type": "string"
          },
          "state": {
            "type": "string",
            "enum": [
              "idle",
              "saving",
              "saved",
              "error"
            ]
          },
          "autoApply": {
            "type": "boolean",
            "description": "Indica se a configuracao e aplicada automaticamente"
          },
          "telemetry": {
            "description": "Telemetria da configuracao",
            "allOf": [
              {
                "$ref": "#/components/schemas/ClinicConfigurationTelemetryResponseDto"
              }
            ]
          },
          "payload": {
            "$ref": "#/components/schemas/ClinicGeneralSettingsPayloadDto"
          }
        },
        "required": [
          "id",
          "clinicId",
          "section",
          "version",
          "createdBy",
          "createdAt",
          "state",
          "autoApply",
          "payload"
        ]
      },
      "ClinicServiceSettingsItemDto": {
        "type": "object",
        "properties": {
          "serviceTypeId": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "slug": {
            "type": "string"
          },
          "durationMinutes": {
            "type": "number"
          },
          "price": {
            "type": "number"
          },
          "currency": {
            "type": "string",
            "enum": [
              "BRL",
              "USD",
              "EUR"
            ]
          },
          "isActive": {
            "type": "boolean"
          },
          "requiresAnamnesis": {
            "type": "boolean"
          },
          "enableOnlineScheduling": {
            "type": "boolean"
          },
          "minAdvanceMinutes": {
            "type": "number"
          },
          "maxAdvanceMinutes": {
            "type": "number"
          },
          "cancellationPolicyType": {
            "type": "string",
            "enum": [
              "free",
              "percentage",
              "no_refund"
            ]
          },
          "cancellationPolicyWindowMinutes": {
            "type": "number"
          },
          "cancellationPolicyPercentage": {
            "type": "number"
          },
          "allowNewPatients": {
            "type": "boolean"
          },
          "allowExistingPatients": {
            "type": "boolean"
          },
          "minimumAge": {
            "type": "number"
          },
          "maximumAge": {
            "type": "number"
          },
          "allowedTags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "color": {
            "type": "string"
          },
          "instructions": {
            "type": "string"
          },
          "requiredDocuments": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "serviceTypeId",
          "name",
          "slug",
          "durationMinutes",
          "price",
          "currency",
          "isActive",
          "requiresAnamnesis",
          "enableOnlineScheduling",
          "minAdvanceMinutes",
          "allowNewPatients",
          "allowExistingPatients"
        ]
      },
      "ClinicServiceSettingsResponseDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "clinicId": {
            "type": "string"
          },
          "section": {
            "type": "string"
          },
          "version": {
            "type": "number"
          },
          "createdBy": {
            "type": "string"
          },
          "createdAt": {
            "type": "string"
          },
          "appliedAt": {
            "type": "string"
          },
          "notes": {
            "type": "string"
          },
          "state": {
            "type": "string",
            "enum": [
              "idle",
              "saving",
              "saved",
              "error"
            ]
          },
          "autoApply": {
            "type": "boolean",
            "description": "Indica se a configuracao e aplicada automaticamente"
          },
          "telemetry": {
            "description": "Telemetria da configuracao",
            "allOf": [
              {
                "$ref": "#/components/schemas/ClinicConfigurationTelemetryResponseDto"
              }
            ]
          },
          "services": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ClinicServiceSettingsItemDto"
            }
          }
        },
        "required": [
          "id",
          "clinicId",
          "section",
          "version",
          "createdBy",
          "createdAt",
          "state",
          "autoApply",
          "services"
        ]
      },
      "ClinicPaymentSplitRuleDto": {
        "type": "object",
        "properties": {
          "recipient": {
            "type": "string",
            "enum": [
              "taxes",
              "gateway",
              "clinic",
              "professional",
              "platform"
            ]
          },
          "percentage": {
            "type": "number"
          },
          "order": {
            "type": "number"
          }
        },
        "required": [
          "recipient",
          "percentage",
          "order"
        ]
      },
      "ClinicPaymentAntifraudDto": {
        "type": "object",
        "properties": {
          "enabled": {
            "type": "boolean"
          },
          "provider": {
            "type": "string"
          },
          "thresholdAmount": {
            "type": "number"
          }
        },
        "required": [
          "enabled"
        ]
      },
      "ClinicPaymentInadimplencyDto": {
        "type": "object",
        "properties": {
          "gracePeriodDays": {
            "type": "number"
          },
          "penaltyPercentage": {
            "type": "number"
          },
          "dailyInterestPercentage": {
            "type": "number"
          },
          "maxRetries": {
            "type": "number"
          },
          "actions": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "gracePeriodDays",
          "actions"
        ]
      },
      "ClinicPaymentRefundPolicyDto": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "automatic",
              "manual",
              "partial"
            ]
          },
          "processingTimeHours": {
            "type": "number"
          },
          "feePercentage": {
            "type": "number"
          },
          "allowPartialRefund": {
            "type": "boolean"
          }
        },
        "required": [
          "type",
          "processingTimeHours",
          "allowPartialRefund"
        ]
      },
      "ClinicPaymentCancellationPolicyDto": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "free",
              "percentage",
              "no_refund"
            ]
          },
          "windowMinutes": {
            "type": "number"
          },
          "percentage": {
            "type": "number"
          },
          "message": {
            "type": "string"
          }
        },
        "required": [
          "type"
        ]
      },
      "ClinicPaymentSettingsPayloadDto": {
        "type": "object",
        "properties": {
          "provider": {
            "type": "string",
            "enum": [
              "asaas"
            ]
          },
          "credentialsId": {
            "type": "string"
          },
          "sandboxMode": {
            "type": "boolean"
          },
          "splitRules": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ClinicPaymentSplitRuleDto"
            }
          },
          "roundingStrategy": {
            "type": "string",
            "enum": [
              "half_even"
            ]
          },
          "antifraud": {
            "$ref": "#/components/schemas/ClinicPaymentAntifraudDto"
          },
          "inadimplencyRule": {
            "$ref": "#/components/schemas/ClinicPaymentInadimplencyDto"
          },
          "refundPolicy": {
            "$ref": "#/components/schemas/ClinicPaymentRefundPolicyDto"
          },
          "cancellationPolicies": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ClinicPaymentCancellationPolicyDto"
            }
          },
          "bankAccountId": {
            "type": "string"
          }
        },
        "required": [
          "provider",
          "credentialsId",
          "sandboxMode",
          "splitRules",
          "roundingStrategy",
          "antifraud",
          "inadimplencyRule",
          "refundPolicy",
          "cancellationPolicies"
        ]
      },
      "ClinicPaymentSettingsResponseDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "clinicId": {
            "type": "string"
          },
          "section": {
            "type": "string"
          },
          "version": {
            "type": "number"
          },
          "createdBy": {
            "type": "string"
          },
          "createdAt": {
            "type": "string"
          },
          "appliedAt": {
            "type": "string"
          },
          "notes": {
            "type": "string"
          },
          "state": {
            "type": "string",
            "enum": [
              "idle",
              "saving",
              "saved",
              "error"
            ]
          },
          "autoApply": {
            "type": "boolean",
            "description": "Indica se a configuracao e aplicada automaticamente"
          },
          "telemetry": {
            "description": "Telemetria da configuracao",
            "allOf": [
              {
                "$ref": "#/components/schemas/ClinicConfigurationTelemetryResponseDto"
              }
            ]
          },
          "payload": {
            "$ref": "#/components/schemas/ClinicPaymentSettingsPayloadDto"
          }
        },
        "required": [
          "id",
          "clinicId",
          "section",
          "version",
          "createdBy",
          "createdAt",
          "state",
          "autoApply",
          "payload"
        ]
      },
      "ClinicIntegrationWhatsAppTemplateDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": [
              "approved",
              "pending",
              "rejected",
              "suspended"
            ]
          },
          "category": {
            "type": "string"
          },
          "lastUpdatedAt": {
            "type": "string"
          }
        },
        "required": [
          "name",
          "status"
        ]
      },
      "ClinicIntegrationWhatsAppQuietHoursDto": {
        "type": "object",
        "properties": {
          "start": {
            "type": "string"
          },
          "end": {
            "type": "string"
          },
          "timezone": {
            "type": "string"
          }
        },
        "required": [
          "start",
          "end"
        ]
      },
      "ClinicIntegrationWhatsAppSettingsDto": {
        "type": "object",
        "properties": {
          "enabled": {
            "type": "boolean"
          },
          "provider": {
            "type": "string"
          },
          "businessNumber": {
            "type": "string"
          },
          "instanceStatus": {
            "type": "string"
          },
          "qrCodeUrl": {
            "type": "string"
          },
          "templates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ClinicIntegrationWhatsAppTemplateDto"
            }
          },
          "quietHours": {
            "$ref": "#/components/schemas/ClinicIntegrationWhatsAppQuietHoursDto"
          },
          "webhookUrl": {
            "type": "string"
          }
        },
        "required": [
          "enabled",
          "templates"
        ]
      },
      "ClinicIntegrationGoogleCalendarSettingsDto": {
        "type": "object",
        "properties": {
          "enabled": {
            "type": "boolean"
          },
          "syncMode": {
            "type": "string",
            "enum": [
              "one_way",
              "two_way"
            ]
          },
          "conflictPolicy": {
            "type": "string",
            "enum": [
              "onterapi_wins",
              "google_wins",
              "ask_user"
            ]
          },
          "requireValidationForExternalEvents": {
            "type": "boolean"
          },
          "defaultCalendarId": {
            "type": "string"
          },
          "hidePatientName": {
            "type": "boolean"
          },
          "prefix": {
            "type": "string"
          }
        },
        "required": [
          "enabled",
          "syncMode",
          "conflictPolicy",
          "requireValidationForExternalEvents"
        ]
      },
      "ClinicIntegrationEmailTrackingDto": {
        "type": "object",
        "properties": {
          "open": {
            "type": "boolean"
          },
          "click": {
            "type": "boolean"
          },
          "bounce": {
            "type": "boolean"
          }
        },
        "required": [
          "open",
          "click",
          "bounce"
        ]
      },
      "ClinicIntegrationEmailSettingsDto": {
        "type": "object",
        "properties": {
          "enabled": {
            "type": "boolean"
          },
          "provider": {
            "type": "string"
          },
          "fromName": {
            "type": "string"
          },
          "fromEmail": {
            "type": "string"
          },
          "replyTo": {
            "type": "string"
          },
          "tracking": {
            "$ref": "#/components/schemas/ClinicIntegrationEmailTrackingDto"
          },
          "templates": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "enabled",
          "tracking"
        ]
      },
      "ClinicIntegrationWebhookDto": {
        "type": "object",
        "properties": {
          "event": {
            "type": "string"
          },
          "url": {
            "type": "string"
          },
          "active": {
            "type": "boolean"
          }
        },
        "required": [
          "event",
          "url",
          "active"
        ]
      },
      "ClinicIntegrationSettingsPayloadDto": {
        "type": "object",
        "properties": {
          "whatsapp": {
            "$ref": "#/components/schemas/ClinicIntegrationWhatsAppSettingsDto"
          },
          "googleCalendar": {
            "$ref": "#/components/schemas/ClinicIntegrationGoogleCalendarSettingsDto"
          },
          "email": {
            "$ref": "#/components/schemas/ClinicIntegrationEmailSettingsDto"
          },
          "webhooks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ClinicIntegrationWebhookDto"
            }
          },
          "metadata": {
            "type": "object"
          }
        },
        "required": [
          "whatsapp",
          "googleCalendar",
          "email",
          "webhooks"
        ]
      },
      "ClinicIntegrationSettingsResponseDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "clinicId": {
            "type": "string"
          },
          "section": {
            "type": "string"
          },
          "version": {
            "type": "number"
          },
          "createdBy": {
            "type": "string"
          },
          "createdAt": {
            "type": "string"
          },
          "appliedAt": {
            "type": "string"
          },
          "notes": {
            "type": "string"
          },
          "state": {
            "type": "string",
            "enum": [
              "idle",
              "saving",
              "saved",
              "error"
            ]
          },
          "autoApply": {
            "type": "boolean",
            "description": "Indica se a configuracao e aplicada automaticamente"
          },
          "telemetry": {
            "description": "Telemetria da configuracao",
            "allOf": [
              {
                "$ref": "#/components/schemas/ClinicConfigurationTelemetryResponseDto"
              }
            ]
          },
          "payload": {
            "$ref": "#/components/schemas/ClinicIntegrationSettingsPayloadDto"
          }
        },
        "required": [
          "id",
          "clinicId",
          "section",
          "version",
          "createdBy",
          "createdAt",
          "state",
          "autoApply",
          "payload"
        ]
      },
      "ClinicNotificationSettingsQuietHoursDto": {
        "type": "object",
        "properties": {
          "start": {
            "type": "string"
          },
          "end": {
            "type": "string"
          },
          "timezone": {
            "type": "string"
          }
        },
        "required": [
          "start",
          "end"
        ]
      },
      "ClinicNotificationSettingsChannelDto": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "email",
              "whatsapp",
              "sms",
              "push",
              "in_app"
            ]
          },
          "enabled": {
            "type": "boolean"
          },
          "defaultEnabled": {
            "type": "boolean"
          },
          "quietHours": {
            "$ref": "#/components/schemas/ClinicNotificationSettingsQuietHoursDto"
          }
        },
        "required": [
          "type",
          "enabled",
          "defaultEnabled"
        ]
      },
      "ClinicNotificationSettingsTemplateVariableDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "required": {
            "type": "boolean"
          }
        },
        "required": [
          "name",
          "required"
        ]
      },
      "ClinicNotificationSettingsTemplateDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "event": {
            "type": "string"
          },
          "channel": {
            "type": "string",
            "enum": [
              "email",
              "whatsapp",
              "sms",
              "push",
              "in_app"
            ]
          },
          "version": {
            "type": "string"
          },
          "active": {
            "type": "boolean"
          },
          "language": {
            "type": "string"
          },
          "abGroup": {
            "type": "string"
          },
          "variables": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ClinicNotificationSettingsTemplateVariableDto"
            }
          }
        },
        "required": [
          "id",
          "event",
          "channel",
          "version",
          "active",
          "variables"
        ]
      },
      "ClinicNotificationSettingsRuleDto": {
        "type": "object",
        "properties": {
          "event": {
            "type": "string"
          },
          "channels": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "enabled": {
            "type": "boolean"
          }
        },
        "required": [
          "event",
          "channels",
          "enabled"
        ]
      },
      "ClinicNotificationSettingsPayloadDto": {
        "type": "object",
        "properties": {
          "channels": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ClinicNotificationSettingsChannelDto"
            }
          },
          "templates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ClinicNotificationSettingsTemplateDto"
            }
          },
          "rules": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ClinicNotificationSettingsRuleDto"
            }
          },
          "quietHours": {
            "$ref": "#/components/schemas/ClinicNotificationSettingsQuietHoursDto"
          },
          "events": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "metadata": {
            "type": "object"
          }
        },
        "required": [
          "channels",
          "templates",
          "rules"
        ]
      },
      "ClinicNotificationSettingsResponseDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "clinicId": {
            "type": "string"
          },
          "section": {
            "type": "string"
          },
          "version": {
            "type": "number"
          },
          "createdBy": {
            "type": "string"
          },
          "createdAt": {
            "type": "string"
          },
          "appliedAt": {
            "type": "string"
          },
          "notes": {
            "type": "string"
          },
          "state": {
            "type": "string",
            "enum": [
              "idle",
              "saving",
              "saved",
              "error"
            ]
          },
          "autoApply": {
            "type": "boolean",
            "description": "Indica se a configuracao e aplicada automaticamente"
          },
          "telemetry": {
            "description": "Telemetria da configuracao",
            "allOf": [
              {
                "$ref": "#/components/schemas/ClinicConfigurationTelemetryResponseDto"
              }
            ]
          },
          "payload": {
            "$ref": "#/components/schemas/ClinicNotificationSettingsPayloadDto"
          }
        },
        "required": [
          "id",
          "clinicId",
          "section",
          "version",
          "createdBy",
          "createdAt",
          "state",
          "autoApply",
          "payload"
        ]
      },
      "ClinicBrandingPaletteDto": {
        "type": "object",
        "properties": {
          "primary": {
            "type": "string"
          },
          "secondary": {
            "type": "string"
          },
          "accent": {
            "type": "string"
          },
          "background": {
            "type": "string"
          },
          "surface": {
            "type": "string"
          },
          "text": {
            "type": "string"
          }
        },
        "required": [
          "primary"
        ]
      },
      "ClinicBrandingTypographyDto": {
        "type": "object",
        "properties": {
          "primaryFont": {
            "type": "string"
          },
          "secondaryFont": {
            "type": "string"
          },
          "headingWeight": {
            "type": "number"
          },
          "bodyWeight": {
            "type": "number"
          }
        },
        "required": [
          "primaryFont"
        ]
      },
      "ClinicBrandingPreviewDto": {
        "type": "object",
        "properties": {
          "mode": {
            "type": "string"
          },
          "generatedAt": {
            "type": "string"
          },
          "previewUrl": {
            "type": "string"
          }
        },
        "required": [
          "mode"
        ]
      },
      "ClinicBrandingSettingsPayloadDto": {
        "type": "object",
        "properties": {
          "logoUrl": {
            "type": "string"
          },
          "darkLogoUrl": {
            "type": "string"
          },
          "palette": {
            "$ref": "#/components/schemas/ClinicBrandingPaletteDto"
          },
          "typography": {
            "$ref": "#/components/schemas/ClinicBrandingTypographyDto"
          },
          "customCss": {
            "type": "string"
          },
          "applyMode": {
            "type": "string"
          },
          "preview": {
            "$ref": "#/components/schemas/ClinicBrandingPreviewDto"
          },
          "versionLabel": {
            "type": "string"
          },
          "metadata": {
            "type": "object"
          }
        },
        "required": [
          "applyMode"
        ]
      },
      "ClinicBrandingSettingsResponseDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "clinicId": {
            "type": "string"
          },
          "section": {
            "type": "string"
          },
          "version": {
            "type": "number"
          },
          "createdBy": {
            "type": "string"
          },
          "createdAt": {
            "type": "string"
          },
          "appliedAt": {
            "type": "string"
          },
          "notes": {
            "type": "string"
          },
          "state": {
            "type": "string",
            "enum": [
              "idle",
              "saving",
              "saved",
              "error"
            ]
          },
          "autoApply": {
            "type": "boolean",
            "description": "Indica se a configuracao e aplicada automaticamente"
          },
          "telemetry": {
            "description": "Telemetria da configuracao",
            "allOf": [
              {
                "$ref": "#/components/schemas/ClinicConfigurationTelemetryResponseDto"
              }
            ]
          },
          "payload": {
            "$ref": "#/components/schemas/ClinicBrandingSettingsPayloadDto"
          }
        },
        "required": [
          "id",
          "clinicId",
          "section",
          "version",
          "createdBy",
          "createdAt",
          "state",
          "autoApply",
          "payload"
        ]
      },
      "ClinicHoldSettingsDto": {
        "type": "object",
        "properties": {
          "ttlMinutes": {
            "type": "number"
          },
          "minAdvanceMinutes": {
            "type": "number"
          },
          "maxAdvanceMinutes": {
            "type": "number"
          },
          "allowOverbooking": {
            "type": "boolean"
          },
          "overbookingThreshold": {
            "type": "number"
          },
          "resourceMatchingStrict": {
            "type": "boolean"
          }
        },
        "required": [
          "ttlMinutes",
          "minAdvanceMinutes",
          "allowOverbooking",
          "resourceMatchingStrict"
        ]
      },
      "ClinicHoldSettingsResponseDto": {
        "type": "object",
        "properties": {
          "clinicId": {
            "type": "string"
          },
          "tenantId": {
            "type": "string"
          },
          "holdSettings": {
            "$ref": "#/components/schemas/ClinicHoldSettingsDto"
          }
        },
        "required": [
          "clinicId",
          "tenantId",
          "holdSettings"
        ]
      },
      "ClinicTeamSettingsQuotaDto": {
        "type": "object",
        "properties": {
          "role": {
            "type": "string",
            "enum": [
              "CLINIC_OWNER",
              "MANAGER",
              "PROFESSIONAL",
              "SECRETARY"
            ]
          },
          "limit": {
            "type": "number"
          }
        },
        "required": [
          "role",
          "limit"
        ]
      },
      "ClinicTeamSettingsPayloadDto": {
        "type": "object",
        "properties": {
          "quotas": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ClinicTeamSettingsQuotaDto"
            }
          },
          "allowExternalInvitations": {
            "type": "boolean"
          },
          "defaultMemberStatus": {
            "type": "string",
            "enum": [
              "pending_invitation",
              "active",
              "inactive",
              "suspended"
            ]
          },
          "requireFinancialClearance": {
            "type": "boolean",
            "description": "Bloqueia aceite de convite quando ha pendencias financeiras"
          },
          "metadata": {
            "type": "object"
          }
        },
        "required": [
          "quotas",
          "allowExternalInvitations",
          "defaultMemberStatus",
          "requireFinancialClearance"
        ]
      },
      "ClinicTeamSettingsResponseDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "clinicId": {
            "type": "string"
          },
          "section": {
            "type": "string"
          },
          "version": {
            "type": "number"
          },
          "createdBy": {
            "type": "string"
          },
          "createdAt": {
            "type": "string"
          },
          "appliedAt": {
            "type": "string"
          },
          "notes": {
            "type": "string"
          },
          "state": {
            "type": "string",
            "enum": [
              "idle",
              "saving",
              "saved",
              "error"
            ]
          },
          "autoApply": {
            "type": "boolean",
            "description": "Indica se a configuracao e aplicada automaticamente"
          },
          "telemetry": {
            "description": "Telemetria da configuracao",
            "allOf": [
              {
                "$ref": "#/components/schemas/ClinicConfigurationTelemetryResponseDto"
              }
            ]
          },
          "payload": {
            "$ref": "#/components/schemas/ClinicTeamSettingsPayloadDto"
          }
        },
        "required": [
          "id",
          "clinicId",
          "section",
          "version",
          "createdBy",
          "createdAt",
          "state",
          "autoApply",
          "payload"
        ]
      },
      "ClinicScheduleIntervalDto": {
        "type": "object",
        "properties": {
          "start": {
            "type": "string"
          },
          "end": {
            "type": "string"
          }
        },
        "required": [
          "start",
          "end"
        ]
      },
      "ClinicScheduleWorkingDayDto": {
        "type": "object",
        "properties": {
          "dayOfWeek": {
            "type": "number"
          },
          "active": {
            "type": "boolean"
          },
          "intervals": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ClinicScheduleIntervalDto"
            }
          }
        },
        "required": [
          "dayOfWeek",
          "active",
          "intervals"
        ]
      },
      "ClinicScheduleExceptionPeriodDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "start": {
            "type": "string"
          },
          "end": {
            "type": "string"
          },
          "appliesTo": {
            "type": "string",
            "enum": [
              "clinic",
              "professional",
              "resource"
            ]
          },
          "resourceIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "id",
          "name",
          "start",
          "end",
          "appliesTo"
        ]
      },
      "ClinicScheduleHolidayDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "date": {
            "type": "string"
          },
          "scope": {
            "type": "string",
            "enum": [
              "national",
              "state",
              "city",
              "local"
            ]
          }
        },
        "required": [
          "id",
          "name",
          "date",
          "scope"
        ]
      },
      "ClinicScheduleSettingsPayloadDto": {
        "type": "object",
        "properties": {
          "timezone": {
            "type": "string"
          },
          "workingDays": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ClinicScheduleWorkingDayDto"
            }
          },
          "exceptionPeriods": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ClinicScheduleExceptionPeriodDto"
            }
          },
          "holidays": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ClinicScheduleHolidayDto"
            }
          },
          "autosaveIntervalSeconds": {
            "type": "number"
          },
          "conflictResolution": {
            "type": "string",
            "enum": [
              "server_wins",
              "client_wins",
              "merge",
              "ask_user"
            ]
          }
        },
        "required": [
          "timezone",
          "workingDays",
          "exceptionPeriods",
          "holidays",
          "autosaveIntervalSeconds",
          "conflictResolution"
        ]
      },
      "ClinicScheduleSettingsResponseDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "clinicId": {
            "type": "string"
          },
          "section": {
            "type": "string"
          },
          "version": {
            "type": "number"
          },
          "createdBy": {
            "type": "string"
          },
          "createdAt": {
            "type": "string"
          },
          "appliedAt": {
            "type": "string"
          },
          "notes": {
            "type": "string"
          },
          "state": {
            "type": "string",
            "enum": [
              "idle",
              "saving",
              "saved",
              "error"
            ]
          },
          "autoApply": {
            "type": "boolean",
            "description": "Indica se a configuracao e aplicada automaticamente"
          },
          "telemetry": {
            "description": "Telemetria da configuracao",
            "allOf": [
              {
                "$ref": "#/components/schemas/ClinicConfigurationTelemetryResponseDto"
              }
            ]
          },
          "payload": {
            "$ref": "#/components/schemas/ClinicScheduleSettingsPayloadDto"
          }
        },
        "required": [
          "id",
          "clinicId",
          "section",
          "version",
          "createdBy",
          "createdAt",
          "state",
          "autoApply",
          "payload"
        ]
      },
      "ClinicTemplatePropagationSectionDto": {
        "type": "object",
        "properties": {
          "section": {
            "type": "string"
          },
          "templateVersionId": {
            "type": "string"
          },
          "templateVersionNumber": {
            "type": "number"
          },
          "propagatedVersionId": {
            "type": "string"
          },
          "propagatedAt": {
            "type": "string"
          },
          "triggeredBy": {
            "type": "string"
          },
          "overrideId": {
            "type": "string"
          },
          "overrideVersion": {
            "type": "number"
          },
          "overrideHash": {
            "type": "string"
          },
          "overrideUpdatedAt": {
            "type": "string"
          },
          "overrideUpdatedBy": {
            "type": "string"
          },
          "overrideAppliedVersionId": {
            "type": "string"
          }
        },
        "required": [
          "section",
          "templateVersionId",
          "propagatedVersionId",
          "propagatedAt",
          "triggeredBy"
        ]
      },
      "ClinicTemplatePropagationResponseDto": {
        "type": "object",
        "properties": {
          "templateClinicId": {
            "type": "string"
          },
          "lastPropagationAt": {
            "type": "string"
          },
          "lastTriggeredBy": {
            "type": "string"
          },
          "sections": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ClinicTemplatePropagationSectionDto"
            }
          }
        },
        "required": [
          "sections"
        ]
      },
      "ClinicConfigurationVersionResponseDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Identificador da versao"
          },
          "clinicId": {
            "type": "string",
            "description": "Identificador da clinica"
          },
          "section": {
            "type": "string",
            "description": "Secao configurada",
            "example": "general"
          },
          "version": {
            "type": "number",
            "description": "Numero da versao"
          },
          "createdBy": {
            "type": "string",
            "description": "Usuario responsavel pela alteracao"
          },
          "createdAt": {
            "type": "string",
            "description": "Data de criacao da versao"
          },
          "appliedAt": {
            "type": "string",
            "description": "Data de aplicacao da versao"
          },
          "notes": {
            "type": "string",
            "description": "Notas associadas"
          },
          "state": {
            "type": "string",
            "enum": [
              "idle",
              "saving",
              "saved",
              "error"
            ]
          },
          "autoApply": {
            "type": "boolean",
            "description": "Indica se a versao e aplicada automaticamente"
          },
          "telemetry": {
            "description": "Telemetria associada a configuracao",
            "allOf": [
              {
                "$ref": "#/components/schemas/ClinicConfigurationTelemetryResponseDto"
              }
            ]
          },
          "payload": {
            "type": "object",
            "description": "Payload salvo da configuracao"
          }
        },
        "required": [
          "id",
          "clinicId",
          "section",
          "version",
          "createdBy",
          "createdAt",
          "state",
          "autoApply",
          "payload"
        ]
      },
      "ClinicSummaryDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "tenantId": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "slug": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "holdSettings": {
            "$ref": "#/components/schemas/ClinicHoldSettingsDto"
          }
        },
        "required": [
          "id",
          "tenantId",
          "name",
          "slug",
          "status",
          "holdSettings"
        ]
      },
      "ClinicManagementClinicMetricsDto": {
        "type": "object",
        "properties": {
          "revenue": {
            "type": "number"
          },
          "appointments": {
            "type": "number"
          },
          "activePatients": {
            "type": "number"
          },
          "occupancyRate": {
            "type": "number"
          },
          "satisfactionScore": {
            "type": "number"
          },
          "contributionMargin": {
            "type": "number"
          }
        },
        "required": [
          "revenue",
          "appointments",
          "activePatients",
          "occupancyRate"
        ]
      },
      "ClinicManagementClinicFinancialsDto": {
        "type": "object",
        "properties": {
          "revenue": {
            "type": "number"
          },
          "expenses": {
            "type": "number"
          },
          "profit": {
            "type": "number"
          },
          "margin": {
            "type": "number"
          },
          "contributionPercentage": {
            "type": "number"
          }
        },
        "required": [
          "revenue",
          "expenses",
          "profit",
          "margin",
          "contributionPercentage"
        ]
      },
      "ClinicDashboardAlertDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "clinicId": {
            "type": "string"
          },
          "tenantId": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "channel": {
            "type": "string"
          },
          "triggeredBy": {
            "type": "string"
          },
          "triggeredAt": {
            "type": "string"
          },
          "resolvedAt": {
            "type": "string"
          },
          "resolvedBy": {
            "type": "string"
          },
          "payload": {
            "type": "object"
          }
        },
        "required": [
          "id",
          "clinicId",
          "tenantId",
          "type",
          "channel",
          "triggeredBy",
          "triggeredAt",
          "payload"
        ]
      },
      "ClinicManagementTeamDistributionDto": {
        "type": "object",
        "properties": {
          "role": {
            "type": "string"
          },
          "count": {
            "type": "number"
          }
        },
        "required": [
          "role",
          "count"
        ]
      },
      "ClinicManagementClinicSummaryDto": {
        "type": "object",
        "properties": {
          "clinicId": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "slug": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "primaryOwnerId": {
            "type": "string"
          },
          "lastActivityAt": {
            "type": "string"
          },
          "metrics": {
            "$ref": "#/components/schemas/ClinicManagementClinicMetricsDto"
          },
          "financials": {
            "$ref": "#/components/schemas/ClinicManagementClinicFinancialsDto"
          },
          "alerts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ClinicDashboardAlertDto"
            }
          },
          "teamDistribution": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ClinicManagementTeamDistributionDto"
            }
          },
          "template": {
            "$ref": "#/components/schemas/ClinicTemplatePropagationResponseDto"
          }
        },
        "required": [
          "clinicId",
          "name",
          "status",
          "metrics",
          "alerts"
        ]
      },
      "ClinicDashboardComparisonEntryDto": {
        "type": "object",
        "properties": {
          "clinicId": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "revenue": {
            "type": "number"
          },
          "revenueVariationPercentage": {
            "type": "number"
          },
          "appointments": {
            "type": "number"
          },
          "appointmentsVariationPercentage": {
            "type": "number"
          },
          "activePatients": {
            "type": "number"
          },
          "activePatientsVariationPercentage": {
            "type": "number"
          },
          "occupancyRate": {
            "type": "number"
          },
          "occupancyVariationPercentage": {
            "type": "number"
          },
          "satisfactionScore": {
            "type": "number"
          },
          "satisfactionVariationPercentage": {
            "type": "number"
          },
          "rankingPosition": {
            "type": "number"
          }
        },
        "required": [
          "clinicId",
          "name",
          "revenue",
          "revenueVariationPercentage",
          "appointments",
          "appointmentsVariationPercentage",
          "activePatients",
          "activePatientsVariationPercentage",
          "occupancyRate",
          "occupancyVariationPercentage",
          "rankingPosition"
        ]
      },
      "ClinicDashboardComparisonMetricDto": {
        "type": "object",
        "properties": {
          "metric": {
            "type": "string",
            "enum": [
              "revenue",
              "appointments",
              "patients",
              "occupancy",
              "satisfaction"
            ]
          },
          "entries": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ClinicDashboardComparisonEntryDto"
            }
          }
        },
        "required": [
          "metric",
          "entries"
        ]
      },
      "ClinicDashboardComparisonDto": {
        "type": "object",
        "properties": {
          "period": {
            "type": "object"
          },
          "previousPeriod": {
            "type": "object"
          },
          "metrics": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ClinicDashboardComparisonMetricDto"
            }
          }
        },
        "required": [
          "period",
          "previousPeriod",
          "metrics"
        ]
      },
      "ClinicDashboardForecastProjectionDto": {
        "type": "object",
        "properties": {
          "clinicId": {
            "type": "string"
          },
          "month": {
            "type": "string"
          },
          "projectedRevenue": {
            "type": "number"
          },
          "projectedAppointments": {
            "type": "number"
          },
          "projectedOccupancyRate": {
            "type": "number"
          }
        },
        "required": [
          "clinicId",
          "month",
          "projectedRevenue",
          "projectedAppointments",
          "projectedOccupancyRate"
        ]
      },
      "ClinicDashboardForecastDto": {
        "type": "object",
        "properties": {
          "period": {
            "type": "object"
          },
          "projections": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ClinicDashboardForecastProjectionDto"
            }
          }
        },
        "required": [
          "period",
          "projections"
        ]
      },
      "ClinicManagementFinancialSummaryDto": {
        "type": "object",
        "properties": {
          "totalRevenue": {
            "type": "number"
          },
          "totalExpenses": {
            "type": "number"
          },
          "totalProfit": {
            "type": "number"
          },
          "averageMargin": {
            "type": "number"
          },
          "clinics": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ClinicManagementClinicFinancialsDto"
            }
          }
        },
        "required": [
          "totalRevenue",
          "totalExpenses",
          "totalProfit",
          "averageMargin",
          "clinics"
        ]
      },
      "ClinicManagementOverviewResponseDto": {
        "type": "object",
        "properties": {
          "period": {
            "type": "object"
          },
          "totals": {
            "type": "object"
          },
          "clinics": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ClinicManagementClinicSummaryDto"
            }
          },
          "alerts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ClinicDashboardAlertDto"
            }
          },
          "comparisons": {
            "$ref": "#/components/schemas/ClinicDashboardComparisonDto"
          },
          "forecast": {
            "$ref": "#/components/schemas/ClinicDashboardForecastDto"
          },
          "financials": {
            "$ref": "#/components/schemas/ClinicManagementFinancialSummaryDto"
          }
        },
        "required": [
          "period",
          "totals",
          "clinics",
          "alerts"
        ]
      },
      "ClinicMemberResponseDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "clinicId": {
            "type": "string"
          },
          "tenantId": {
            "type": "string"
          },
          "userId": {
            "type": "string"
          },
          "role": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "scope": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "preferences": {
            "type": "object"
          },
          "joinedAt": {
            "type": "string"
          },
          "suspendedAt": {
            "type": "string"
          },
          "endedAt": {
            "type": "string"
          },
          "createdAt": {
            "type": "string"
          },
          "updatedAt": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "clinicId",
          "tenantId",
          "userId",
          "role",
          "status",
          "scope",
          "createdAt",
          "updatedAt"
        ]
      },
      "ClinicProfessionalTransferResponseDto": {
        "type": "object",
        "properties": {
          "fromMembership": {
            "$ref": "#/components/schemas/ClinicMemberResponseDto"
          },
          "toMembership": {
            "$ref": "#/components/schemas/ClinicMemberResponseDto"
          },
          "effectiveDate": {
            "type": "string"
          },
          "transferPatients": {
            "type": "boolean"
          }
        },
        "required": [
          "fromMembership",
          "toMembership",
          "effectiveDate",
          "transferPatients"
        ]
      },
      "ClinicHoldResponseDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "clinicId": {
            "type": "string"
          },
          "tenantId": {
            "type": "string"
          },
          "professionalId": {
            "type": "string"
          },
          "patientId": {
            "type": "string"
          },
          "serviceTypeId": {
            "type": "string"
          },
          "start": {
            "type": "string"
          },
          "end": {
            "type": "string"
          },
          "ttlExpiresAt": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "locationId": {
            "type": "string"
          },
          "resources": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "idempotencyKey": {
            "type": "string"
          },
          "createdBy": {
            "type": "string"
          },
          "confirmedAt": {
            "type": "string"
          },
          "confirmedBy": {
            "type": "string"
          },
          "cancelledAt": {
            "type": "string"
          },
          "cancelledBy": {
            "type": "string"
          },
          "cancellationReason": {
            "type": "object"
          },
          "createdAt": {
            "type": "string"
          },
          "updatedAt": {
            "type": "string"
          },
          "metadata": {
            "type": "object"
          }
        },
        "required": [
          "id",
          "clinicId",
          "tenantId",
          "professionalId",
          "patientId",
          "serviceTypeId",
          "start",
          "end",
          "ttlExpiresAt",
          "status",
          "idempotencyKey",
          "createdBy",
          "createdAt",
          "updatedAt"
        ]
      },
      "ClinicExternalCalendarEventResponseDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "professionalId": {
            "type": "string",
            "format": "uuid"
          },
          "externalEventId": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": [
              "pending",
              "approved",
              "rejected",
              "cancelled"
            ]
          },
          "startAt": {
            "type": "string",
            "format": "date-time"
          },
          "endAt": {
            "type": "string",
            "format": "date-time"
          },
          "timezone": {
            "type": "string"
          },
          "validationErrors": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "calendarId": {
            "type": "string",
            "nullable": true
          },
          "source": {
            "type": "string",
            "enum": [
              "google_calendar"
            ]
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "id",
          "professionalId",
          "externalEventId",
          "status",
          "startAt",
          "endAt",
          "timezone",
          "source",
          "createdAt",
          "updatedAt"
        ]
      },
      "ClinicGoogleWebhookSchema": {
        "type": "object",
        "properties": {
          "tenantId": {
            "type": "string",
            "format": "uuid"
          },
          "clinicId": {
            "type": "string",
            "format": "uuid"
          },
          "professionalId": {
            "type": "string",
            "format": "uuid"
          },
          "triggeredBy": {
            "type": "string"
          },
          "event": {
            "type": "object",
            "properties": {
              "externalEventId": {
                "type": "string"
              },
              "status": {
                "type": "string",
                "enum": [
                  "confirmed",
                  "tentative",
                  "cancelled"
                ]
              },
              "startAt": {
                "type": "string",
                "format": "date-time"
              },
              "endAt": {
                "type": "string",
                "format": "date-time"
              },
              "timezone": {
                "type": "string"
              },
              "summary": {
                "type": "string"
              },
              "description": {
                "type": "string"
              },
              "locationId": {
                "type": "string"
              },
              "resources": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "calendarId": {
                "type": "string"
              },
              "rawPayload": {
                "type": "object",
                "additionalProperties": {}
              }
            },
            "required": [
              "externalEventId",
              "status",
              "startAt",
              "endAt",
              "timezone"
            ]
          }
        },
        "required": [
          "tenantId",
          "clinicId",
          "professionalId",
          "event"
        ]
      },
      "ClinicAppointmentConfirmationResponseDto": {
        "type": "object",
        "properties": {
          "appointmentId": {
            "type": "string",
            "description": "Identificador do agendamento confirmado",
            "format": "uuid"
          },
          "clinicId": {
            "type": "string",
            "description": "Identificador da clinica",
            "format": "uuid"
          },
          "holdId": {
            "type": "string",
            "description": "Identificador do hold convertido",
            "format": "uuid"
          },
          "paymentTransactionId": {
            "type": "string",
            "description": "Identificador da transacao de pagamento",
            "maxLength": 120
          },
          "confirmedAt": {
            "format": "date-time",
            "type": "string",
            "description": "Data/hora da confirmacao"
          },
          "paymentStatus": {
            "type": "string",
            "description": "Status financeiro apos a confirmacao",
            "enum": [
              "approved",
              "settled",
              "refunded",
              "chargeback",
              "failed"
            ]
          }
        },
        "required": [
          "appointmentId",
          "clinicId",
          "holdId",
          "paymentTransactionId",
          "confirmedAt",
          "paymentStatus"
        ]
      },
      "ClinicDashboardMetricDto": {
        "type": "object",
        "properties": {
          "clinicId": {
            "type": "string"
          },
          "month": {
            "type": "string"
          },
          "revenue": {
            "type": "number"
          },
          "appointments": {
            "type": "number"
          },
          "activePatients": {
            "type": "number"
          },
          "occupancyRate": {
            "type": "number"
          },
          "satisfactionScore": {
            "type": "number"
          },
          "contributionMargin": {
            "type": "number"
          }
        },
        "required": [
          "clinicId",
          "month",
          "revenue",
          "appointments",
          "activePatients",
          "occupancyRate"
        ]
      },
      "ClinicDashboardResponseDto": {
        "type": "object",
        "properties": {
          "period": {
            "type": "object"
          },
          "totals": {
            "type": "object"
          },
          "metrics": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ClinicDashboardMetricDto"
            }
          },
          "alerts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ClinicDashboardAlertDto"
            }
          },
          "comparisons": {
            "$ref": "#/components/schemas/ClinicDashboardComparisonDto"
          },
          "forecast": {
            "$ref": "#/components/schemas/ClinicDashboardForecastDto"
          }
        },
        "required": [
          "period",
          "totals",
          "metrics",
          "alerts"
        ]
      },
      "ClinicServiceCancellationPolicyDto": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "windowMinutes": {
            "type": "number"
          },
          "percentage": {
            "type": "number"
          },
          "message": {
            "type": "string"
          }
        },
        "required": [
          "type"
        ]
      },
      "ClinicServiceEligibilityDto": {
        "type": "object",
        "properties": {
          "allowNewPatients": {
            "type": "boolean"
          },
          "allowExistingPatients": {
            "type": "boolean"
          },
          "minimumAge": {
            "type": "number"
          },
          "maximumAge": {
            "type": "number"
          },
          "allowedTags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "allowNewPatients",
          "allowExistingPatients"
        ]
      },
      "ClinicServiceCustomFieldDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "label": {
            "type": "string"
          },
          "fieldType": {
            "type": "string"
          },
          "required": {
            "type": "boolean"
          },
          "options": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "label",
          "fieldType",
          "required"
        ]
      },
      "ClinicServiceTypeResponseDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "clinicId": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "slug": {
            "type": "string"
          },
          "color": {
            "type": "string"
          },
          "durationMinutes": {
            "type": "number"
          },
          "price": {
            "type": "number"
          },
          "currency": {
            "type": "string"
          },
          "isActive": {
            "type": "boolean"
          },
          "requiresAnamnesis": {
            "type": "boolean"
          },
          "enableOnlineScheduling": {
            "type": "boolean"
          },
          "minAdvanceMinutes": {
            "type": "number"
          },
          "maxAdvanceMinutes": {
            "type": "number"
          },
          "cancellationPolicy": {
            "$ref": "#/components/schemas/ClinicServiceCancellationPolicyDto"
          },
          "eligibility": {
            "$ref": "#/components/schemas/ClinicServiceEligibilityDto"
          },
          "instructions": {
            "type": "string"
          },
          "requiredDocuments": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "customFields": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ClinicServiceCustomFieldDto"
            }
          },
          "createdAt": {
            "type": "string"
          },
          "updatedAt": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "clinicId",
          "name",
          "slug",
          "durationMinutes",
          "price",
          "currency",
          "isActive",
          "requiresAnamnesis",
          "enableOnlineScheduling",
          "minAdvanceMinutes",
          "cancellationPolicy",
          "eligibility",
          "requiredDocuments",
          "customFields",
          "createdAt",
          "updatedAt"
        ]
      },
      "ClinicEconomicAgreementDto": {
        "type": "object",
        "properties": {
          "serviceTypeId": {
            "type": "string"
          },
          "price": {
            "type": "number"
          },
          "currency": {
            "type": "string",
            "enum": [
              "BRL",
              "USD",
              "EUR"
            ]
          },
          "payoutModel": {
            "type": "string",
            "enum": [
              "fixed",
              "percentage"
            ]
          },
          "payoutValue": {
            "type": "number",
            "description": "Valor de repasse ao profissional. Em percentual o intervalo permitido e de 0 a 100; em valor fixo deve ser maior ou igual a zero seguindo a mesma moeda do preco.",
            "minimum": 0
          }
        },
        "required": [
          "serviceTypeId",
          "price",
          "currency",
          "payoutModel",
          "payoutValue"
        ]
      },
      "ClinicInvitationEconomicExampleDto": {
        "type": "object",
        "properties": {
          "currency": {
            "type": "string",
            "enum": [
              "BRL",
              "USD",
              "EUR"
            ]
          },
          "patientPays": {
            "type": "number"
          },
          "professionalReceives": {
            "type": "number"
          },
          "remainder": {
            "type": "number"
          }
        },
        "required": [
          "currency",
          "patientPays",
          "professionalReceives",
          "remainder"
        ]
      },
      "ClinicInvitationEconomicSummaryDto": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ClinicEconomicAgreementDto"
            }
          },
          "orderOfRemainders": {
            "type": "array",
            "minItems": 5,
            "maxItems": 5,
            "description": "Ordem fixa das sobras: impostos  gateway  cl nica  profissional  plataforma. Qualquer diverg ncia gera erro de valida  o.",
            "items": {
              "type": "string",
              "enum": [
                "taxes",
                "gateway",
                "clinic",
                "professional",
                "platform"
              ]
            }
          },
          "roundingStrategy": {
            "type": "string",
            "enum": [
              "half_even"
            ]
          },
          "examples": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ClinicInvitationEconomicExampleDto"
            }
          }
        },
        "required": [
          "items",
          "orderOfRemainders",
          "roundingStrategy"
        ]
      },
      "ClinicInvitationResponseDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "clinicId": {
            "type": "string"
          },
          "tenantId": {
            "type": "string"
          },
          "professionalId": {
            "type": "string"
          },
          "targetEmail": {
            "type": "string"
          },
          "issuedBy": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": [
              "pending",
              "accepted",
              "declined",
              "revoked",
              "expired"
            ]
          },
          "channel": {
            "type": "string",
            "enum": [
              "email",
              "whatsapp"
            ]
          },
          "expiresAt": {
            "type": "string"
          },
          "acceptedAt": {
            "type": "string"
          },
          "acceptedBy": {
            "type": "string"
          },
          "revokedAt": {
            "type": "string"
          },
          "revokedBy": {
            "type": "string"
          },
          "revocationReason": {
            "type": "string"
          },
          "declinedAt": {
            "type": "string"
          },
          "declinedBy": {
            "type": "string"
          },
          "economicSummary": {
            "$ref": "#/components/schemas/ClinicInvitationEconomicSummaryDto"
          },
          "acceptedEconomicSnapshot": {
            "$ref": "#/components/schemas/ClinicInvitationEconomicSummaryDto"
          },
          "metadata": {
            "type": "object"
          },
          "token": {
            "type": "string",
            "description": "Token bruto do convite (apenas na criacao)"
          },
          "createdAt": {
            "type": "string"
          },
          "updatedAt": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "clinicId",
          "tenantId",
          "issuedBy",
          "status",
          "channel",
          "expiresAt",
          "economicSummary",
          "createdAt",
          "updatedAt"
        ]
      },
      "ClinicInvitationListResponseDto": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ClinicInvitationResponseDto"
            }
          },
          "total": {
            "type": "number"
          }
        },
        "required": [
          "data",
          "total"
        ]
      },
      "ClinicMemberListResponseDto": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ClinicMemberResponseDto"
            }
          },
          "total": {
            "type": "number"
          }
        },
        "required": [
          "data",
          "total"
        ]
      },
      "ClinicProfessionalFinancialClearanceResponseDto": {
        "type": "object",
        "properties": {
          "requiresClearance": {
            "type": "boolean"
          },
          "hasPendencies": {
            "type": "boolean"
          },
          "pendingCount": {
            "type": "number",
            "description": "Quantidade de agendamentos com pendencia financeira"
          },
          "statusesEvaluated": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "approved",
                "settled",
                "refunded",
                "chargeback",
                "failed"
              ]
            }
          }
        },
        "required": [
          "requiresClearance",
          "hasPendencies",
          "pendingCount",
          "statusesEvaluated"
        ]
      },
      "ClinicListResponseDto": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ClinicSummaryDto"
            }
          },
          "total": {
            "type": "number"
          }
        },
        "required": [
          "data",
          "total"
        ]
      },
      "ClinicDocumentDto": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "cnpj",
              "cpf",
              "mei"
            ]
          },
          "value": {
            "type": "string"
          }
        },
        "required": [
          "type",
          "value"
        ]
      },
      "ClinicDetailsDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "tenantId": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "slug": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": [
              "draft",
              "pending",
              "active",
              "inactive",
              "suspended"
            ]
          },
          "document": {
            "$ref": "#/components/schemas/ClinicDocumentDto"
          },
          "primaryOwnerId": {
            "type": "string"
          },
          "holdSettings": {
            "$ref": "#/components/schemas/ClinicHoldSettingsDto"
          },
          "configurationVersions": {
            "type": "object",
            "description": "Versoes de configuracao aplicadas por secao"
          },
          "metadata": {
            "type": "object"
          },
          "createdAt": {
            "type": "string"
          },
          "updatedAt": {
            "type": "string"
          },
          "deletedAt": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "tenantId",
          "name",
          "slug",
          "status",
          "primaryOwnerId",
          "holdSettings",
          "configurationVersions",
          "createdAt",
          "updatedAt"
        ]
      },
      "ClinicAuditLogItemDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "tenantId": {
            "type": "string"
          },
          "clinicId": {
            "type": "string"
          },
          "event": {
            "type": "string"
          },
          "performedBy": {
            "type": "string"
          },
          "detail": {
            "type": "object"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          }
        },
        "required": [
          "id",
          "tenantId",
          "event",
          "detail",
          "createdAt"
        ]
      },
      "ClinicAuditLogListResponseDto": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ClinicAuditLogItemDto"
            }
          },
          "total": {
            "type": "number"
          }
        },
        "required": [
          "data",
          "total"
        ]
      },
      "ClinicPaymentLedgerEventDto": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "status_changed",
              "settled",
              "refunded",
              "chargeback"
            ]
          },
          "gatewayStatus": {
            "type": "string"
          },
          "eventType": {
            "type": "string"
          },
          "recordedAt": {
            "type": "string"
          },
          "fingerprint": {
            "type": "string"
          },
          "sandbox": {
            "type": "boolean"
          },
          "metadata": {
            "type": "object"
          }
        },
        "required": [
          "type",
          "gatewayStatus",
          "recordedAt",
          "sandbox"
        ]
      },
      "ClinicPaymentSplitAllocationDto": {
        "type": "object",
        "properties": {
          "recipient": {
            "type": "string",
            "enum": [
              "taxes",
              "gateway",
              "clinic",
              "professional",
              "platform"
            ]
          },
          "percentage": {
            "type": "number"
          },
          "amountCents": {
            "type": "number"
          }
        },
        "required": [
          "recipient",
          "percentage",
          "amountCents"
        ]
      },
      "ClinicPaymentLedgerSettlementDto": {
        "type": "object",
        "properties": {
          "settledAt": {
            "type": "string"
          },
          "baseAmountCents": {
            "type": "number"
          },
          "netAmountCents": {
            "type": "number"
          },
          "split": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ClinicPaymentSplitAllocationDto"
            }
          },
          "remainderCents": {
            "type": "number"
          },
          "fingerprint": {
            "type": "string"
          },
          "gatewayStatus": {
            "type": "string"
          }
        },
        "required": [
          "settledAt",
          "baseAmountCents",
          "split",
          "remainderCents",
          "gatewayStatus"
        ]
      },
      "ClinicPaymentLedgerRefundDto": {
        "type": "object",
        "properties": {
          "refundedAt": {
            "type": "string"
          },
          "amountCents": {
            "type": "number"
          },
          "netAmountCents": {
            "type": "number"
          },
          "fingerprint": {
            "type": "string"
          },
          "gatewayStatus": {
            "type": "string"
          }
        },
        "required": [
          "refundedAt",
          "gatewayStatus"
        ]
      },
      "ClinicPaymentLedgerChargebackDto": {
        "type": "object",
        "properties": {
          "chargebackAt": {
            "type": "string"
          },
          "amountCents": {
            "type": "number"
          },
          "netAmountCents": {
            "type": "number"
          },
          "fingerprint": {
            "type": "string"
          },
          "gatewayStatus": {
            "type": "string"
          }
        },
        "required": [
          "chargebackAt",
          "gatewayStatus"
        ]
      },
      "ClinicPaymentLedgerDto": {
        "type": "object",
        "properties": {
          "currency": {
            "type": "object"
          },
          "lastUpdatedAt": {
            "type": "string"
          },
          "events": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ClinicPaymentLedgerEventDto"
            }
          },
          "settlement": {
            "$ref": "#/components/schemas/ClinicPaymentLedgerSettlementDto"
          },
          "refund": {
            "$ref": "#/components/schemas/ClinicPaymentLedgerRefundDto"
          },
          "chargeback": {
            "$ref": "#/components/schemas/ClinicPaymentLedgerChargebackDto"
          },
          "metadata": {
            "type": "object"
          }
        },
        "required": [
          "currency",
          "lastUpdatedAt",
          "events"
        ]
      },
      "ClinicPaymentLedgerListItemDto": {
        "type": "object",
        "properties": {
          "appointmentId": {
            "type": "string"
          },
          "clinicId": {
            "type": "string"
          },
          "tenantId": {
            "type": "string"
          },
          "serviceTypeId": {
            "type": "string"
          },
          "professionalId": {
            "type": "string"
          },
          "paymentStatus": {
            "type": "string",
            "enum": [
              "approved",
              "settled",
              "refunded",
              "chargeback",
              "failed"
            ]
          },
          "paymentTransactionId": {
            "type": "string"
          },
          "confirmedAt": {
            "format": "date-time",
            "type": "string"
          },
          "ledger": {
            "$ref": "#/components/schemas/ClinicPaymentLedgerDto"
          }
        },
        "required": [
          "appointmentId",
          "clinicId",
          "tenantId",
          "serviceTypeId",
          "professionalId",
          "paymentStatus",
          "paymentTransactionId",
          "confirmedAt",
          "ledger"
        ]
      },
      "ClinicPaymentLedgerListResponseDto": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ClinicPaymentLedgerListItemDto"
            }
          }
        },
        "required": [
          "items"
        ]
      },
      "ClinicPaymentLedgerResponseDto": {
        "type": "object",
        "properties": {
          "appointmentId": {
            "type": "string"
          },
          "clinicId": {
            "type": "string"
          },
          "tenantId": {
            "type": "string"
          },
          "paymentStatus": {
            "type": "string",
            "enum": [
              "approved",
              "settled",
              "refunded",
              "chargeback",
              "failed"
            ]
          },
          "paymentTransactionId": {
            "type": "string"
          },
          "ledger": {
            "$ref": "#/components/schemas/ClinicPaymentLedgerDto"
          }
        },
        "required": [
          "appointmentId",
          "clinicId",
          "tenantId",
          "paymentStatus",
          "paymentTransactionId",
          "ledger"
        ]
      }
    }
  }
}
